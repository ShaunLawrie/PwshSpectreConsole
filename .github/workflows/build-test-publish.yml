name: Publish to PSGallery
env:
 PSGALLERY_API_KEY: ${{ secrets.PSGALLERY_API_KEY }}
on:
  push:
    branches:
     - main
     - prerelease

permissions:
  contents: write

jobs:
  publish-to-psgallery:
    name: Publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Version Bump
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          & .\PwshSpectreConsole\Build.ps1
          $env:PSModulePath = @($env:PSModulePath, ".\PwshSpectreConsole\") -join ":"
          $version = Get-Module PwshSpectreConsole -ListAvailable | Sort-Object -Property Version -Descending | Select-Object -First 1 -ExpandProperty Version
          if($null -eq $version) { throw "Failed to load version" }
          $newVersion = [version]::new($version.Major, $version.Minor + 1, 0)
          Write-Host "Bumping version from $version to $newVersion"
          Update-ModuleManifest -Path .\PwshSpectreConsole\PwshSpectreConsole.psd1 -ModuleVersion $newVersion
          git config --global user.name 'Shaun Lawrie (via GitHub Actions)'
          git config --global user.email 'shaun.r.lawrie@gmail.com'
          git add PwshSpectreConsole/PwshSpectreConsole.psd1
          git commit -m "[skip ci] Bump version to $newVersion"
          git push
      - name: Deploy Package
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Publish-Module -Path "./PwshSpectreConsole/" -Exclude "Build.ps1" -NugetApiKey $env:PSGALLERY_API_KEY
  
  publish-prerelease-to-psgallery:
    name: Publish Prerelease
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prerelease'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Version Bump
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          & ./PwshSpectreConsole/Build.ps1
          $env:PSModulePath = @($env:PSModulePath, ".\PwshSpectreConsole\") -join ":"
          $version = Get-Module PwshSpectreConsole -ListAvailable | Sort-Object -Property Version -Descending | Select-Object -First 1 -ExpandProperty Version
          if($null -eq $version) { throw "Failed to load version" }
          $newVersion = [version]::new($version.Major, $version.Minor, $version.Build + 1)
          Write-Host "Bumping version from $version to $newVersion"
          Update-ModuleManifest -Path .\PwshSpectreConsole\PwshSpectreConsole.psd1 -ModuleVersion $newVersion
          git config --global user.name 'Shaun Lawrie (via GitHub Actions)'
          git config --global user.email 'shaun.r.lawrie@gmail.com'
          git add PwshSpectreConsole/PwshSpectreConsole.psd1
          git commit -m "[skip ci] Bump version to $newVersion"
          git push

          # Publish pre-release version
          Publish-Module -Path "./PwshSpectreConsole/" -Exclude "Build.ps1" -NugetApiKey $env:PSGALLERY_API_KEY -RequiredVersion "$newVersion-prerelease" -AllowPrerelease

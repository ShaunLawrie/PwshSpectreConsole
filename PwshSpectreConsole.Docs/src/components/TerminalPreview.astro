---
import fs from 'fs';
const framesDirectory = './src/components/frames/';

const frame1 = fs.readFileSync(`${framesDirectory}/terminal-preview-1.html`, 'utf8');
const frame2 = fs.readFileSync(`${framesDirectory}/terminal-preview-2.html`, 'utf8');
const frame3 = fs.readFileSync(`${framesDirectory}/terminal-preview-3.html`, 'utf8');
const frame4 = fs.readFileSync(`${framesDirectory}/terminal-preview-4.html`, 'utf8');

let frames = JSON.stringify([
    frame1,
    frame2,
    frame3,
    frame4
]);

const { speed } = Astro.props;
---

<animated-terminal class="animated-terminal mt-0" data-speed={speed} data-frames={frames}>
    <div class="mt-6">
        <div id="terminal-wrapper" class="mt-0 overflow-hidden">
            <div class="spectre-panel">
<pre>
ðŸ˜› What's for dinner?
</pre>
</div>
<pre class="spectre-selection">
<span class="terminal-preview-accent">&gt; Sushi</span>
&nbsp;&nbsp;Pizza
&nbsp;&nbsp;Burgers</span>
&nbsp;
<span class="text-slate-600">(Move up and down to reveal more choices)</span></pre>
        </div>
    </div>
</animated-terminal>

<script>
    class AnimatedTerminal extends HTMLElement {
        constructor() {
            super();

            // Get a reference to the terminal-wrapper id
            const terminalWrapper = this.querySelector('#terminal-wrapper');

            // Get all frames in the terminal
            const frames = JSON.parse(this.getAttribute('data-frames') || '[]');

            // Get speed converted to a number
            const speed = parseInt(this.getAttribute('data-speed') || '1000');

            // Remember the current frame
            let currentFrame = 1;
            
            if (terminalWrapper !== null) {
                // Every {speed} milliseconds show the next frame
                setInterval(() => {

                    terminalWrapper.innerHTML = frames[currentFrame];
                    currentFrame = (currentFrame + 1) % frames.length;
                }, speed);
            }
        }
    }

    customElements.define('animated-terminal', AnimatedTerminal);
</script>
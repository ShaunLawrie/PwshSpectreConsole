<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spectre.Console</name>
    </assembly>
    <members>
        <member name="T:Wcwidth.Unicode">
            <summary>
            Represents a Unicode version.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_4_1_0">
            <summary>
            Unicode version 4.1.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_5_0_0">
            <summary>
            Unicode version 5.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_5_1_0">
            <summary>
            Unicode version 5.1.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_5_2_0">
            <summary>
            Unicode version 5.2.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_6_0_0">
            <summary>
            Unicode version 6.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_6_1_0">
            <summary>
            Unicode version 6.1.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_6_2_0">
            <summary>
            Unicode version 6.2.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_6_3_0">
            <summary>
            Unicode version 6.3.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_7_0_0">
            <summary>
            Unicode version 7.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_8_0_0">
            <summary>
            Unicode version 8.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_9_0_0">
            <summary>
            Unicode version 9.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_10_0_0">
            <summary>
            Unicode version 10.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_11_0_0">
            <summary>
            Unicode version 11.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_12_0_0">
            <summary>
            Unicode version 12.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_12_1_0">
            <summary>
            Unicode version 12.1.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_13_0_0">
            <summary>
            Unicode version 13.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_14_0_0">
            <summary>
            Unicode version 14.0.0.
            </summary>
        </member>
        <member name="F:Wcwidth.Unicode.Version_15_0_0">
            <summary>
            Unicode version 15.0.0.
            </summary>
        </member>
        <member name="T:Wcwidth.UnicodeCalculator">
            <summary>
            A utility for calculating the width of Unicode characters.
            </summary>
        </member>
        <member name="M:Wcwidth.UnicodeCalculator.GetWidth(System.Int32,System.Nullable{Wcwidth.Unicode})">
            <summary>
            Gets the width of a Unicode code point.
            </summary>
            <param name="value">The Unicode code point to calculate the width of.</param>
            <param name="version">The Unicode version to use.</param>
            <returns>The width of the character (-1, 0, 1, 2).</returns>
        </member>
        <member name="M:Wcwidth.UnicodeCalculator.GetWidth(System.Text.Rune,System.Nullable{Wcwidth.Unicode})">
            <summary>
            Gets the width of a Unicode scalar.
            </summary>
            <param name="value">The Unicode scalar to calculate the width of.</param>
            <param name="version">The Unicode version to use.</param>
            <returns>The width of the character (-1, 0, 1, 2).</returns>
        </member>
        <member name="M:Wcwidth.UnicodeCalculator.GetWidth(System.Char,System.Nullable{Wcwidth.Unicode})">
            <summary>
            Gets the width of a UTF-16 code unit.
            </summary>
            <param name="value">The UTF-16 code unit to calculate the width of.</param>
            <param name="version">The Unicode version to use.</param>
            <returns>The width of the character (-1, 0, 1, 2).</returns>
        </member>
        <member name="T:Spectre.Console.AnsiConsole">
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
            <summary>
            A console capable of writing ANSI escape sequences.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsole.Console">
            <summary>
            Gets or sets the underlying <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsole.Cursor">
            <summary>
            Gets the <see cref="T:Spectre.Console.IAnsiConsoleCursor"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsole.Profile">
            <summary>
            Gets the console profile.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Create(Spectre.Console.AnsiConsoleSettings)">
            <summary>
            Creates a new <see cref="T:Spectre.Console.IAnsiConsole"/> instance
            from the provided settings.
            </summary>
            <param name="settings">The settings to use.</param>
            <returns>An <see cref="T:Spectre.Console.IAnsiConsole"/> instance.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Clear">
            <summary>
            Clears the console.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteException(System.Exception,Spectre.Console.ExceptionFormats)">
            <summary>
            Writes an exception to the console.
            </summary>
            <param name="exception">The exception to write to the console.</param>
            <param name="format">The exception format options.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteException(System.Exception,Spectre.Console.ExceptionSettings)">
            <summary>
            Writes an exception to the console.
            </summary>
            <param name="exception">The exception to write to the console.</param>
            <param name="settings">The exception settings.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Live(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Creates a new <see cref="T:Spectre.Console.LiveDisplay"/> instance.
            </summary>
            <param name="target">The target renderable to update.</param>
            <returns>A <see cref="T:Spectre.Console.LiveDisplay"/> instance.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Markup(System.String)">
            <summary>
            Writes the specified markup to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Markup(System.String,System.Object[])">
            <summary>
            Writes the specified markup to the console.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.MarkupInterpolated(System.FormattableString)">
            <summary>
            Writes the specified markup to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            AnsiConsole.MarkupInterpolated($"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Markup(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the specified markup to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.MarkupInterpolated(System.IFormatProvider,System.FormattableString)">
            <summary>
            Writes the specified markup to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            AnsiConsole.MarkupInterpolated(CultureInfo.InvariantCulture, $"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.MarkupLine(System.String)">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.MarkupLine(System.String,System.Object[])">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.MarkupLineInterpolated(System.FormattableString)">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            AnsiConsole.MarkupLineInterpolated($"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.MarkupLine(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.MarkupLineInterpolated(System.IFormatProvider,System.FormattableString)">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            AnsiConsole.MarkupLineInterpolated(CultureInfo.InvariantCulture, $"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Progress">
            <summary>
            Creates a new <see cref="M:Spectre.Console.AnsiConsole.Progress"/> instance.
            </summary>
            <returns>A <see cref="M:Spectre.Console.AnsiConsole.Progress"/> instance.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Status">
            <summary>
            Creates a new <see cref="M:Spectre.Console.AnsiConsole.Status"/> instance.
            </summary>
            <returns>A <see cref="M:Spectre.Console.AnsiConsole.Status"/> instance.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Prompt``1(Spectre.Console.IPrompt{``0})">
            <summary>
            Displays a prompt to the user.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="prompt">The prompt to display.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Ask``1(System.String)">
            <summary>
            Displays a prompt to the user.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="prompt">The prompt markup text.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Ask``1(System.String,``0)">
            <summary>
            Displays a prompt to the user with a given default.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="prompt">The prompt markup text.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Confirm(System.String,System.Boolean)">
            <summary>
            Displays a prompt with two choices, yes or no.
            </summary>
            <param name="prompt">The prompt markup text.</param>
            <param name="defaultValue">Specifies the default answer.</param>
            <returns><c>true</c> if the user selected "yes", otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Record">
            <summary>
            Starts recording the console output.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.ExportText">
            <summary>
            Exports all recorded console output as text.
            </summary>
            <returns>The recorded output as text.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.ExportHtml">
            <summary>
            Exports all recorded console output as HTML text.
            </summary>
            <returns>The recorded output as HTML text.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.ExportCustom(Spectre.Console.Rendering.IAnsiConsoleEncoder)">
            <summary>
            Exports all recorded console output using a custom encoder.
            </summary>
            <param name="encoder">The encoder to use.</param>
            <returns>The recorded output.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Render(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Renders the specified object to the console.
            </summary>
            <param name="renderable">The object to render.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Renders the specified <see cref="T:Spectre.Console.Rendering.IRenderable"/> to the console.
            </summary>
            <param name="renderable">The object to render.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.AlternateScreen(System.Action)">
            <summary>
            Switches to an alternate screen buffer if the terminal supports it.
            </summary>
            <param name="action">The action to execute within the alternate screen buffer.</param>
        </member>
        <member name="P:Spectre.Console.AnsiConsole.Foreground">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsole.Background">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsole.Decoration">
            <summary>
            Gets or sets the text decoration.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Reset">
            <summary>
            Resets colors and text decorations.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.ResetDecoration">
            <summary>
            Resets the current applied text decorations.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.ResetColors">
            <summary>
            Resets the current applied foreground and background colors.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.String)">
            <summary>
            Writes the specified string value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Int32)">
            <summary>
            Writes the text representation of the specified 32-bit
            signed integer value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Int32)">
            <summary>
            Writes the text representation of the specified 32-bit
            signed integer value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.UInt32)">
            <summary>
            Writes the text representation of the specified 32-bit
            unsigned integer value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.UInt32)">
            <summary>
            Writes the text representation of the specified 32-bit
            unsigned integer value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Int64)">
            <summary>
            Writes the text representation of the specified 64-bit
            signed integer value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Int64)">
            <summary>
            Writes the text representation of the specified 64-bit
            signed integer value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.UInt64)">
            <summary>
            Writes the text representation of the specified 64-bit
            unsigned integer value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.UInt64)">
            <summary>
            Writes the text representation of the specified 64-bit
            unsigned integer value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Single)">
            <summary>
            Writes the text representation of the specified single-precision
            floating-point value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Single)">
            <summary>
            Writes the text representation of the specified single-precision
            floating-point value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Double)">
            <summary>
            Writes the text representation of the specified double-precision
            floating-point value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Double)">
            <summary>
            Writes the text representation of the specified double-precision
            floating-point value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Decimal)">
            <summary>
            Writes the text representation of the specified decimal value, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Decimal)">
            <summary>
            Writes the text representation of the specified decimal value, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Boolean)">
            <summary>
            Writes the text representation of the specified boolean value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Boolean)">
            <summary>
            Writes the text representation of the specified boolean value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Char)">
            <summary>
            Writes the specified Unicode character to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Char)">
            <summary>
            Writes the specified Unicode character to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.Char[])">
            <summary>
            Writes the specified array of Unicode characters to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.Char[])">
            <summary>
            Writes the specified array of Unicode characters to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects,
            to the console using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.Write(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects,
            to the console using the specified format information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine">
            <summary>
            Writes an empty line to the console.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.String)">
            <summary>
            Writes the specified string value, followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Int32)">
            <summary>
            Writes the text representation of the specified 32-bit signed integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Int32)">
            <summary>
            Writes the text representation of the specified 32-bit signed integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.UInt32)">
            <summary>
            Writes the text representation of the specified 32-bit unsigned integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.UInt32)">
            <summary>
            Writes the text representation of the specified 32-bit unsigned integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Int64)">
            <summary>
            Writes the text representation of the specified 64-bit signed integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Int64)">
            <summary>
            Writes the text representation of the specified 64-bit signed integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.UInt64)">
            <summary>
            Writes the text representation of the specified 64-bit unsigned integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.UInt64)">
            <summary>
            Writes the text representation of the specified 64-bit unsigned integer value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Single)">
            <summary>
            Writes the text representation of the specified single-precision floating-point
            value, followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Single)">
            <summary>
            Writes the text representation of the specified single-precision floating-point
            value, followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Double)">
            <summary>
            Writes the text representation of the specified double-precision floating-point
            value, followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Double)">
            <summary>
            Writes the text representation of the specified double-precision floating-point
            value, followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Decimal)">
            <summary>
            Writes the text representation of the specified decimal value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Decimal)">
            <summary>
            Writes the text representation of the specified decimal value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Boolean)">
            <summary>
            Writes the text representation of the specified boolean value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Boolean)">
            <summary>
            Writes the text representation of the specified boolean value,
            followed by the current line terminator, to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Char)">
            <summary>
            Writes the specified Unicode character, followed by the current
            line terminator, value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Char)">
            <summary>
            Writes the specified Unicode character, followed by the current
            line terminator, value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.Char[])">
            <summary>
            Writes the specified array of Unicode characters, followed by the current
            line terminator, value to the console.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.Char[])">
            <summary>
            Writes the specified array of Unicode characters, followed by the current
            line terminator, value to the console.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects,
            followed by the current line terminator, to the console
            using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsole.WriteLine(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the text representation of the specified array of objects,
            followed by the current line terminator, to the console
            using the specified format information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="T:Spectre.Console.AnsiConsoleFactory">
            <summary>
            Factory for creating an ANSI console.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleFactory.Create(Spectre.Console.AnsiConsoleSettings)">
            <summary>
            Creates an ANSI console.
            </summary>
            <param name="settings">The settings.</param>
            <returns>An implementation of <see cref="T:Spectre.Console.IAnsiConsole"/>.</returns>
        </member>
        <member name="T:Spectre.Console.AnsiConsoleOutput">
            <summary>
            Represents console output.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleOutput.Writer">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleOutput.IsTerminal">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleOutput.Width">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleOutput.Height">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleOutput.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.AnsiConsoleOutput"/> class.
            </summary>
            <param name="writer">The output writer.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleOutput.SetEncoding(System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.AnsiConsoleSettings">
            <summary>
            Settings used when building a <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleSettings.Ansi">
            <summary>
            Gets or sets a value indicating whether or
            not ANSI escape sequences are supported.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleSettings.ColorSystem">
            <summary>
            Gets or sets the color system to use.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleSettings.Out">
            <summary>
            Gets or sets the out buffer.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleSettings.Interactive">
            <summary>
            Gets or sets a value indicating whether or not the
            terminal is interactive or not.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleSettings.ExclusivityMode">
            <summary>
            Gets or sets the exclusivity mode.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleSettings.Enrichment">
            <summary>
            Gets or sets the profile enrichments settings.
            </summary>
        </member>
        <member name="P:Spectre.Console.AnsiConsoleSettings.EnvironmentVariables">
            <summary>
            Gets or sets the environment variables.
            If not value is provided the default environment variables will be used.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.AnsiConsoleSettings"/> class.
            </summary>
        </member>
        <member name="T:Spectre.Console.AnsiSupport">
            <summary>
            Determines ANSI escape sequence support.
            </summary>
        </member>
        <member name="F:Spectre.Console.AnsiSupport.Detect">
            <summary>
            ANSI escape sequence support should
            be detected by the system.
            </summary>
        </member>
        <member name="F:Spectre.Console.AnsiSupport.Yes">
            <summary>
            ANSI escape sequences are supported.
            </summary>
        </member>
        <member name="F:Spectre.Console.AnsiSupport.No">
            <summary>
            ANSI escape sequences are not supported.
            </summary>
        </member>
        <member name="T:Spectre.Console.BoxBorder">
            <summary>
            Represents a border.
            </summary>
            <summary>
            Represents a border.
            </summary>
        </member>
        <member name="P:Spectre.Console.BoxBorder.SafeBorder">
            <summary>
            Gets the safe border for this border or <c>null</c> if none exist.
            </summary>
        </member>
        <member name="M:Spectre.Console.BoxBorder.GetPart(Spectre.Console.Rendering.BoxBorderPart)">
            <summary>
            Gets the string representation of the specified border part.
            </summary>
            <param name="part">The part to get the character representation for.</param>
            <returns>A character representation of the specified border part.</returns>
        </member>
        <member name="P:Spectre.Console.BoxBorder.None">
            <summary>
            Gets an invisible border.
            </summary>
        </member>
        <member name="P:Spectre.Console.BoxBorder.Ascii">
            <summary>
            Gets an ASCII border.
            </summary>
        </member>
        <member name="P:Spectre.Console.BoxBorder.Double">
            <summary>
            Gets a double border.
            </summary>
        </member>
        <member name="P:Spectre.Console.BoxBorder.Heavy">
            <summary>
            Gets a heavy border.
            </summary>
        </member>
        <member name="P:Spectre.Console.BoxBorder.Rounded">
            <summary>
            Gets a rounded border.
            </summary>
        </member>
        <member name="P:Spectre.Console.BoxBorder.Square">
            <summary>
            Gets a square border.
            </summary>
        </member>
        <member name="T:Spectre.Console.Capabilities">
            <summary>
            Represents console capabilities.
            </summary>
        </member>
        <member name="P:Spectre.Console.Capabilities.ColorSystem">
            <summary>
            Gets or sets the color system.
            </summary>
        </member>
        <member name="P:Spectre.Console.Capabilities.Ansi">
            <summary>
            Gets or sets a value indicating whether or not
            the console supports VT/ANSI control codes.
            </summary>
        </member>
        <member name="P:Spectre.Console.Capabilities.Links">
            <summary>
            Gets or sets a value indicating whether or not
            the console support links.
            </summary>
        </member>
        <member name="P:Spectre.Console.Capabilities.Legacy">
            <summary>
            Gets or sets a value indicating whether or not
            this is a legacy console (cmd.exe) on an OS
            prior to Windows 10.
            </summary>
            <remarks>
            Only relevant when running on Microsoft Windows.
            </remarks>
        </member>
        <member name="P:Spectre.Console.Capabilities.IsTerminal">
            <summary>
            Gets a value indicating whether or not
            the output is a terminal.
            </summary>
        </member>
        <member name="P:Spectre.Console.Capabilities.Interactive">
            <summary>
            Gets or sets a value indicating whether
            or not the console supports interaction.
            </summary>
        </member>
        <member name="P:Spectre.Console.Capabilities.Unicode">
            <summary>
            Gets or sets a value indicating whether
            or not the console supports Unicode.
            </summary>
        </member>
        <member name="P:Spectre.Console.Capabilities.AlternateBuffer">
            <summary>
            Gets or sets a value indicating whether
            or not the console supports alternate buffers.
            </summary>
        </member>
        <member name="M:Spectre.Console.Capabilities.#ctor(Spectre.Console.IAnsiConsoleOutput)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Spectre.Console.Capabilities"/> class.
            </summary>
        </member>
        <member name="T:Spectre.Console.Color">
            <summary>
            Represents a color.
            </summary>
            <summary>
            Represents a color.
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Default">
            <summary>
            Gets the default color.
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.R">
            <summary>
            Gets the red component.
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.G">
            <summary>
            Gets the green component.
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.B">
            <summary>
            Gets the blue component.
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Number">
            <summary>
            Gets the number of the color, if any.
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.IsDefault">
            <summary>
            Gets a value indicating whether or not this is the default color.
            </summary>
        </member>
        <member name="M:Spectre.Console.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Color"/> struct.
            </summary>
            <param name="red">The red component.</param>
            <param name="green">The green component.</param>
            <param name="blue">The blue component.</param>
        </member>
        <member name="M:Spectre.Console.Color.Blend(Spectre.Console.Color,System.Single)">
            <summary>
            Blends two colors.
            </summary>
            <param name="other">The other color.</param>
            <param name="factor">The blend factor.</param>
            <returns>The resulting color.</returns>
        </member>
        <member name="M:Spectre.Console.Color.ToHex">
            <summary>
            Gets the hexadecimal representation of the color.
            </summary>
            <returns>The hexadecimal representation of the color.</returns>
        </member>
        <member name="M:Spectre.Console.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Color.Equals(Spectre.Console.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Color.op_Equality(Spectre.Console.Color,Spectre.Console.Color)">
            <summary>
            Checks if two <see cref="T:Spectre.Console.Color"/> instances are equal.
            </summary>
            <param name="left">The first color instance to compare.</param>
            <param name="right">The second color instance to compare.</param>
            <returns><c>true</c> if the two colors are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.Color.op_Inequality(Spectre.Console.Color,Spectre.Console.Color)">
            <summary>
            Checks if two <see cref="T:Spectre.Console.Color"/> instances are not equal.
            </summary>
            <param name="left">The first color instance to compare.</param>
            <param name="right">The second color instance to compare.</param>
            <returns><c>true</c> if the two colors are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.Color.op_Implicit(System.Int32)~Spectre.Console.Color">
            <summary>
            Converts a <see cref="T:System.Int32"/> to a <see cref="T:Spectre.Console.Color"/>.
            </summary>
            <param name="number">The color number to convert.</param>
        </member>
        <member name="M:Spectre.Console.Color.op_Implicit(System.ConsoleColor)~Spectre.Console.Color">
            <summary>
            Converts a <see cref="T:System.ConsoleColor"/> to a <see cref="T:Spectre.Console.Color"/>.
            </summary>
            <param name="color">The color to convert.</param>
        </member>
        <member name="M:Spectre.Console.Color.op_Implicit(Spectre.Console.Color)~System.ConsoleColor">
            <summary>
            Converts a <see cref="T:Spectre.Console.Color"/> to a <see cref="T:System.ConsoleColor"/>.
            </summary>
            <param name="color">The console color to convert.</param>
        </member>
        <member name="M:Spectre.Console.Color.ToConsoleColor(Spectre.Console.Color)">
            <summary>
            Converts a <see cref="T:Spectre.Console.Color"/> to a <see cref="T:System.ConsoleColor"/>.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>A <see cref="T:System.ConsoleColor"/> representing the <see cref="T:Spectre.Console.Color"/>.</returns>
        </member>
        <member name="M:Spectre.Console.Color.FromInt32(System.Int32)">
            <summary>
            Converts a color number into a <see cref="T:Spectre.Console.Color"/>.
            </summary>
            <param name="number">The color number.</param>
            <returns>The color representing the specified color number.</returns>
        </member>
        <member name="M:Spectre.Console.Color.FromConsoleColor(System.ConsoleColor)">
            <summary>
            Converts a <see cref="T:System.ConsoleColor"/> to a <see cref="T:Spectre.Console.Color"/>.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>A <see cref="T:Spectre.Console.Color"/> representing the <see cref="T:System.ConsoleColor"/>.</returns>
        </member>
        <member name="M:Spectre.Console.Color.ToMarkup">
            <summary>
            Converts the color to a markup string.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the color as markup.</returns>
        </member>
        <member name="M:Spectre.Console.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Color.Black">
            <summary>
            Gets the color "Black" (RGB 0,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Maroon">
            <summary>
            Gets the color "Maroon" (RGB 128,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Green">
            <summary>
            Gets the color "Green" (RGB 0,128,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Olive">
            <summary>
            Gets the color "Olive" (RGB 128,128,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Navy">
            <summary>
            Gets the color "Navy" (RGB 0,0,128).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Purple">
            <summary>
            Gets the color "Purple" (RGB 128,0,128).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Teal">
            <summary>
            Gets the color "Teal" (RGB 0,128,128).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Silver">
            <summary>
            Gets the color "Silver" (RGB 192,192,192).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey">
            <summary>
            Gets the color "Grey" (RGB 128,128,128).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Red">
            <summary>
            Gets the color "Red" (RGB 255,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Lime">
            <summary>
            Gets the color "Lime" (RGB 0,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Yellow">
            <summary>
            Gets the color "Yellow" (RGB 255,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Blue">
            <summary>
            Gets the color "Blue" (RGB 0,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Fuchsia">
            <summary>
            Gets the color "Fuchsia" (RGB 255,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Aqua">
            <summary>
            Gets the color "Aqua" (RGB 0,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.White">
            <summary>
            Gets the color "White" (RGB 255,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey0">
            <summary>
            Gets the color "Grey0" (RGB 0,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.NavyBlue">
            <summary>
            Gets the color "NavyBlue" (RGB 0,0,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkBlue">
            <summary>
            Gets the color "DarkBlue" (RGB 0,0,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Blue3">
            <summary>
            Gets the color "Blue3" (RGB 0,0,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Blue3_1">
            <summary>
            Gets the color "Blue3_1" (RGB 0,0,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Blue1">
            <summary>
            Gets the color "Blue1" (RGB 0,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkGreen">
            <summary>
            Gets the color "DarkGreen" (RGB 0,95,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepSkyBlue4">
            <summary>
            Gets the color "DeepSkyBlue4" (RGB 0,95,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepSkyBlue4_1">
            <summary>
            Gets the color "DeepSkyBlue4_1" (RGB 0,95,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepSkyBlue4_2">
            <summary>
            Gets the color "DeepSkyBlue4_2" (RGB 0,95,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DodgerBlue3">
            <summary>
            Gets the color "DodgerBlue3" (RGB 0,95,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DodgerBlue2">
            <summary>
            Gets the color "DodgerBlue2" (RGB 0,95,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Green4">
            <summary>
            Gets the color "Green4" (RGB 0,135,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SpringGreen4">
            <summary>
            Gets the color "SpringGreen4" (RGB 0,135,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Turquoise4">
            <summary>
            Gets the color "Turquoise4" (RGB 0,135,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepSkyBlue3">
            <summary>
            Gets the color "DeepSkyBlue3" (RGB 0,135,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepSkyBlue3_1">
            <summary>
            Gets the color "DeepSkyBlue3_1" (RGB 0,135,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DodgerBlue1">
            <summary>
            Gets the color "DodgerBlue1" (RGB 0,135,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Green3">
            <summary>
            Gets the color "Green3" (RGB 0,175,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SpringGreen3">
            <summary>
            Gets the color "SpringGreen3" (RGB 0,175,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkCyan">
            <summary>
            Gets the color "DarkCyan" (RGB 0,175,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSeaGreen">
            <summary>
            Gets the color "LightSeaGreen" (RGB 0,175,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepSkyBlue2">
            <summary>
            Gets the color "DeepSkyBlue2" (RGB 0,175,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepSkyBlue1">
            <summary>
            Gets the color "DeepSkyBlue1" (RGB 0,175,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Green3_1">
            <summary>
            Gets the color "Green3_1" (RGB 0,215,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SpringGreen3_1">
            <summary>
            Gets the color "SpringGreen3_1" (RGB 0,215,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SpringGreen2">
            <summary>
            Gets the color "SpringGreen2" (RGB 0,215,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Cyan3">
            <summary>
            Gets the color "Cyan3" (RGB 0,215,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkTurquoise">
            <summary>
            Gets the color "DarkTurquoise" (RGB 0,215,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Turquoise2">
            <summary>
            Gets the color "Turquoise2" (RGB 0,215,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Green1">
            <summary>
            Gets the color "Green1" (RGB 0,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SpringGreen2_1">
            <summary>
            Gets the color "SpringGreen2_1" (RGB 0,255,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SpringGreen1">
            <summary>
            Gets the color "SpringGreen1" (RGB 0,255,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumSpringGreen">
            <summary>
            Gets the color "MediumSpringGreen" (RGB 0,255,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Cyan2">
            <summary>
            Gets the color "Cyan2" (RGB 0,255,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Cyan1">
            <summary>
            Gets the color "Cyan1" (RGB 0,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkRed">
            <summary>
            Gets the color "DarkRed" (RGB 95,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink4">
            <summary>
            Gets the color "DeepPink4" (RGB 95,0,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Purple4">
            <summary>
            Gets the color "Purple4" (RGB 95,0,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Purple4_1">
            <summary>
            Gets the color "Purple4_1" (RGB 95,0,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Purple3">
            <summary>
            Gets the color "Purple3" (RGB 95,0,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.BlueViolet">
            <summary>
            Gets the color "BlueViolet" (RGB 95,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Orange4">
            <summary>
            Gets the color "Orange4" (RGB 95,95,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey37">
            <summary>
            Gets the color "Grey37" (RGB 95,95,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumPurple4">
            <summary>
            Gets the color "MediumPurple4" (RGB 95,95,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SlateBlue3">
            <summary>
            Gets the color "SlateBlue3" (RGB 95,95,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SlateBlue3_1">
            <summary>
            Gets the color "SlateBlue3_1" (RGB 95,95,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.RoyalBlue1">
            <summary>
            Gets the color "RoyalBlue1" (RGB 95,95,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Chartreuse4">
            <summary>
            Gets the color "Chartreuse4" (RGB 95,135,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen4">
            <summary>
            Gets the color "DarkSeaGreen4" (RGB 95,135,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.PaleTurquoise4">
            <summary>
            Gets the color "PaleTurquoise4" (RGB 95,135,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SteelBlue">
            <summary>
            Gets the color "SteelBlue" (RGB 95,135,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SteelBlue3">
            <summary>
            Gets the color "SteelBlue3" (RGB 95,135,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.CornflowerBlue">
            <summary>
            Gets the color "CornflowerBlue" (RGB 95,135,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Chartreuse3">
            <summary>
            Gets the color "Chartreuse3" (RGB 95,175,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen4_1">
            <summary>
            Gets the color "DarkSeaGreen4_1" (RGB 95,175,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.CadetBlue">
            <summary>
            Gets the color "CadetBlue" (RGB 95,175,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.CadetBlue_1">
            <summary>
            Gets the color "CadetBlue_1" (RGB 95,175,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SkyBlue3">
            <summary>
            Gets the color "SkyBlue3" (RGB 95,175,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SteelBlue1">
            <summary>
            Gets the color "SteelBlue1" (RGB 95,175,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Chartreuse3_1">
            <summary>
            Gets the color "Chartreuse3_1" (RGB 95,215,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.PaleGreen3">
            <summary>
            Gets the color "PaleGreen3" (RGB 95,215,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SeaGreen3">
            <summary>
            Gets the color "SeaGreen3" (RGB 95,215,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Aquamarine3">
            <summary>
            Gets the color "Aquamarine3" (RGB 95,215,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumTurquoise">
            <summary>
            Gets the color "MediumTurquoise" (RGB 95,215,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SteelBlue1_1">
            <summary>
            Gets the color "SteelBlue1_1" (RGB 95,215,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Chartreuse2">
            <summary>
            Gets the color "Chartreuse2" (RGB 95,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SeaGreen2">
            <summary>
            Gets the color "SeaGreen2" (RGB 95,255,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SeaGreen1">
            <summary>
            Gets the color "SeaGreen1" (RGB 95,255,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SeaGreen1_1">
            <summary>
            Gets the color "SeaGreen1_1" (RGB 95,255,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Aquamarine1">
            <summary>
            Gets the color "Aquamarine1" (RGB 95,255,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSlateGray2">
            <summary>
            Gets the color "DarkSlateGray2" (RGB 95,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkRed_1">
            <summary>
            Gets the color "DarkRed_1" (RGB 135,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink4_1">
            <summary>
            Gets the color "DeepPink4_1" (RGB 135,0,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkMagenta">
            <summary>
            Gets the color "DarkMagenta" (RGB 135,0,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkMagenta_1">
            <summary>
            Gets the color "DarkMagenta_1" (RGB 135,0,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkViolet">
            <summary>
            Gets the color "DarkViolet" (RGB 135,0,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Purple_1">
            <summary>
            Gets the color "Purple_1" (RGB 135,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Orange4_1">
            <summary>
            Gets the color "Orange4_1" (RGB 135,95,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightPink4">
            <summary>
            Gets the color "LightPink4" (RGB 135,95,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Plum4">
            <summary>
            Gets the color "Plum4" (RGB 135,95,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumPurple3">
            <summary>
            Gets the color "MediumPurple3" (RGB 135,95,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumPurple3_1">
            <summary>
            Gets the color "MediumPurple3_1" (RGB 135,95,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SlateBlue1">
            <summary>
            Gets the color "SlateBlue1" (RGB 135,95,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Yellow4">
            <summary>
            Gets the color "Yellow4" (RGB 135,135,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Wheat4">
            <summary>
            Gets the color "Wheat4" (RGB 135,135,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey53">
            <summary>
            Gets the color "Grey53" (RGB 135,135,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSlateGrey">
            <summary>
            Gets the color "LightSlateGrey" (RGB 135,135,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumPurple">
            <summary>
            Gets the color "MediumPurple" (RGB 135,135,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSlateBlue">
            <summary>
            Gets the color "LightSlateBlue" (RGB 135,135,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Yellow4_1">
            <summary>
            Gets the color "Yellow4_1" (RGB 135,175,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOliveGreen3">
            <summary>
            Gets the color "DarkOliveGreen3" (RGB 135,175,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen">
            <summary>
            Gets the color "DarkSeaGreen" (RGB 135,175,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSkyBlue3">
            <summary>
            Gets the color "LightSkyBlue3" (RGB 135,175,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSkyBlue3_1">
            <summary>
            Gets the color "LightSkyBlue3_1" (RGB 135,175,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SkyBlue2">
            <summary>
            Gets the color "SkyBlue2" (RGB 135,175,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Chartreuse2_1">
            <summary>
            Gets the color "Chartreuse2_1" (RGB 135,215,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOliveGreen3_1">
            <summary>
            Gets the color "DarkOliveGreen3_1" (RGB 135,215,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.PaleGreen3_1">
            <summary>
            Gets the color "PaleGreen3_1" (RGB 135,215,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen3">
            <summary>
            Gets the color "DarkSeaGreen3" (RGB 135,215,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSlateGray3">
            <summary>
            Gets the color "DarkSlateGray3" (RGB 135,215,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SkyBlue1">
            <summary>
            Gets the color "SkyBlue1" (RGB 135,215,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Chartreuse1">
            <summary>
            Gets the color "Chartreuse1" (RGB 135,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightGreen">
            <summary>
            Gets the color "LightGreen" (RGB 135,255,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightGreen_1">
            <summary>
            Gets the color "LightGreen_1" (RGB 135,255,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.PaleGreen1">
            <summary>
            Gets the color "PaleGreen1" (RGB 135,255,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Aquamarine1_1">
            <summary>
            Gets the color "Aquamarine1_1" (RGB 135,255,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSlateGray1">
            <summary>
            Gets the color "DarkSlateGray1" (RGB 135,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Red3">
            <summary>
            Gets the color "Red3" (RGB 175,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink4_2">
            <summary>
            Gets the color "DeepPink4_2" (RGB 175,0,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumVioletRed">
            <summary>
            Gets the color "MediumVioletRed" (RGB 175,0,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Magenta3">
            <summary>
            Gets the color "Magenta3" (RGB 175,0,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkViolet_1">
            <summary>
            Gets the color "DarkViolet_1" (RGB 175,0,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Purple_2">
            <summary>
            Gets the color "Purple_2" (RGB 175,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOrange3">
            <summary>
            Gets the color "DarkOrange3" (RGB 175,95,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.IndianRed">
            <summary>
            Gets the color "IndianRed" (RGB 175,95,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.HotPink3">
            <summary>
            Gets the color "HotPink3" (RGB 175,95,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumOrchid3">
            <summary>
            Gets the color "MediumOrchid3" (RGB 175,95,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumOrchid">
            <summary>
            Gets the color "MediumOrchid" (RGB 175,95,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumPurple2">
            <summary>
            Gets the color "MediumPurple2" (RGB 175,95,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkGoldenrod">
            <summary>
            Gets the color "DarkGoldenrod" (RGB 175,135,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSalmon3">
            <summary>
            Gets the color "LightSalmon3" (RGB 175,135,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.RosyBrown">
            <summary>
            Gets the color "RosyBrown" (RGB 175,135,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey63">
            <summary>
            Gets the color "Grey63" (RGB 175,135,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumPurple2_1">
            <summary>
            Gets the color "MediumPurple2_1" (RGB 175,135,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumPurple1">
            <summary>
            Gets the color "MediumPurple1" (RGB 175,135,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Gold3">
            <summary>
            Gets the color "Gold3" (RGB 175,175,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkKhaki">
            <summary>
            Gets the color "DarkKhaki" (RGB 175,175,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.NavajoWhite3">
            <summary>
            Gets the color "NavajoWhite3" (RGB 175,175,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey69">
            <summary>
            Gets the color "Grey69" (RGB 175,175,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSteelBlue3">
            <summary>
            Gets the color "LightSteelBlue3" (RGB 175,175,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSteelBlue">
            <summary>
            Gets the color "LightSteelBlue" (RGB 175,175,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Yellow3">
            <summary>
            Gets the color "Yellow3" (RGB 175,215,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOliveGreen3_2">
            <summary>
            Gets the color "DarkOliveGreen3_2" (RGB 175,215,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen3_1">
            <summary>
            Gets the color "DarkSeaGreen3_1" (RGB 175,215,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen2">
            <summary>
            Gets the color "DarkSeaGreen2" (RGB 175,215,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightCyan3">
            <summary>
            Gets the color "LightCyan3" (RGB 175,215,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSkyBlue1">
            <summary>
            Gets the color "LightSkyBlue1" (RGB 175,215,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.GreenYellow">
            <summary>
            Gets the color "GreenYellow" (RGB 175,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOliveGreen2">
            <summary>
            Gets the color "DarkOliveGreen2" (RGB 175,255,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.PaleGreen1_1">
            <summary>
            Gets the color "PaleGreen1_1" (RGB 175,255,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen2_1">
            <summary>
            Gets the color "DarkSeaGreen2_1" (RGB 175,255,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen1">
            <summary>
            Gets the color "DarkSeaGreen1" (RGB 175,255,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.PaleTurquoise1">
            <summary>
            Gets the color "PaleTurquoise1" (RGB 175,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Red3_1">
            <summary>
            Gets the color "Red3_1" (RGB 215,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink3">
            <summary>
            Gets the color "DeepPink3" (RGB 215,0,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink3_1">
            <summary>
            Gets the color "DeepPink3_1" (RGB 215,0,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Magenta3_1">
            <summary>
            Gets the color "Magenta3_1" (RGB 215,0,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Magenta3_2">
            <summary>
            Gets the color "Magenta3_2" (RGB 215,0,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Magenta2">
            <summary>
            Gets the color "Magenta2" (RGB 215,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOrange3_1">
            <summary>
            Gets the color "DarkOrange3_1" (RGB 215,95,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.IndianRed_1">
            <summary>
            Gets the color "IndianRed_1" (RGB 215,95,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.HotPink3_1">
            <summary>
            Gets the color "HotPink3_1" (RGB 215,95,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.HotPink2">
            <summary>
            Gets the color "HotPink2" (RGB 215,95,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Orchid">
            <summary>
            Gets the color "Orchid" (RGB 215,95,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumOrchid1">
            <summary>
            Gets the color "MediumOrchid1" (RGB 215,95,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Orange3">
            <summary>
            Gets the color "Orange3" (RGB 215,135,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSalmon3_1">
            <summary>
            Gets the color "LightSalmon3_1" (RGB 215,135,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightPink3">
            <summary>
            Gets the color "LightPink3" (RGB 215,135,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Pink3">
            <summary>
            Gets the color "Pink3" (RGB 215,135,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Plum3">
            <summary>
            Gets the color "Plum3" (RGB 215,135,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Violet">
            <summary>
            Gets the color "Violet" (RGB 215,135,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Gold3_1">
            <summary>
            Gets the color "Gold3_1" (RGB 215,175,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightGoldenrod3">
            <summary>
            Gets the color "LightGoldenrod3" (RGB 215,175,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Tan">
            <summary>
            Gets the color "Tan" (RGB 215,175,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MistyRose3">
            <summary>
            Gets the color "MistyRose3" (RGB 215,175,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Thistle3">
            <summary>
            Gets the color "Thistle3" (RGB 215,175,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Plum2">
            <summary>
            Gets the color "Plum2" (RGB 215,175,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Yellow3_1">
            <summary>
            Gets the color "Yellow3_1" (RGB 215,215,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Khaki3">
            <summary>
            Gets the color "Khaki3" (RGB 215,215,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightGoldenrod2">
            <summary>
            Gets the color "LightGoldenrod2" (RGB 215,215,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightYellow3">
            <summary>
            Gets the color "LightYellow3" (RGB 215,215,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey84">
            <summary>
            Gets the color "Grey84" (RGB 215,215,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSteelBlue1">
            <summary>
            Gets the color "LightSteelBlue1" (RGB 215,215,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Yellow2">
            <summary>
            Gets the color "Yellow2" (RGB 215,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOliveGreen1">
            <summary>
            Gets the color "DarkOliveGreen1" (RGB 215,255,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOliveGreen1_1">
            <summary>
            Gets the color "DarkOliveGreen1_1" (RGB 215,255,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkSeaGreen1_1">
            <summary>
            Gets the color "DarkSeaGreen1_1" (RGB 215,255,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Honeydew2">
            <summary>
            Gets the color "Honeydew2" (RGB 215,255,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightCyan1">
            <summary>
            Gets the color "LightCyan1" (RGB 215,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Red1">
            <summary>
            Gets the color "Red1" (RGB 255,0,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink2">
            <summary>
            Gets the color "DeepPink2" (RGB 255,0,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink1">
            <summary>
            Gets the color "DeepPink1" (RGB 255,0,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DeepPink1_1">
            <summary>
            Gets the color "DeepPink1_1" (RGB 255,0,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Magenta2_1">
            <summary>
            Gets the color "Magenta2_1" (RGB 255,0,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Magenta1">
            <summary>
            Gets the color "Magenta1" (RGB 255,0,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.OrangeRed1">
            <summary>
            Gets the color "OrangeRed1" (RGB 255,95,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.IndianRed1">
            <summary>
            Gets the color "IndianRed1" (RGB 255,95,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.IndianRed1_1">
            <summary>
            Gets the color "IndianRed1_1" (RGB 255,95,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.HotPink">
            <summary>
            Gets the color "HotPink" (RGB 255,95,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.HotPink_1">
            <summary>
            Gets the color "HotPink_1" (RGB 255,95,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MediumOrchid1_1">
            <summary>
            Gets the color "MediumOrchid1_1" (RGB 255,95,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.DarkOrange">
            <summary>
            Gets the color "DarkOrange" (RGB 255,135,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Salmon1">
            <summary>
            Gets the color "Salmon1" (RGB 255,135,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightCoral">
            <summary>
            Gets the color "LightCoral" (RGB 255,135,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.PaleVioletRed1">
            <summary>
            Gets the color "PaleVioletRed1" (RGB 255,135,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Orchid2">
            <summary>
            Gets the color "Orchid2" (RGB 255,135,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Orchid1">
            <summary>
            Gets the color "Orchid1" (RGB 255,135,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Orange1">
            <summary>
            Gets the color "Orange1" (RGB 255,175,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.SandyBrown">
            <summary>
            Gets the color "SandyBrown" (RGB 255,175,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightSalmon1">
            <summary>
            Gets the color "LightSalmon1" (RGB 255,175,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightPink1">
            <summary>
            Gets the color "LightPink1" (RGB 255,175,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Pink1">
            <summary>
            Gets the color "Pink1" (RGB 255,175,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Plum1">
            <summary>
            Gets the color "Plum1" (RGB 255,175,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Gold1">
            <summary>
            Gets the color "Gold1" (RGB 255,215,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightGoldenrod2_1">
            <summary>
            Gets the color "LightGoldenrod2_1" (RGB 255,215,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightGoldenrod2_2">
            <summary>
            Gets the color "LightGoldenrod2_2" (RGB 255,215,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.NavajoWhite1">
            <summary>
            Gets the color "NavajoWhite1" (RGB 255,215,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.MistyRose1">
            <summary>
            Gets the color "MistyRose1" (RGB 255,215,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Thistle1">
            <summary>
            Gets the color "Thistle1" (RGB 255,215,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Yellow1">
            <summary>
            Gets the color "Yellow1" (RGB 255,255,0).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.LightGoldenrod1">
            <summary>
            Gets the color "LightGoldenrod1" (RGB 255,255,95).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Khaki1">
            <summary>
            Gets the color "Khaki1" (RGB 255,255,135).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Wheat1">
            <summary>
            Gets the color "Wheat1" (RGB 255,255,175).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Cornsilk1">
            <summary>
            Gets the color "Cornsilk1" (RGB 255,255,215).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey100">
            <summary>
            Gets the color "Grey100" (RGB 255,255,255).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey3">
            <summary>
            Gets the color "Grey3" (RGB 8,8,8).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey7">
            <summary>
            Gets the color "Grey7" (RGB 18,18,18).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey11">
            <summary>
            Gets the color "Grey11" (RGB 28,28,28).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey15">
            <summary>
            Gets the color "Grey15" (RGB 38,38,38).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey19">
            <summary>
            Gets the color "Grey19" (RGB 48,48,48).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey23">
            <summary>
            Gets the color "Grey23" (RGB 58,58,58).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey27">
            <summary>
            Gets the color "Grey27" (RGB 68,68,68).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey30">
            <summary>
            Gets the color "Grey30" (RGB 78,78,78).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey35">
            <summary>
            Gets the color "Grey35" (RGB 88,88,88).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey39">
            <summary>
            Gets the color "Grey39" (RGB 98,98,98).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey42">
            <summary>
            Gets the color "Grey42" (RGB 108,108,108).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey46">
            <summary>
            Gets the color "Grey46" (RGB 118,118,118).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey50">
            <summary>
            Gets the color "Grey50" (RGB 128,128,128).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey54">
            <summary>
            Gets the color "Grey54" (RGB 138,138,138).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey58">
            <summary>
            Gets the color "Grey58" (RGB 148,148,148).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey62">
            <summary>
            Gets the color "Grey62" (RGB 158,158,158).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey66">
            <summary>
            Gets the color "Grey66" (RGB 168,168,168).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey70">
            <summary>
            Gets the color "Grey70" (RGB 178,178,178).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey74">
            <summary>
            Gets the color "Grey74" (RGB 188,188,188).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey78">
            <summary>
            Gets the color "Grey78" (RGB 198,198,198).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey82">
            <summary>
            Gets the color "Grey82" (RGB 208,208,208).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey85">
            <summary>
            Gets the color "Grey85" (RGB 218,218,218).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey89">
            <summary>
            Gets the color "Grey89" (RGB 228,228,228).
            </summary>
        </member>
        <member name="P:Spectre.Console.Color.Grey93">
            <summary>
            Gets the color "Grey93" (RGB 238,238,238).
            </summary>
        </member>
        <member name="T:Spectre.Console.ColorSystem">
            <summary>
            Represents a color system.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystem.NoColors">
            <summary>
            No colors.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystem.Legacy">
            <summary>
            Legacy, 3-bit mode.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystem.Standard">
            <summary>
            Standard, 4-bit mode.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystem.EightBit">
            <summary>
            8-bit mode.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystem.TrueColor">
            <summary>
            24-bit mode.
            </summary>
        </member>
        <member name="T:Spectre.Console.ColorSystemSupport">
            <summary>
            Determines what color system should be used.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystemSupport.Detect">
            <summary>
            Try to detect the color system.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystemSupport.NoColors">
            <summary>
            No colors.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystemSupport.Legacy">
            <summary>
            Legacy, 3-bit mode.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystemSupport.Standard">
            <summary>
            Standard, 4-bit mode.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystemSupport.EightBit">
            <summary>
            8-bit mode.
            </summary>
        </member>
        <member name="F:Spectre.Console.ColorSystemSupport.TrueColor">
            <summary>
            24-bit mode.
            </summary>
        </member>
        <member name="T:Spectre.Console.CursorDirection">
            <summary>
            Represents cursor direction.
            </summary>
        </member>
        <member name="F:Spectre.Console.CursorDirection.Up">
            <summary>
            Moves cursor up.
            </summary>
        </member>
        <member name="F:Spectre.Console.CursorDirection.Down">
            <summary>
            Moves cursor down.
            </summary>
        </member>
        <member name="F:Spectre.Console.CursorDirection.Left">
            <summary>
            Moves cursor left.
            </summary>
        </member>
        <member name="F:Spectre.Console.CursorDirection.Right">
            <summary>
            Moves cursor right.
            </summary>
        </member>
        <member name="T:Spectre.Console.Decoration">
            <summary>
            Represents text decoration.
            </summary>
            <remarks>
            Support for text decorations is up to the terminal.
            </remarks>
        </member>
        <member name="F:Spectre.Console.Decoration.None">
            <summary>
            No text decoration.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.Bold">
            <summary>
            Bold text.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.Dim">
            <summary>
            Dim or faint text.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.Italic">
            <summary>
            Italic text.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.Underline">
            <summary>
            Underlined text.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.Invert">
            <summary>
            Swaps the foreground and background colors.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.Conceal">
            <summary>
            Hides the text.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.SlowBlink">
            <summary>
            Makes text blink.
            Normally less than 150 blinks per minute.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.RapidBlink">
            <summary>
            Makes text blink.
            Normally more than 150 blinks per minute.
            Not supported in every environment.
            </summary>
        </member>
        <member name="F:Spectre.Console.Decoration.Strikethrough">
            <summary>
            Shows text with a horizontal line through the center.
            Not supported in every environment.
            </summary>
        </member>
        <member name="T:Spectre.Console.Emoji">
            <summary>
            Utility for working with emojis.
            </summary>
            <summary>
            Utility for working with emojis.
            </summary>
        </member>
        <member name="M:Spectre.Console.Emoji.Remap(System.String,System.String)">
            <summary>
            Remaps a specific emoji tag with a new emoji.
            </summary>
            <param name="tag">The emoji tag.</param>
            <param name="emoji">The emoji.</param>
        </member>
        <member name="M:Spectre.Console.Emoji.Replace(System.ReadOnlySpan{System.Char})">
            <summary>
            Replaces emoji markup with corresponding unicode characters.
            </summary>
            <param name="value">A string with emojis codes, e.g. "Hello :smiley:!".</param>
            <returns>A string with emoji codes replaced with actual emoji.</returns>
        </member>
        <member name="T:Spectre.Console.Emoji.Known">
            <summary>
            Contains all predefined emojis.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Abacus">
            <summary>
            Gets the "abacus" emoji.
            Description: Abacus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AbButtonBloodType">
            <summary>
            Gets the "ab_button_blood_type" emoji.
            Description: AB button blood type.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AButtonBloodType">
            <summary>
            Gets the "a_button_blood_type" emoji.
            Description: A button blood type.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Accordion">
            <summary>
            Gets the "accordion" emoji.
            Description: Accordion.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AdhesiveBandage">
            <summary>
            Gets the "adhesive_bandage" emoji.
            Description: Adhesive bandage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AdmissionTickets">
            <summary>
            Gets the "admission_tickets" emoji.
            Description: Admission tickets.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AerialTramway">
            <summary>
            Gets the "aerial_tramway" emoji.
            Description: Aerial tramway.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Airplane">
            <summary>
            Gets the "airplane" emoji.
            Description: Airplane.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AirplaneArrival">
            <summary>
            Gets the "airplane_arrival" emoji.
            Description: Airplane arrival.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AirplaneDeparture">
            <summary>
            Gets the "airplane_departure" emoji.
            Description: Airplane departure.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AlarmClock">
            <summary>
            Gets the "alarm_clock" emoji.
            Description: Alarm clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Alembic">
            <summary>
            Gets the "alembic" emoji.
            Description: Alembic.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Alien">
            <summary>
            Gets the "alien" emoji.
            Description: Alien.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AlienMonster">
            <summary>
            Gets the "alien_monster" emoji.
            Description: Alien monster.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ambulance">
            <summary>
            Gets the "ambulance" emoji.
            Description: Ambulance.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AmericanFootball">
            <summary>
            Gets the "american_football" emoji.
            Description: American football.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Amphora">
            <summary>
            Gets the "amphora" emoji.
            Description: Amphora.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AnatomicalHeart">
            <summary>
            Gets the "anatomical_heart" emoji.
            Description: Anatomical heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Anchor">
            <summary>
            Gets the "anchor" emoji.
            Description: Anchor.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AngerSymbol">
            <summary>
            Gets the "anger_symbol" emoji.
            Description: Anger symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AngryFace">
            <summary>
            Gets the "angry_face" emoji.
            Description: Angry face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AngryFaceWithHorns">
            <summary>
            Gets the "angry_face_with_horns" emoji.
            Description: Angry face with horns.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AnguishedFace">
            <summary>
            Gets the "anguished_face" emoji.
            Description: Anguished face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ant">
            <summary>
            Gets the "ant" emoji.
            Description: Ant.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AntennaBars">
            <summary>
            Gets the "antenna_bars" emoji.
            Description: Antenna bars.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AnxiousFaceWithSweat">
            <summary>
            Gets the "anxious_face_with_sweat" emoji.
            Description: Anxious face with sweat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Aquarius">
            <summary>
            Gets the "aquarius" emoji.
            Description: Aquarius.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Aries">
            <summary>
            Gets the "aries" emoji.
            Description: Aries.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ArticulatedLorry">
            <summary>
            Gets the "articulated_lorry" emoji.
            Description: Articulated lorry.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ArtistPalette">
            <summary>
            Gets the "artist_palette" emoji.
            Description: Artist palette.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AstonishedFace">
            <summary>
            Gets the "astonished_face" emoji.
            Description: Astonished face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AtmSign">
            <summary>
            Gets the "atm_sign" emoji.
            Description: ATM sign.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AtomSymbol">
            <summary>
            Gets the "atom_symbol" emoji.
            Description: Atom symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Automobile">
            <summary>
            Gets the "automobile" emoji.
            Description: Automobile.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.AutoRickshaw">
            <summary>
            Gets the "auto_rickshaw" emoji.
            Description: Auto rickshaw.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Avocado">
            <summary>
            Gets the "avocado" emoji.
            Description: Avocado.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Axe">
            <summary>
            Gets the "axe" emoji.
            Description: Axe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Baby">
            <summary>
            Gets the "baby" emoji.
            Description: Baby.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BabyAngel">
            <summary>
            Gets the "baby_angel" emoji.
            Description: Baby angel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BabyBottle">
            <summary>
            Gets the "baby_bottle" emoji.
            Description: Baby bottle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BabyChick">
            <summary>
            Gets the "baby_chick" emoji.
            Description: Baby chick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BabySymbol">
            <summary>
            Gets the "baby_symbol" emoji.
            Description: Baby symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BackArrow">
            <summary>
            Gets the "back_arrow" emoji.
            Description: BACK arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BackhandIndexPointingDown">
            <summary>
            Gets the "backhand_index_pointing_down" emoji.
            Description: Backhand index pointing down.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BackhandIndexPointingLeft">
            <summary>
            Gets the "backhand_index_pointing_left" emoji.
            Description: Backhand index pointing left.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BackhandIndexPointingRight">
            <summary>
            Gets the "backhand_index_pointing_right" emoji.
            Description: Backhand index pointing right.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BackhandIndexPointingUp">
            <summary>
            Gets the "backhand_index_pointing_up" emoji.
            Description: Backhand index pointing up.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Backpack">
            <summary>
            Gets the "backpack" emoji.
            Description: Backpack.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bacon">
            <summary>
            Gets the "bacon" emoji.
            Description: Bacon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Badger">
            <summary>
            Gets the "badger" emoji.
            Description: Badger.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Badminton">
            <summary>
            Gets the "badminton" emoji.
            Description: Badminton.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bagel">
            <summary>
            Gets the "bagel" emoji.
            Description: Bagel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BaggageClaim">
            <summary>
            Gets the "baggage_claim" emoji.
            Description: Baggage claim.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BaguetteBread">
            <summary>
            Gets the "baguette_bread" emoji.
            Description: Baguette bread.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BalanceScale">
            <summary>
            Gets the "balance_scale" emoji.
            Description: Balance scale.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bald">
            <summary>
            Gets the "bald" emoji.
            Description: Bald.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BalletShoes">
            <summary>
            Gets the "ballet_shoes" emoji.
            Description: Ballet shoes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Balloon">
            <summary>
            Gets the "balloon" emoji.
            Description: Balloon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BallotBoxWithBallot">
            <summary>
            Gets the "ballot_box_with_ballot" emoji.
            Description: Ballot box with ballot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Banana">
            <summary>
            Gets the "banana" emoji.
            Description: Banana.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Banjo">
            <summary>
            Gets the "banjo" emoji.
            Description: Banjo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bank">
            <summary>
            Gets the "bank" emoji.
            Description: Bank.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BarberPole">
            <summary>
            Gets the "barber_pole" emoji.
            Description: Barber pole.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BarChart">
            <summary>
            Gets the "bar_chart" emoji.
            Description: Bar chart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Baseball">
            <summary>
            Gets the "baseball" emoji.
            Description: Baseball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Basket">
            <summary>
            Gets the "basket" emoji.
            Description: Basket.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Basketball">
            <summary>
            Gets the "basketball" emoji.
            Description: Basketball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bat">
            <summary>
            Gets the "bat" emoji.
            Description: Bat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bathtub">
            <summary>
            Gets the "bathtub" emoji.
            Description: Bathtub.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Battery">
            <summary>
            Gets the "battery" emoji.
            Description: Battery.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BButtonBloodType">
            <summary>
            Gets the "b_button_blood_type" emoji.
            Description: B button blood type.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BeachWithUmbrella">
            <summary>
            Gets the "beach_with_umbrella" emoji.
            Description: Beach with umbrella.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BeamingFaceWithSmilingEyes">
            <summary>
            Gets the "beaming_face_with_smiling_eyes" emoji.
            Description: Beaming face with smiling eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bear">
            <summary>
            Gets the "bear" emoji.
            Description: Bear.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BeatingHeart">
            <summary>
            Gets the "beating_heart" emoji.
            Description: Beating heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Beaver">
            <summary>
            Gets the "beaver" emoji.
            Description: Beaver.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bed">
            <summary>
            Gets the "bed" emoji.
            Description: Bed.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BeerMug">
            <summary>
            Gets the "beer_mug" emoji.
            Description: Beer mug.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Beetle">
            <summary>
            Gets the "beetle" emoji.
            Description: Beetle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bell">
            <summary>
            Gets the "bell" emoji.
            Description: Bell.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BellhopBell">
            <summary>
            Gets the "bellhop_bell" emoji.
            Description: Bellhop bell.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BellPepper">
            <summary>
            Gets the "bell_pepper" emoji.
            Description: Bell pepper.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BellWithSlash">
            <summary>
            Gets the "bell_with_slash" emoji.
            Description: Bell with slash.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BentoBox">
            <summary>
            Gets the "bento_box" emoji.
            Description: Bento box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BeverageBox">
            <summary>
            Gets the "beverage_box" emoji.
            Description: Beverage box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bicycle">
            <summary>
            Gets the "bicycle" emoji.
            Description: Bicycle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bikini">
            <summary>
            Gets the "bikini" emoji.
            Description: Bikini.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BilledCap">
            <summary>
            Gets the "billed_cap" emoji.
            Description: Billed cap.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Biohazard">
            <summary>
            Gets the "biohazard" emoji.
            Description: Biohazard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bird">
            <summary>
            Gets the "bird" emoji.
            Description: Bird.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BirthdayCake">
            <summary>
            Gets the "birthday_cake" emoji.
            Description: Birthday cake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bison">
            <summary>
            Gets the "bison" emoji.
            Description: Bison.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackCircle">
            <summary>
            Gets the "black_circle" emoji.
            Description: Black circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackFlag">
            <summary>
            Gets the "black_flag" emoji.
            Description: Black flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackHeart">
            <summary>
            Gets the "black_heart" emoji.
            Description: Black heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackLargeSquare">
            <summary>
            Gets the "black_large_square" emoji.
            Description: Black large square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackMediumSmallSquare">
            <summary>
            Gets the "black_medium_small_square" emoji.
            Description: black medium small square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackMediumSquare">
            <summary>
            Gets the "black_medium_square" emoji.
            Description: Black medium square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackNib">
            <summary>
            Gets the "black_nib" emoji.
            Description: Black nib.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackSmallSquare">
            <summary>
            Gets the "black_small_square" emoji.
            Description: Black small square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlackSquareButton">
            <summary>
            Gets the "black_square_button" emoji.
            Description: Black square button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Blossom">
            <summary>
            Gets the "blossom" emoji.
            Description: Blossom.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Blowfish">
            <summary>
            Gets the "blowfish" emoji.
            Description: Blowfish.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Blueberries">
            <summary>
            Gets the "blueberries" emoji.
            Description: Blueberries.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlueBook">
            <summary>
            Gets the "blue_book" emoji.
            Description: Blue book.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlueCircle">
            <summary>
            Gets the "blue_circle" emoji.
            Description: Blue circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlueHeart">
            <summary>
            Gets the "blue_heart" emoji.
            Description: Blue heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BlueSquare">
            <summary>
            Gets the "blue_square" emoji.
            Description: Blue square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Boar">
            <summary>
            Gets the "boar" emoji.
            Description: Boar.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bomb">
            <summary>
            Gets the "bomb" emoji.
            Description: Bomb.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bone">
            <summary>
            Gets the "bone" emoji.
            Description: Bone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bookmark">
            <summary>
            Gets the "bookmark" emoji.
            Description: Bookmark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BookmarkTabs">
            <summary>
            Gets the "bookmark_tabs" emoji.
            Description: Bookmark tabs.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Books">
            <summary>
            Gets the "books" emoji.
            Description: Books.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Boomerang">
            <summary>
            Gets the "boomerang" emoji.
            Description: Boomerang.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BottleWithPoppingCork">
            <summary>
            Gets the "bottle_with_popping_cork" emoji.
            Description: Bottle with popping cork.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bouquet">
            <summary>
            Gets the "bouquet" emoji.
            Description: Bouquet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BowAndArrow">
            <summary>
            Gets the "bow_and_arrow" emoji.
            Description: Bow and arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bowling">
            <summary>
            Gets the "bowling" emoji.
            Description: Bowling.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BowlWithSpoon">
            <summary>
            Gets the "bowl_with_spoon" emoji.
            Description: Bowl with spoon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BoxingGlove">
            <summary>
            Gets the "boxing_glove" emoji.
            Description: Boxing glove.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Boy">
            <summary>
            Gets the "boy" emoji.
            Description: Boy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Brain">
            <summary>
            Gets the "brain" emoji.
            Description: Brain.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bread">
            <summary>
            Gets the "bread" emoji.
            Description: Bread.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BreastFeeding">
            <summary>
            Gets the "breast_feeding" emoji.
            Description: breast feeding.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Brick">
            <summary>
            Gets the "brick" emoji.
            Description: Brick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BridgeAtNight">
            <summary>
            Gets the "bridge_at_night" emoji.
            Description: Bridge at night.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Briefcase">
            <summary>
            Gets the "briefcase" emoji.
            Description: Briefcase.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Briefs">
            <summary>
            Gets the "briefs" emoji.
            Description: Briefs.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BrightButton">
            <summary>
            Gets the "bright_button" emoji.
            Description: Bright button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Broccoli">
            <summary>
            Gets the "broccoli" emoji.
            Description: Broccoli.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BrokenHeart">
            <summary>
            Gets the "broken_heart" emoji.
            Description: Broken heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Broom">
            <summary>
            Gets the "broom" emoji.
            Description: Broom.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BrownCircle">
            <summary>
            Gets the "brown_circle" emoji.
            Description: Brown circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BrownHeart">
            <summary>
            Gets the "brown_heart" emoji.
            Description: Brown heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BrownSquare">
            <summary>
            Gets the "brown_square" emoji.
            Description: Brown square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BubbleTea">
            <summary>
            Gets the "bubble_tea" emoji.
            Description: Bubble tea.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bucket">
            <summary>
            Gets the "bucket" emoji.
            Description: Bucket.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bug">
            <summary>
            Gets the "bug" emoji.
            Description: Bug.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BuildingConstruction">
            <summary>
            Gets the "building_construction" emoji.
            Description: Building construction.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BulletTrain">
            <summary>
            Gets the "bullet_train" emoji.
            Description: Bullet train.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bullseye">
            <summary>
            Gets the "bullseye" emoji.
            Description: Bullseye.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Burrito">
            <summary>
            Gets the "burrito" emoji.
            Description: Burrito.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Bus">
            <summary>
            Gets the "bus" emoji.
            Description: Bus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BusStop">
            <summary>
            Gets the "bus_stop" emoji.
            Description: Bus stop.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BustInSilhouette">
            <summary>
            Gets the "bust_in_silhouette" emoji.
            Description: Bust in silhouette.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.BustsInSilhouette">
            <summary>
            Gets the "busts_in_silhouette" emoji.
            Description: Busts in silhouette.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Butter">
            <summary>
            Gets the "butter" emoji.
            Description: Butter.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Butterfly">
            <summary>
            Gets the "butterfly" emoji.
            Description: Butterfly.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cactus">
            <summary>
            Gets the "cactus" emoji.
            Description: Cactus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Calendar">
            <summary>
            Gets the "calendar" emoji.
            Description: Calendar.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CallMeHand">
            <summary>
            Gets the "call_me_hand" emoji.
            Description: Call me hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Camel">
            <summary>
            Gets the "camel" emoji.
            Description: Camel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Camera">
            <summary>
            Gets the "camera" emoji.
            Description: Camera.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CameraWithFlash">
            <summary>
            Gets the "camera_with_flash" emoji.
            Description: Camera with flash.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Camping">
            <summary>
            Gets the "camping" emoji.
            Description: Camping.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cancer">
            <summary>
            Gets the "cancer" emoji.
            Description: Cancer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Candle">
            <summary>
            Gets the "candle" emoji.
            Description: Candle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Candy">
            <summary>
            Gets the "candy" emoji.
            Description: Candy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CannedFood">
            <summary>
            Gets the "canned_food" emoji.
            Description: Canned food.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Canoe">
            <summary>
            Gets the "canoe" emoji.
            Description: Canoe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Capricorn">
            <summary>
            Gets the "capricorn" emoji.
            Description: Capricorn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CardFileBox">
            <summary>
            Gets the "card_file_box" emoji.
            Description: Card file box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CardIndex">
            <summary>
            Gets the "card_index" emoji.
            Description: Card index.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CardIndexDividers">
            <summary>
            Gets the "card_index_dividers" emoji.
            Description: Card index dividers.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CarouselHorse">
            <summary>
            Gets the "carousel_horse" emoji.
            Description: Carousel horse.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CarpentrySaw">
            <summary>
            Gets the "carpentry_saw" emoji.
            Description: Carpentry saw.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CarpStreamer">
            <summary>
            Gets the "carp_streamer" emoji.
            Description: Carp streamer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Carrot">
            <summary>
            Gets the "carrot" emoji.
            Description: Carrot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Castle">
            <summary>
            Gets the "castle" emoji.
            Description: Castle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cat">
            <summary>
            Gets the "cat" emoji.
            Description: Cat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CatFace">
            <summary>
            Gets the "cat_face" emoji.
            Description: Cat face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CatWithTearsOfJoy">
            <summary>
            Gets the "cat_with_tears_of_joy" emoji.
            Description: Cat with tears of joy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CatWithWrySmile">
            <summary>
            Gets the "cat_with_wry_smile" emoji.
            Description: Cat with wry smile.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Chains">
            <summary>
            Gets the "chains" emoji.
            Description: Chains.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Chair">
            <summary>
            Gets the "chair" emoji.
            Description: Chair.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChartDecreasing">
            <summary>
            Gets the "chart_decreasing" emoji.
            Description: Chart decreasing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChartIncreasing">
            <summary>
            Gets the "chart_increasing" emoji.
            Description: Chart increasing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChartIncreasingWithYen">
            <summary>
            Gets the "chart_increasing_with_yen" emoji.
            Description: Chart increasing with yen.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CheckBoxWithCheck">
            <summary>
            Gets the "check_box_with_check" emoji.
            Description: Check box with check.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CheckMark">
            <summary>
            Gets the "check_mark" emoji.
            Description: Check mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CheckMarkButton">
            <summary>
            Gets the "check_mark_button" emoji.
            Description: Check mark button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CheeseWedge">
            <summary>
            Gets the "cheese_wedge" emoji.
            Description: Cheese wedge.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChequeredFlag">
            <summary>
            Gets the "chequered_flag" emoji.
            Description: Chequered flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cherries">
            <summary>
            Gets the "cherries" emoji.
            Description: Cherries.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CherryBlossom">
            <summary>
            Gets the "cherry_blossom" emoji.
            Description: Cherry blossom.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChessPawn">
            <summary>
            Gets the "chess_pawn" emoji.
            Description: Chess pawn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Chestnut">
            <summary>
            Gets the "chestnut" emoji.
            Description: Chestnut.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Chicken">
            <summary>
            Gets the "chicken" emoji.
            Description: Chicken.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Child">
            <summary>
            Gets the "child" emoji.
            Description: Child.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChildrenCrossing">
            <summary>
            Gets the "children_crossing" emoji.
            Description: Children crossing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Chipmunk">
            <summary>
            Gets the "chipmunk" emoji.
            Description: Chipmunk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChocolateBar">
            <summary>
            Gets the "chocolate_bar" emoji.
            Description: Chocolate bar.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Chopsticks">
            <summary>
            Gets the "chopsticks" emoji.
            Description: Chopsticks.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ChristmasTree">
            <summary>
            Gets the "christmas_tree" emoji.
            Description: Christmas tree.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Church">
            <summary>
            Gets the "church" emoji.
            Description: Church.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cigarette">
            <summary>
            Gets the "cigarette" emoji.
            Description: Cigarette.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cinema">
            <summary>
            Gets the "cinema" emoji.
            Description: Cinema.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CircledM">
            <summary>
            Gets the "circled_m" emoji.
            Description: Circled M.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CircusTent">
            <summary>
            Gets the "circus_tent" emoji.
            Description: Circus tent.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cityscape">
            <summary>
            Gets the "cityscape" emoji.
            Description: Cityscape.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CityscapeAtDusk">
            <summary>
            Gets the "cityscape_at_dusk" emoji.
            Description: Cityscape at dusk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Clamp">
            <summary>
            Gets the "clamp" emoji.
            Description: Clamp.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClapperBoard">
            <summary>
            Gets the "clapper_board" emoji.
            Description: Clapper board.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClappingHands">
            <summary>
            Gets the "clapping_hands" emoji.
            Description: Clapping hands.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClassicalBuilding">
            <summary>
            Gets the "classical_building" emoji.
            Description: Classical building.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClButton">
            <summary>
            Gets the "cl_button" emoji.
            Description: CL button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClinkingBeerMugs">
            <summary>
            Gets the "clinking_beer_mugs" emoji.
            Description: Clinking beer mugs.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClinkingGlasses">
            <summary>
            Gets the "clinking_glasses" emoji.
            Description: Clinking glasses.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Clipboard">
            <summary>
            Gets the "clipboard" emoji.
            Description: Clipboard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClockwiseVerticalArrows">
            <summary>
            Gets the "clockwise_vertical_arrows" emoji.
            Description: Clockwise vertical arrows.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClosedBook">
            <summary>
            Gets the "closed_book" emoji.
            Description: Closed book.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClosedMailboxWithLoweredFlag">
            <summary>
            Gets the "closed_mailbox_with_lowered_flag" emoji.
            Description: Closed mailbox with lowered flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClosedMailboxWithRaisedFlag">
            <summary>
            Gets the "closed_mailbox_with_raised_flag" emoji.
            Description: Closed mailbox with raised flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClosedUmbrella">
            <summary>
            Gets the "closed_umbrella" emoji.
            Description: Closed umbrella.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cloud">
            <summary>
            Gets the "cloud" emoji.
            Description: Cloud.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CloudWithLightning">
            <summary>
            Gets the "cloud_with_lightning" emoji.
            Description: Cloud with lightning.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CloudWithLightningAndRain">
            <summary>
            Gets the "cloud_with_lightning_and_rain" emoji.
            Description: Cloud with lightning and rain.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CloudWithRain">
            <summary>
            Gets the "cloud_with_rain" emoji.
            Description: Cloud with rain.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CloudWithSnow">
            <summary>
            Gets the "cloud_with_snow" emoji.
            Description: Cloud with snow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClownFace">
            <summary>
            Gets the "clown_face" emoji.
            Description: Clown face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClubSuit">
            <summary>
            Gets the "club_suit" emoji.
            Description: Club suit.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ClutchBag">
            <summary>
            Gets the "clutch_bag" emoji.
            Description: Clutch bag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Coat">
            <summary>
            Gets the "coat" emoji.
            Description: Coat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cockroach">
            <summary>
            Gets the "cockroach" emoji.
            Description: Cockroach.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CocktailGlass">
            <summary>
            Gets the "cocktail_glass" emoji.
            Description: Cocktail glass.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Coconut">
            <summary>
            Gets the "coconut" emoji.
            Description: Coconut.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Coffin">
            <summary>
            Gets the "coffin" emoji.
            Description: Coffin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Coin">
            <summary>
            Gets the "coin" emoji.
            Description: Coin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ColdFace">
            <summary>
            Gets the "cold_face" emoji.
            Description: Cold face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Collision">
            <summary>
            Gets the "collision" emoji.
            Description: Collision.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Comet">
            <summary>
            Gets the "comet" emoji.
            Description: Comet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Compass">
            <summary>
            Gets the "compass" emoji.
            Description: Compass.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ComputerDisk">
            <summary>
            Gets the "computer_disk" emoji.
            Description: Computer disk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ComputerMouse">
            <summary>
            Gets the "computer_mouse" emoji.
            Description: Computer mouse.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ConfettiBall">
            <summary>
            Gets the "confetti_ball" emoji.
            Description: Confetti ball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ConfoundedFace">
            <summary>
            Gets the "confounded_face" emoji.
            Description: Confounded face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ConfusedFace">
            <summary>
            Gets the "confused_face" emoji.
            Description: Confused face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Construction">
            <summary>
            Gets the "construction" emoji.
            Description: Construction.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ConstructionWorker">
            <summary>
            Gets the "construction_worker" emoji.
            Description: Construction worker.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ControlKnobs">
            <summary>
            Gets the "control_knobs" emoji.
            Description: Control knobs.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ConvenienceStore">
            <summary>
            Gets the "convenience_store" emoji.
            Description: Convenience store.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CookedRice">
            <summary>
            Gets the "cooked_rice" emoji.
            Description: Cooked rice.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cookie">
            <summary>
            Gets the "cookie" emoji.
            Description: Cookie.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cooking">
            <summary>
            Gets the "cooking" emoji.
            Description: Cooking.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CoolButton">
            <summary>
            Gets the "cool_button" emoji.
            Description: COOL button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Copyright">
            <summary>
            Gets the "copyright" emoji.
            Description: Copyright.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CouchAndLamp">
            <summary>
            Gets the "couch_and_lamp" emoji.
            Description: Couch and lamp.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CounterclockwiseArrowsButton">
            <summary>
            Gets the "counterclockwise_arrows_button" emoji.
            Description: Counterclockwise arrows button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CoupleWithHeart">
            <summary>
            Gets the "couple_with_heart" emoji.
            Description: Couple with heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cow">
            <summary>
            Gets the "cow" emoji.
            Description: Cow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CowboyHatFace">
            <summary>
            Gets the "cowboy_hat_face" emoji.
            Description: Cowboy hat face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CowFace">
            <summary>
            Gets the "cow_face" emoji.
            Description: Cow face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Crab">
            <summary>
            Gets the "crab" emoji.
            Description: Crab.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Crayon">
            <summary>
            Gets the "crayon" emoji.
            Description: Crayon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CreditCard">
            <summary>
            Gets the "credit_card" emoji.
            Description: Credit card.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CrescentMoon">
            <summary>
            Gets the "crescent_moon" emoji.
            Description: Crescent moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cricket">
            <summary>
            Gets the "cricket" emoji.
            Description: Cricket.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CricketGame">
            <summary>
            Gets the "cricket_game" emoji.
            Description: Cricket game.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Crocodile">
            <summary>
            Gets the "crocodile" emoji.
            Description: Crocodile.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Croissant">
            <summary>
            Gets the "croissant" emoji.
            Description: Croissant.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CrossedFingers">
            <summary>
            Gets the "crossed_fingers" emoji.
            Description: Crossed fingers.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CrossedFlags">
            <summary>
            Gets the "crossed_flags" emoji.
            Description: Crossed flags.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CrossedSwords">
            <summary>
            Gets the "crossed_swords" emoji.
            Description: Crossed swords.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CrossMark">
            <summary>
            Gets the "cross_mark" emoji.
            Description: Cross mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CrossMarkButton">
            <summary>
            Gets the "cross_mark_button" emoji.
            Description: Cross mark button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Crown">
            <summary>
            Gets the "crown" emoji.
            Description: Crown.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CryingCat">
            <summary>
            Gets the "crying_cat" emoji.
            Description: Crying cat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CryingFace">
            <summary>
            Gets the "crying_face" emoji.
            Description: Crying face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CrystalBall">
            <summary>
            Gets the "crystal_ball" emoji.
            Description: Crystal ball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cucumber">
            <summary>
            Gets the "cucumber" emoji.
            Description: Cucumber.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cupcake">
            <summary>
            Gets the "cupcake" emoji.
            Description: Cupcake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CupWithStraw">
            <summary>
            Gets the "cup_with_straw" emoji.
            Description: Cup with straw.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CurlingStone">
            <summary>
            Gets the "curling_stone" emoji.
            Description: Curling stone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CurlyHair">
            <summary>
            Gets the "curly_hair" emoji.
            Description: Curly hair.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CurlyLoop">
            <summary>
            Gets the "curly_loop" emoji.
            Description: Curly loop.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CurrencyExchange">
            <summary>
            Gets the "currency_exchange" emoji.
            Description: Currency exchange.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CurryRice">
            <summary>
            Gets the "curry_rice" emoji.
            Description: Curry rice.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Custard">
            <summary>
            Gets the "custard" emoji.
            Description: Custard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Customs">
            <summary>
            Gets the "customs" emoji.
            Description: Customs.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.CutOfMeat">
            <summary>
            Gets the "cut_of_meat" emoji.
            Description: Cut of meat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Cyclone">
            <summary>
            Gets the "cyclone" emoji.
            Description: Cyclone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dagger">
            <summary>
            Gets the "dagger" emoji.
            Description: Dagger.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dango">
            <summary>
            Gets the "dango" emoji.
            Description: Dango.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DashingAway">
            <summary>
            Gets the "dashing_away" emoji.
            Description: Dashing away.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DeafPerson">
            <summary>
            Gets the "deaf_person" emoji.
            Description: Deaf person.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DeciduousTree">
            <summary>
            Gets the "deciduous_tree" emoji.
            Description: Deciduous tree.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Deer">
            <summary>
            Gets the "deer" emoji.
            Description: Deer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DeliveryTruck">
            <summary>
            Gets the "delivery_truck" emoji.
            Description: Delivery truck.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DepartmentStore">
            <summary>
            Gets the "department_store" emoji.
            Description: Department store.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DerelictHouse">
            <summary>
            Gets the "derelict_house" emoji.
            Description: Derelict house.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Desert">
            <summary>
            Gets the "desert" emoji.
            Description: Desert.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DesertIsland">
            <summary>
            Gets the "desert_island" emoji.
            Description: Desert island.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DesktopComputer">
            <summary>
            Gets the "desktop_computer" emoji.
            Description: Desktop computer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Detective">
            <summary>
            Gets the "detective" emoji.
            Description: Detective.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DiamondSuit">
            <summary>
            Gets the "diamond_suit" emoji.
            Description: Diamond suit.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DiamondWithADot">
            <summary>
            Gets the "diamond_with_a_dot" emoji.
            Description: Diamond with a dot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DimButton">
            <summary>
            Gets the "dim_button" emoji.
            Description: Dim button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DisappointedFace">
            <summary>
            Gets the "disappointed_face" emoji.
            Description: Disappointed face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DisguisedFace">
            <summary>
            Gets the "disguised_face" emoji.
            Description: Disguised face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Divide">
            <summary>
            Gets the "divide" emoji.
            Description: Divide.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DivingMask">
            <summary>
            Gets the "diving_mask" emoji.
            Description: Diving mask.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DiyaLamp">
            <summary>
            Gets the "diya_lamp" emoji.
            Description: Diya lamp.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dizzy">
            <summary>
            Gets the "dizzy" emoji.
            Description: Dizzy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dna">
            <summary>
            Gets the "dna" emoji.
            Description: Dna.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dodo">
            <summary>
            Gets the "dodo" emoji.
            Description: Dodo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dog">
            <summary>
            Gets the "dog" emoji.
            Description: Dog.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DogFace">
            <summary>
            Gets the "dog_face" emoji.
            Description: Dog face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DollarBanknote">
            <summary>
            Gets the "dollar_banknote" emoji.
            Description: Dollar banknote.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dolphin">
            <summary>
            Gets the "dolphin" emoji.
            Description: Dolphin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Door">
            <summary>
            Gets the "door" emoji.
            Description: Door.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DottedSixPointedStar">
            <summary>
            Gets the "dotted_six_pointed_star" emoji.
            Description: dotted six pointed star.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DoubleCurlyLoop">
            <summary>
            Gets the "double_curly_loop" emoji.
            Description: Double curly loop.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DoubleExclamationMark">
            <summary>
            Gets the "double_exclamation_mark" emoji.
            Description: Double exclamation mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Doughnut">
            <summary>
            Gets the "doughnut" emoji.
            Description: Doughnut.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dove">
            <summary>
            Gets the "dove" emoji.
            Description: Dove.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DownArrow">
            <summary>
            Gets the "down_arrow" emoji.
            Description: Down arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DowncastFaceWithSweat">
            <summary>
            Gets the "downcast_face_with_sweat" emoji.
            Description: Downcast face with sweat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DownLeftArrow">
            <summary>
            Gets the "down_left_arrow" emoji.
            Description: down left arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DownRightArrow">
            <summary>
            Gets the "down_right_arrow" emoji.
            Description: down right arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DownwardsButton">
            <summary>
            Gets the "downwards_button" emoji.
            Description: Downwards button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dragon">
            <summary>
            Gets the "dragon" emoji.
            Description: Dragon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DragonFace">
            <summary>
            Gets the "dragon_face" emoji.
            Description: Dragon face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dress">
            <summary>
            Gets the "dress" emoji.
            Description: Dress.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DroolingFace">
            <summary>
            Gets the "drooling_face" emoji.
            Description: Drooling face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Droplet">
            <summary>
            Gets the "droplet" emoji.
            Description: Droplet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.DropOfBlood">
            <summary>
            Gets the "drop_of_blood" emoji.
            Description: Drop of blood.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Drum">
            <summary>
            Gets the "drum" emoji.
            Description: Drum.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Duck">
            <summary>
            Gets the "duck" emoji.
            Description: Duck.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dumpling">
            <summary>
            Gets the "dumpling" emoji.
            Description: Dumpling.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Dvd">
            <summary>
            Gets the "dvd" emoji.
            Description: Dvd.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Eagle">
            <summary>
            Gets the "eagle" emoji.
            Description: Eagle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ear">
            <summary>
            Gets the "ear" emoji.
            Description: Ear.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EarOfCorn">
            <summary>
            Gets the "ear_of_corn" emoji.
            Description: Ear of corn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EarWithHearingAid">
            <summary>
            Gets the "ear_with_hearing_aid" emoji.
            Description: Ear with hearing aid.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Egg">
            <summary>
            Gets the "egg" emoji.
            Description: Egg.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Eggplant">
            <summary>
            Gets the "eggplant" emoji.
            Description: Eggplant.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EightOClock">
            <summary>
            Gets the "eight_o_clock" emoji.
            Description: Eight o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EightPointedStar">
            <summary>
            Gets the "eight_pointed_star" emoji.
            Description: eight pointed star.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EightSpokedAsterisk">
            <summary>
            Gets the "eight_spoked_asterisk" emoji.
            Description: eight spoked asterisk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EightThirty">
            <summary>
            Gets the "eight_thirty" emoji.
            Description: eight thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EjectButton">
            <summary>
            Gets the "eject_button" emoji.
            Description: Eject button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ElectricPlug">
            <summary>
            Gets the "electric_plug" emoji.
            Description: Electric plug.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Elephant">
            <summary>
            Gets the "elephant" emoji.
            Description: Elephant.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Elevator">
            <summary>
            Gets the "elevator" emoji.
            Description: Elevator.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ElevenOClock">
            <summary>
            Gets the "eleven_o_clock" emoji.
            Description: Eleven o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ElevenThirty">
            <summary>
            Gets the "eleven_thirty" emoji.
            Description: eleven thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Elf">
            <summary>
            Gets the "elf" emoji.
            Description: Elf.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EMail">
            <summary>
            Gets the "e_mail" emoji.
            Description: e mail.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EndArrow">
            <summary>
            Gets the "end_arrow" emoji.
            Description: END arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Envelope">
            <summary>
            Gets the "envelope" emoji.
            Description: Envelope.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EnvelopeWithArrow">
            <summary>
            Gets the "envelope_with_arrow" emoji.
            Description: Envelope with arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EuroBanknote">
            <summary>
            Gets the "euro_banknote" emoji.
            Description: Euro banknote.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.EvergreenTree">
            <summary>
            Gets the "evergreen_tree" emoji.
            Description: Evergreen tree.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ewe">
            <summary>
            Gets the "ewe" emoji.
            Description: Ewe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ExclamationQuestionMark">
            <summary>
            Gets the "exclamation_question_mark" emoji.
            Description: Exclamation question mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ExplodingHead">
            <summary>
            Gets the "exploding_head" emoji.
            Description: Exploding head.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ExpressionlessFace">
            <summary>
            Gets the "expressionless_face" emoji.
            Description: Expressionless face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Eye">
            <summary>
            Gets the "eye" emoji.
            Description: Eye.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Eyes">
            <summary>
            Gets the "eyes" emoji.
            Description: Eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceBlowingAKiss">
            <summary>
            Gets the "face_blowing_a_kiss" emoji.
            Description: Face blowing a kiss.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceSavoringFood">
            <summary>
            Gets the "face_savoring_food" emoji.
            Description: Face savoring food.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceScreamingInFear">
            <summary>
            Gets the "face_screaming_in_fear" emoji.
            Description: Face screaming in fear.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceVomiting">
            <summary>
            Gets the "face_vomiting" emoji.
            Description: Face vomiting.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithHandOverMouth">
            <summary>
            Gets the "face_with_hand_over_mouth" emoji.
            Description: Face with hand over mouth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithHeadBandage">
            <summary>
            Gets the "face_with_head_bandage" emoji.
            Description: face with head bandage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithMedicalMask">
            <summary>
            Gets the "face_with_medical_mask" emoji.
            Description: Face with medical mask.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithMonocle">
            <summary>
            Gets the "face_with_monocle" emoji.
            Description: Face with monocle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithOpenMouth">
            <summary>
            Gets the "face_with_open_mouth" emoji.
            Description: Face with open mouth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithoutMouth">
            <summary>
            Gets the "face_without_mouth" emoji.
            Description: Face without mouth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithRaisedEyebrow">
            <summary>
            Gets the "face_with_raised_eyebrow" emoji.
            Description: Face with raised eyebrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithRollingEyes">
            <summary>
            Gets the "face_with_rolling_eyes" emoji.
            Description: Face with rolling eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithSteamFromNose">
            <summary>
            Gets the "face_with_steam_from_nose" emoji.
            Description: Face with steam from nose.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithSymbolsOnMouth">
            <summary>
            Gets the "face_with_symbols_on_mouth" emoji.
            Description: Face with symbols on mouth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithTearsOfJoy">
            <summary>
            Gets the "face_with_tears_of_joy" emoji.
            Description: Face with tears of joy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithThermometer">
            <summary>
            Gets the "face_with_thermometer" emoji.
            Description: Face with thermometer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaceWithTongue">
            <summary>
            Gets the "face_with_tongue" emoji.
            Description: Face with tongue.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Factory">
            <summary>
            Gets the "factory" emoji.
            Description: Factory.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fairy">
            <summary>
            Gets the "fairy" emoji.
            Description: Fairy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Falafel">
            <summary>
            Gets the "falafel" emoji.
            Description: Falafel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FallenLeaf">
            <summary>
            Gets the "fallen_leaf" emoji.
            Description: Fallen leaf.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Family">
            <summary>
            Gets the "family" emoji.
            Description: Family.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FastDownButton">
            <summary>
            Gets the "fast_down_button" emoji.
            Description: Fast down button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FastForwardButton">
            <summary>
            Gets the "fast_forward_button" emoji.
            Description: fast forward button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FastReverseButton">
            <summary>
            Gets the "fast_reverse_button" emoji.
            Description: Fast reverse button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FastUpButton">
            <summary>
            Gets the "fast_up_button" emoji.
            Description: Fast up button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FaxMachine">
            <summary>
            Gets the "fax_machine" emoji.
            Description: Fax machine.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FearfulFace">
            <summary>
            Gets the "fearful_face" emoji.
            Description: Fearful face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Feather">
            <summary>
            Gets the "feather" emoji.
            Description: Feather.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FemaleSign">
            <summary>
            Gets the "female_sign" emoji.
            Description: Female sign.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FerrisWheel">
            <summary>
            Gets the "ferris_wheel" emoji.
            Description: Ferris wheel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ferry">
            <summary>
            Gets the "ferry" emoji.
            Description: Ferry.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FieldHockey">
            <summary>
            Gets the "field_hockey" emoji.
            Description: Field hockey.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FileCabinet">
            <summary>
            Gets the "file_cabinet" emoji.
            Description: File cabinet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FileFolder">
            <summary>
            Gets the "file_folder" emoji.
            Description: File folder.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FilmFrames">
            <summary>
            Gets the "film_frames" emoji.
            Description: Film frames.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FilmProjector">
            <summary>
            Gets the "film_projector" emoji.
            Description: Film projector.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fire">
            <summary>
            Gets the "fire" emoji.
            Description: Fire.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Firecracker">
            <summary>
            Gets the "firecracker" emoji.
            Description: Firecracker.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FireEngine">
            <summary>
            Gets the "fire_engine" emoji.
            Description: Fire engine.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FireExtinguisher">
            <summary>
            Gets the "fire_extinguisher" emoji.
            Description: Fire extinguisher.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fireworks">
            <summary>
            Gets the "fireworks" emoji.
            Description: Fireworks.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FirstPlaceMedal">
            <summary>
            Gets the "1st_place_medal" emoji.
            Description: 1st place medal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FirstQuarterMoon">
            <summary>
            Gets the "first_quarter_moon" emoji.
            Description: First quarter moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FirstQuarterMoonFace">
            <summary>
            Gets the "first_quarter_moon_face" emoji.
            Description: First quarter moon face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fish">
            <summary>
            Gets the "fish" emoji.
            Description: Fish.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FishCakeWithSwirl">
            <summary>
            Gets the "fish_cake_with_swirl" emoji.
            Description: Fish cake with swirl.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FishingPole">
            <summary>
            Gets the "fishing_pole" emoji.
            Description: Fishing pole.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FiveOClock">
            <summary>
            Gets the "five_o_clock" emoji.
            Description: Five o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FiveThirty">
            <summary>
            Gets the "five_thirty" emoji.
            Description: five thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FlagInHole">
            <summary>
            Gets the "flag_in_hole" emoji.
            Description: Flag in hole.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Flamingo">
            <summary>
            Gets the "flamingo" emoji.
            Description: Flamingo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Flashlight">
            <summary>
            Gets the "flashlight" emoji.
            Description: Flashlight.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Flatbread">
            <summary>
            Gets the "flatbread" emoji.
            Description: Flatbread.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FlatShoe">
            <summary>
            Gets the "flat_shoe" emoji.
            Description: Flat shoe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FleurDeLis">
            <summary>
            Gets the "fleur_de_lis" emoji.
            Description: fleur de lis.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FlexedBiceps">
            <summary>
            Gets the "flexed_biceps" emoji.
            Description: Flexed biceps.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FloppyDisk">
            <summary>
            Gets the "floppy_disk" emoji.
            Description: Floppy disk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FlowerPlayingCards">
            <summary>
            Gets the "flower_playing_cards" emoji.
            Description: Flower playing cards.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FlushedFace">
            <summary>
            Gets the "flushed_face" emoji.
            Description: Flushed face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fly">
            <summary>
            Gets the "fly" emoji.
            Description: Fly.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FlyingDisc">
            <summary>
            Gets the "flying_disc" emoji.
            Description: Flying disc.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FlyingSaucer">
            <summary>
            Gets the "flying_saucer" emoji.
            Description: Flying saucer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fog">
            <summary>
            Gets the "fog" emoji.
            Description: Fog.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Foggy">
            <summary>
            Gets the "foggy" emoji.
            Description: Foggy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FoldedHands">
            <summary>
            Gets the "folded_hands" emoji.
            Description: Folded hands.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fondue">
            <summary>
            Gets the "fondue" emoji.
            Description: Fondue.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Foot">
            <summary>
            Gets the "foot" emoji.
            Description: Foot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Footprints">
            <summary>
            Gets the "footprints" emoji.
            Description: Footprints.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ForkAndKnife">
            <summary>
            Gets the "fork_and_knife" emoji.
            Description: Fork and knife.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ForkAndKnifeWithPlate">
            <summary>
            Gets the "fork_and_knife_with_plate" emoji.
            Description: Fork and knife with plate.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FortuneCookie">
            <summary>
            Gets the "fortune_cookie" emoji.
            Description: Fortune cookie.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fountain">
            <summary>
            Gets the "fountain" emoji.
            Description: Fountain.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FountainPen">
            <summary>
            Gets the "fountain_pen" emoji.
            Description: Fountain pen.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FourLeafClover">
            <summary>
            Gets the "four_leaf_clover" emoji.
            Description: Four leaf clover.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FourOClock">
            <summary>
            Gets the "four_o_clock" emoji.
            Description: Four o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FourThirty">
            <summary>
            Gets the "four_thirty" emoji.
            Description: four thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Fox">
            <summary>
            Gets the "fox" emoji.
            Description: Fox.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FramedPicture">
            <summary>
            Gets the "framed_picture" emoji.
            Description: Framed picture.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FreeButton">
            <summary>
            Gets the "free_button" emoji.
            Description: FREE button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FrenchFries">
            <summary>
            Gets the "french_fries" emoji.
            Description: French fries.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FriedShrimp">
            <summary>
            Gets the "fried_shrimp" emoji.
            Description: Fried shrimp.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Frog">
            <summary>
            Gets the "frog" emoji.
            Description: Frog.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FrontFacingBabyChick">
            <summary>
            Gets the "front_facing_baby_chick" emoji.
            Description: front facing baby chick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FrowningFace">
            <summary>
            Gets the "frowning_face" emoji.
            Description: Frowning face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FrowningFaceWithOpenMouth">
            <summary>
            Gets the "frowning_face_with_open_mouth" emoji.
            Description: Frowning face with open mouth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FuelPump">
            <summary>
            Gets the "fuel_pump" emoji.
            Description: Fuel pump.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FullMoon">
            <summary>
            Gets the "full_moon" emoji.
            Description: Full moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FullMoonFace">
            <summary>
            Gets the "full_moon_face" emoji.
            Description: Full moon face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.FuneralUrn">
            <summary>
            Gets the "funeral_urn" emoji.
            Description: Funeral urn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GameDie">
            <summary>
            Gets the "game_die" emoji.
            Description: Game die.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Garlic">
            <summary>
            Gets the "garlic" emoji.
            Description: Garlic.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Gear">
            <summary>
            Gets the "gear" emoji.
            Description: Gear.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Gemini">
            <summary>
            Gets the "gemini" emoji.
            Description: Gemini.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GemStone">
            <summary>
            Gets the "gem_stone" emoji.
            Description: Gem stone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Genie">
            <summary>
            Gets the "genie" emoji.
            Description: Genie.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ghost">
            <summary>
            Gets the "ghost" emoji.
            Description: Ghost.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Giraffe">
            <summary>
            Gets the "giraffe" emoji.
            Description: Giraffe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Girl">
            <summary>
            Gets the "girl" emoji.
            Description: Girl.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Glasses">
            <summary>
            Gets the "glasses" emoji.
            Description: Glasses.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GlassOfMilk">
            <summary>
            Gets the "glass_of_milk" emoji.
            Description: Glass of milk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GlobeShowingAmericas">
            <summary>
            Gets the "globe_showing_americas" emoji.
            Description: Globe showing americas.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GlobeShowingAsiaAustralia">
            <summary>
            Gets the "globe_showing_asia_australia" emoji.
            Description: globe showing Asia Australia.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GlobeShowingEuropeAfrica">
            <summary>
            Gets the "globe_showing_europe_africa" emoji.
            Description: globe showing Europe Africa.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GlobeWithMeridians">
            <summary>
            Gets the "globe_with_meridians" emoji.
            Description: Globe with meridians.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Gloves">
            <summary>
            Gets the "gloves" emoji.
            Description: Gloves.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GlowingStar">
            <summary>
            Gets the "glowing_star" emoji.
            Description: Glowing star.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GoalNet">
            <summary>
            Gets the "goal_net" emoji.
            Description: Goal net.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Goat">
            <summary>
            Gets the "goat" emoji.
            Description: Goat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Goblin">
            <summary>
            Gets the "goblin" emoji.
            Description: Goblin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Goggles">
            <summary>
            Gets the "goggles" emoji.
            Description: Goggles.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Gorilla">
            <summary>
            Gets the "gorilla" emoji.
            Description: Gorilla.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GraduationCap">
            <summary>
            Gets the "graduation_cap" emoji.
            Description: Graduation cap.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Grapes">
            <summary>
            Gets the "grapes" emoji.
            Description: Grapes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GreenApple">
            <summary>
            Gets the "green_apple" emoji.
            Description: Green apple.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GreenBook">
            <summary>
            Gets the "green_book" emoji.
            Description: Green book.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GreenCircle">
            <summary>
            Gets the "green_circle" emoji.
            Description: Green circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GreenHeart">
            <summary>
            Gets the "green_heart" emoji.
            Description: Green heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GreenSalad">
            <summary>
            Gets the "green_salad" emoji.
            Description: Green salad.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GreenSquare">
            <summary>
            Gets the "green_square" emoji.
            Description: Green square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrimacingFace">
            <summary>
            Gets the "grimacing_face" emoji.
            Description: Grimacing face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrinningCat">
            <summary>
            Gets the "grinning_cat" emoji.
            Description: Grinning cat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrinningCatWithSmilingEyes">
            <summary>
            Gets the "grinning_cat_with_smiling_eyes" emoji.
            Description: Grinning cat with smiling eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrinningFace">
            <summary>
            Gets the "grinning_face" emoji.
            Description: Grinning face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrinningFaceWithBigEyes">
            <summary>
            Gets the "grinning_face_with_big_eyes" emoji.
            Description: Grinning face with big eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrinningFaceWithSmilingEyes">
            <summary>
            Gets the "grinning_face_with_smiling_eyes" emoji.
            Description: Grinning face with smiling eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrinningFaceWithSweat">
            <summary>
            Gets the "grinning_face_with_sweat" emoji.
            Description: Grinning face with sweat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrinningSquintingFace">
            <summary>
            Gets the "grinning_squinting_face" emoji.
            Description: Grinning squinting face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GrowingHeart">
            <summary>
            Gets the "growing_heart" emoji.
            Description: Growing heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Guard">
            <summary>
            Gets the "guard" emoji.
            Description: Guard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.GuideDog">
            <summary>
            Gets the "guide_dog" emoji.
            Description: Guide dog.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Guitar">
            <summary>
            Gets the "guitar" emoji.
            Description: Guitar.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hamburger">
            <summary>
            Gets the "hamburger" emoji.
            Description: Hamburger.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hammer">
            <summary>
            Gets the "hammer" emoji.
            Description: Hammer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HammerAndPick">
            <summary>
            Gets the "hammer_and_pick" emoji.
            Description: Hammer and pick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HammerAndWrench">
            <summary>
            Gets the "hammer_and_wrench" emoji.
            Description: Hammer and wrench.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hamster">
            <summary>
            Gets the "hamster" emoji.
            Description: Hamster.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Handbag">
            <summary>
            Gets the "handbag" emoji.
            Description: Handbag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Handshake">
            <summary>
            Gets the "handshake" emoji.
            Description: Handshake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HandWithFingersSplayed">
            <summary>
            Gets the "hand_with_fingers_splayed" emoji.
            Description: Hand with fingers splayed.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HatchingChick">
            <summary>
            Gets the "hatching_chick" emoji.
            Description: Hatching chick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Headphone">
            <summary>
            Gets the "headphone" emoji.
            Description: Headphone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Headstone">
            <summary>
            Gets the "headstone" emoji.
            Description: Headstone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HearNoEvilMonkey">
            <summary>
            Gets the "hear_no_evil_monkey" emoji.
            Description: hear no evil monkey.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HeartDecoration">
            <summary>
            Gets the "heart_decoration" emoji.
            Description: Heart decoration.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HeartExclamation">
            <summary>
            Gets the "heart_exclamation" emoji.
            Description: Heart exclamation.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HeartSuit">
            <summary>
            Gets the "heart_suit" emoji.
            Description: Heart suit.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HeartWithArrow">
            <summary>
            Gets the "heart_with_arrow" emoji.
            Description: Heart with arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HeartWithRibbon">
            <summary>
            Gets the "heart_with_ribbon" emoji.
            Description: Heart with ribbon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HeavyDollarSign">
            <summary>
            Gets the "heavy_dollar_sign" emoji.
            Description: Heavy dollar sign.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hedgehog">
            <summary>
            Gets the "hedgehog" emoji.
            Description: Hedgehog.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Helicopter">
            <summary>
            Gets the "helicopter" emoji.
            Description: Helicopter.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Herb">
            <summary>
            Gets the "herb" emoji.
            Description: Herb.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hibiscus">
            <summary>
            Gets the "hibiscus" emoji.
            Description: Hibiscus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HighHeeledShoe">
            <summary>
            Gets the "high_heeled_shoe" emoji.
            Description: high heeled shoe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HighSpeedTrain">
            <summary>
            Gets the "high_speed_train" emoji.
            Description: high speed train.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HighVoltage">
            <summary>
            Gets the "high_voltage" emoji.
            Description: High voltage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HikingBoot">
            <summary>
            Gets the "hiking_boot" emoji.
            Description: Hiking boot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HinduTemple">
            <summary>
            Gets the "hindu_temple" emoji.
            Description: Hindu temple.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hippopotamus">
            <summary>
            Gets the "hippopotamus" emoji.
            Description: Hippopotamus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hole">
            <summary>
            Gets the "hole" emoji.
            Description: Hole.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HollowRedCircle">
            <summary>
            Gets the "hollow_red_circle" emoji.
            Description: Hollow red circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Honeybee">
            <summary>
            Gets the "honeybee" emoji.
            Description: Honeybee.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HoneyPot">
            <summary>
            Gets the "honey_pot" emoji.
            Description: Honey pot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hook">
            <summary>
            Gets the "hook" emoji.
            Description: Hook.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HorizontalTrafficLight">
            <summary>
            Gets the "horizontal_traffic_light" emoji.
            Description: Horizontal traffic light.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Horse">
            <summary>
            Gets the "horse" emoji.
            Description: Horse.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HorseFace">
            <summary>
            Gets the "horse_face" emoji.
            Description: Horse face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HorseRacing">
            <summary>
            Gets the "horse_racing" emoji.
            Description: Horse racing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hospital">
            <summary>
            Gets the "hospital" emoji.
            Description: Hospital.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HotBeverage">
            <summary>
            Gets the "hot_beverage" emoji.
            Description: Hot beverage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HotDog">
            <summary>
            Gets the "hot_dog" emoji.
            Description: Hot dog.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hotel">
            <summary>
            Gets the "hotel" emoji.
            Description: Hotel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HotFace">
            <summary>
            Gets the "hot_face" emoji.
            Description: Hot face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HotPepper">
            <summary>
            Gets the "hot_pepper" emoji.
            Description: Hot pepper.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HotSprings">
            <summary>
            Gets the "hot_springs" emoji.
            Description: Hot springs.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HourglassDone">
            <summary>
            Gets the "hourglass_done" emoji.
            Description: Hourglass done.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HourglassNotDone">
            <summary>
            Gets the "hourglass_not_done" emoji.
            Description: Hourglass not done.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.House">
            <summary>
            Gets the "house" emoji.
            Description: House.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Houses">
            <summary>
            Gets the "houses" emoji.
            Description: Houses.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HouseWithGarden">
            <summary>
            Gets the "house_with_garden" emoji.
            Description: House with garden.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HuggingFace">
            <summary>
            Gets the "hugging_face" emoji.
            Description: Hugging face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HundredPoints">
            <summary>
            Gets the "hundred_points" emoji.
            Description: Hundred points.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.HushedFace">
            <summary>
            Gets the "hushed_face" emoji.
            Description: Hushed face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Hut">
            <summary>
            Gets the "hut" emoji.
            Description: Hut.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ice">
            <summary>
            Gets the "ice" emoji.
            Description: Ice.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.IceCream">
            <summary>
            Gets the "ice_cream" emoji.
            Description: Ice cream.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.IceHockey">
            <summary>
            Gets the "ice_hockey" emoji.
            Description: Ice hockey.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.IceSkate">
            <summary>
            Gets the "ice_skate" emoji.
            Description: Ice skate.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.IdButton">
            <summary>
            Gets the "id_button" emoji.
            Description: ID button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.InboxTray">
            <summary>
            Gets the "inbox_tray" emoji.
            Description: Inbox tray.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.IncomingEnvelope">
            <summary>
            Gets the "incoming_envelope" emoji.
            Description: Incoming envelope.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.IndexPointingUp">
            <summary>
            Gets the "index_pointing_up" emoji.
            Description: Index pointing up.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Infinity">
            <summary>
            Gets the "infinity" emoji.
            Description: Infinity.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Information">
            <summary>
            Gets the "information" emoji.
            Description: Information.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.InputLatinLetters">
            <summary>
            Gets the "input_latin_letters" emoji.
            Description: Input latin letters.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.InputLatinLowercase">
            <summary>
            Gets the "input_latin_lowercase" emoji.
            Description: Input latin lowercase.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.InputLatinUppercase">
            <summary>
            Gets the "input_latin_uppercase" emoji.
            Description: Input latin uppercase.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.InputNumbers">
            <summary>
            Gets the "input_numbers" emoji.
            Description: Input numbers.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.InputSymbols">
            <summary>
            Gets the "input_symbols" emoji.
            Description: Input symbols.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JackOLantern">
            <summary>
            Gets the "jack_o_lantern" emoji.
            Description: jack o lantern.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseAcceptableButton">
            <summary>
            Gets the "japanese_acceptable_button" emoji.
            Description: Japanese acceptable button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseApplicationButton">
            <summary>
            Gets the "japanese_application_button" emoji.
            Description: Japanese application button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseBargainButton">
            <summary>
            Gets the "japanese_bargain_button" emoji.
            Description: Japanese bargain button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseCastle">
            <summary>
            Gets the "japanese_castle" emoji.
            Description: Japanese castle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseCongratulationsButton">
            <summary>
            Gets the "japanese_congratulations_button" emoji.
            Description: Japanese congratulations button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseDiscountButton">
            <summary>
            Gets the "japanese_discount_button" emoji.
            Description: Japanese discount button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseDolls">
            <summary>
            Gets the "japanese_dolls" emoji.
            Description: Japanese dolls.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseFreeOfChargeButton">
            <summary>
            Gets the "japanese_free_of_charge_button" emoji.
            Description: Japanese free of charge button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseHereButton">
            <summary>
            Gets the "japanese_here_button" emoji.
            Description: Japanese here button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseMonthlyAmountButton">
            <summary>
            Gets the "japanese_monthly_amount_button" emoji.
            Description: Japanese monthly amount button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseNotFreeOfChargeButton">
            <summary>
            Gets the "japanese_not_free_of_charge_button" emoji.
            Description: Japanese not free of charge button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseNoVacancyButton">
            <summary>
            Gets the "japanese_no_vacancy_button" emoji.
            Description: Japanese no vacancy button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseOpenForBusinessButton">
            <summary>
            Gets the "japanese_open_for_business_button" emoji.
            Description: Japanese open for business button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapanesePassingGradeButton">
            <summary>
            Gets the "japanese_passing_grade_button" emoji.
            Description: Japanese passing grade button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapanesePostOffice">
            <summary>
            Gets the "japanese_post_office" emoji.
            Description: Japanese post office.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseProhibitedButton">
            <summary>
            Gets the "japanese_prohibited_button" emoji.
            Description: Japanese prohibited button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseReservedButton">
            <summary>
            Gets the "japanese_reserved_button" emoji.
            Description: Japanese reserved button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseSecretButton">
            <summary>
            Gets the "japanese_secret_button" emoji.
            Description: Japanese secret button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseServiceChargeButton">
            <summary>
            Gets the "japanese_service_charge_button" emoji.
            Description: Japanese service charge button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseSymbolForBeginner">
            <summary>
            Gets the "japanese_symbol_for_beginner" emoji.
            Description: Japanese symbol for beginner.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.JapaneseVacancyButton">
            <summary>
            Gets the "japanese_vacancy_button" emoji.
            Description: Japanese vacancy button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Jeans">
            <summary>
            Gets the "jeans" emoji.
            Description: Jeans.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Joker">
            <summary>
            Gets the "joker" emoji.
            Description: Joker.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Joystick">
            <summary>
            Gets the "joystick" emoji.
            Description: Joystick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Kaaba">
            <summary>
            Gets the "kaaba" emoji.
            Description: Kaaba.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Kangaroo">
            <summary>
            Gets the "kangaroo" emoji.
            Description: Kangaroo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Key">
            <summary>
            Gets the "key" emoji.
            Description: Key.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Keyboard">
            <summary>
            Gets the "keyboard" emoji.
            Description: Keyboard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Keycap10">
            <summary>
            Gets the "keycap_10" emoji.
            Description: Keycap 10.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KickScooter">
            <summary>
            Gets the "kick_scooter" emoji.
            Description: Kick scooter.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Kimono">
            <summary>
            Gets the "kimono" emoji.
            Description: Kimono.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Kiss">
            <summary>
            Gets the "kiss" emoji.
            Description: Kiss.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KissingCat">
            <summary>
            Gets the "kissing_cat" emoji.
            Description: Kissing cat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KissingFace">
            <summary>
            Gets the "kissing_face" emoji.
            Description: Kissing face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KissingFaceWithClosedEyes">
            <summary>
            Gets the "kissing_face_with_closed_eyes" emoji.
            Description: Kissing face with closed eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KissingFaceWithSmilingEyes">
            <summary>
            Gets the "kissing_face_with_smiling_eyes" emoji.
            Description: Kissing face with smiling eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KissMark">
            <summary>
            Gets the "kiss_mark" emoji.
            Description: Kiss mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KitchenKnife">
            <summary>
            Gets the "kitchen_knife" emoji.
            Description: Kitchen knife.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Kite">
            <summary>
            Gets the "kite" emoji.
            Description: Kite.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KiwiFruit">
            <summary>
            Gets the "kiwi_fruit" emoji.
            Description: Kiwi fruit.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.KnockedOutFace">
            <summary>
            Gets the "knocked_out_face" emoji.
            Description: knocked out face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Knot">
            <summary>
            Gets the "knot" emoji.
            Description: Knot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Koala">
            <summary>
            Gets the "koala" emoji.
            Description: Koala.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LabCoat">
            <summary>
            Gets the "lab_coat" emoji.
            Description: Lab coat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Label">
            <summary>
            Gets the "label" emoji.
            Description: Label.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lacrosse">
            <summary>
            Gets the "lacrosse" emoji.
            Description: Lacrosse.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ladder">
            <summary>
            Gets the "ladder" emoji.
            Description: Ladder.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LadyBeetle">
            <summary>
            Gets the "lady_beetle" emoji.
            Description: Lady beetle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Laptop">
            <summary>
            Gets the "laptop" emoji.
            Description: Laptop.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LargeBlueDiamond">
            <summary>
            Gets the "large_blue_diamond" emoji.
            Description: Large blue diamond.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LargeOrangeDiamond">
            <summary>
            Gets the "large_orange_diamond" emoji.
            Description: Large orange diamond.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LastQuarterMoon">
            <summary>
            Gets the "last_quarter_moon" emoji.
            Description: Last quarter moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LastQuarterMoonFace">
            <summary>
            Gets the "last_quarter_moon_face" emoji.
            Description: Last quarter moon face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LastTrackButton">
            <summary>
            Gets the "last_track_button" emoji.
            Description: Last track button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LatinCross">
            <summary>
            Gets the "latin_cross" emoji.
            Description: Latin cross.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeafFlutteringInWind">
            <summary>
            Gets the "leaf_fluttering_in_wind" emoji.
            Description: Leaf fluttering in wind.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeafyGreen">
            <summary>
            Gets the "leafy_green" emoji.
            Description: Leafy green.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ledger">
            <summary>
            Gets the "ledger" emoji.
            Description: Ledger.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeftArrow">
            <summary>
            Gets the "left_arrow" emoji.
            Description: Left arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeftArrowCurvingRight">
            <summary>
            Gets the "left_arrow_curving_right" emoji.
            Description: Left arrow curving right.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeftFacingFist">
            <summary>
            Gets the "left_facing_fist" emoji.
            Description: left facing fist.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeftLuggage">
            <summary>
            Gets the "left_luggage" emoji.
            Description: Left luggage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeftRightArrow">
            <summary>
            Gets the "left_right_arrow" emoji.
            Description: left right arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LeftSpeechBubble">
            <summary>
            Gets the "left_speech_bubble" emoji.
            Description: Left speech bubble.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Leg">
            <summary>
            Gets the "leg" emoji.
            Description: Leg.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lemon">
            <summary>
            Gets the "lemon" emoji.
            Description: Lemon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Leo">
            <summary>
            Gets the "leo" emoji.
            Description: Leo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Leopard">
            <summary>
            Gets the "leopard" emoji.
            Description: Leopard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LevelSlider">
            <summary>
            Gets the "level_slider" emoji.
            Description: Level slider.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Libra">
            <summary>
            Gets the "libra" emoji.
            Description: Libra.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LightBulb">
            <summary>
            Gets the "light_bulb" emoji.
            Description: Light bulb.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LightRail">
            <summary>
            Gets the "light_rail" emoji.
            Description: Light rail.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Link">
            <summary>
            Gets the "link" emoji.
            Description: Link.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LinkedPaperclips">
            <summary>
            Gets the "linked_paperclips" emoji.
            Description: Linked paperclips.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lion">
            <summary>
            Gets the "lion" emoji.
            Description: Lion.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lipstick">
            <summary>
            Gets the "lipstick" emoji.
            Description: Lipstick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LitterInBinSign">
            <summary>
            Gets the "litter_in_bin_sign" emoji.
            Description: Litter in bin sign.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lizard">
            <summary>
            Gets the "lizard" emoji.
            Description: Lizard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Llama">
            <summary>
            Gets the "llama" emoji.
            Description: Llama.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lobster">
            <summary>
            Gets the "lobster" emoji.
            Description: Lobster.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Locked">
            <summary>
            Gets the "locked" emoji.
            Description: Locked.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LockedWithKey">
            <summary>
            Gets the "locked_with_key" emoji.
            Description: Locked with key.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LockedWithPen">
            <summary>
            Gets the "locked_with_pen" emoji.
            Description: Locked with pen.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Locomotive">
            <summary>
            Gets the "locomotive" emoji.
            Description: Locomotive.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lollipop">
            <summary>
            Gets the "lollipop" emoji.
            Description: Lollipop.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LongDrum">
            <summary>
            Gets the "long_drum" emoji.
            Description: Long drum.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LotionBottle">
            <summary>
            Gets the "lotion_bottle" emoji.
            Description: Lotion bottle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LoudlyCryingFace">
            <summary>
            Gets the "loudly_crying_face" emoji.
            Description: Loudly crying face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Loudspeaker">
            <summary>
            Gets the "loudspeaker" emoji.
            Description: Loudspeaker.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LoveHotel">
            <summary>
            Gets the "love_hotel" emoji.
            Description: Love hotel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LoveLetter">
            <summary>
            Gets the "love_letter" emoji.
            Description: Love letter.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LoveYouGesture">
            <summary>
            Gets the "love_you_gesture" emoji.
            Description: love you gesture.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Luggage">
            <summary>
            Gets the "luggage" emoji.
            Description: Luggage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Lungs">
            <summary>
            Gets the "lungs" emoji.
            Description: Lungs.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.LyingFace">
            <summary>
            Gets the "lying_face" emoji.
            Description: Lying face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mage">
            <summary>
            Gets the "mage" emoji.
            Description: Mage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MagicWand">
            <summary>
            Gets the "magic_wand" emoji.
            Description: Magic wand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Magnet">
            <summary>
            Gets the "magnet" emoji.
            Description: Magnet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MagnifyingGlassTiltedLeft">
            <summary>
            Gets the "magnifying_glass_tilted_left" emoji.
            Description: Magnifying glass tilted left.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MagnifyingGlassTiltedRight">
            <summary>
            Gets the "magnifying_glass_tilted_right" emoji.
            Description: Magnifying glass tilted right.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MahjongRedDragon">
            <summary>
            Gets the "mahjong_red_dragon" emoji.
            Description: Mahjong red dragon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MaleSign">
            <summary>
            Gets the "male_sign" emoji.
            Description: Male sign.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mammoth">
            <summary>
            Gets the "mammoth" emoji.
            Description: Mammoth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Man">
            <summary>
            Gets the "man" emoji.
            Description: Man.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ManDancing">
            <summary>
            Gets the "man_dancing" emoji.
            Description: Man dancing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mango">
            <summary>
            Gets the "mango" emoji.
            Description: Mango.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MansShoe">
            <summary>
            Gets the "mans_shoe" emoji.
            Description: Man s shoe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MantelpieceClock">
            <summary>
            Gets the "mantelpiece_clock" emoji.
            Description: Mantelpiece clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ManualWheelchair">
            <summary>
            Gets the "manual_wheelchair" emoji.
            Description: Manual wheelchair.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MapleLeaf">
            <summary>
            Gets the "maple_leaf" emoji.
            Description: Maple leaf.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MapOfJapan">
            <summary>
            Gets the "map_of_japan" emoji.
            Description: Map of japan.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MartialArtsUniform">
            <summary>
            Gets the "martial_arts_uniform" emoji.
            Description: Martial arts uniform.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mate">
            <summary>
            Gets the "mate" emoji.
            Description: Mate.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MeatOnBone">
            <summary>
            Gets the "meat_on_bone" emoji.
            Description: Meat on bone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MechanicalArm">
            <summary>
            Gets the "mechanical_arm" emoji.
            Description: Mechanical arm.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MechanicalLeg">
            <summary>
            Gets the "mechanical_leg" emoji.
            Description: Mechanical leg.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MedicalSymbol">
            <summary>
            Gets the "medical_symbol" emoji.
            Description: Medical symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Megaphone">
            <summary>
            Gets the "megaphone" emoji.
            Description: Megaphone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Melon">
            <summary>
            Gets the "melon" emoji.
            Description: Melon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Memo">
            <summary>
            Gets the "memo" emoji.
            Description: Memo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MenHoldingHands">
            <summary>
            Gets the "men_holding_hands" emoji.
            Description: Men holding hands.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Menorah">
            <summary>
            Gets the "menorah" emoji.
            Description: Menorah.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MensRoom">
            <summary>
            Gets the "mens_room" emoji.
            Description: Men s room.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Merperson">
            <summary>
            Gets the "merperson" emoji.
            Description: Merperson.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Metro">
            <summary>
            Gets the "metro" emoji.
            Description: Metro.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Microbe">
            <summary>
            Gets the "microbe" emoji.
            Description: Microbe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Microphone">
            <summary>
            Gets the "microphone" emoji.
            Description: Microphone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Microscope">
            <summary>
            Gets the "microscope" emoji.
            Description: Microscope.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MiddleFinger">
            <summary>
            Gets the "middle_finger" emoji.
            Description: Middle finger.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MilitaryHelmet">
            <summary>
            Gets the "military_helmet" emoji.
            Description: Military helmet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MilitaryMedal">
            <summary>
            Gets the "military_medal" emoji.
            Description: Military medal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MilkyWay">
            <summary>
            Gets the "milky_way" emoji.
            Description: Milky way.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Minibus">
            <summary>
            Gets the "minibus" emoji.
            Description: Minibus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Minus">
            <summary>
            Gets the "minus" emoji.
            Description: Minus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mirror">
            <summary>
            Gets the "mirror" emoji.
            Description: Mirror.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Moai">
            <summary>
            Gets the "moai" emoji.
            Description: Moai.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MobilePhone">
            <summary>
            Gets the "mobile_phone" emoji.
            Description: Mobile phone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MobilePhoneOff">
            <summary>
            Gets the "mobile_phone_off" emoji.
            Description: Mobile phone off.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MobilePhoneWithArrow">
            <summary>
            Gets the "mobile_phone_with_arrow" emoji.
            Description: Mobile phone with arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MoneyBag">
            <summary>
            Gets the "money_bag" emoji.
            Description: Money bag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MoneyMouthFace">
            <summary>
            Gets the "money_mouth_face" emoji.
            Description: money mouth face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MoneyWithWings">
            <summary>
            Gets the "money_with_wings" emoji.
            Description: Money with wings.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Monkey">
            <summary>
            Gets the "monkey" emoji.
            Description: Monkey.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MonkeyFace">
            <summary>
            Gets the "monkey_face" emoji.
            Description: Monkey face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Monorail">
            <summary>
            Gets the "monorail" emoji.
            Description: Monorail.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MoonCake">
            <summary>
            Gets the "moon_cake" emoji.
            Description: Moon cake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MoonViewingCeremony">
            <summary>
            Gets the "moon_viewing_ceremony" emoji.
            Description: Moon viewing ceremony.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mosque">
            <summary>
            Gets the "mosque" emoji.
            Description: Mosque.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mosquito">
            <summary>
            Gets the "mosquito" emoji.
            Description: Mosquito.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MotorBoat">
            <summary>
            Gets the "motor_boat" emoji.
            Description: Motor boat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Motorcycle">
            <summary>
            Gets the "motorcycle" emoji.
            Description: Motorcycle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MotorizedWheelchair">
            <summary>
            Gets the "motorized_wheelchair" emoji.
            Description: Motorized wheelchair.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MotorScooter">
            <summary>
            Gets the "motor_scooter" emoji.
            Description: Motor scooter.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Motorway">
            <summary>
            Gets the "motorway" emoji.
            Description: Motorway.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mountain">
            <summary>
            Gets the "mountain" emoji.
            Description: Mountain.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MountainCableway">
            <summary>
            Gets the "mountain_cableway" emoji.
            Description: Mountain cableway.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MountainRailway">
            <summary>
            Gets the "mountain_railway" emoji.
            Description: Mountain railway.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MountFuji">
            <summary>
            Gets the "mount_fuji" emoji.
            Description: Mount fuji.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mouse">
            <summary>
            Gets the "mouse" emoji.
            Description: Mouse.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MouseFace">
            <summary>
            Gets the "mouse_face" emoji.
            Description: Mouse face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MouseTrap">
            <summary>
            Gets the "mouse_trap" emoji.
            Description: Mouse trap.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mouth">
            <summary>
            Gets the "mouth" emoji.
            Description: Mouth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MovieCamera">
            <summary>
            Gets the "movie_camera" emoji.
            Description: Movie camera.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MrsClaus">
            <summary>
            Gets the "mrs_claus" emoji.
            Description: Mrs claus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Multiply">
            <summary>
            Gets the "multiply" emoji.
            Description: Multiply.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Mushroom">
            <summary>
            Gets the "mushroom" emoji.
            Description: Mushroom.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MusicalKeyboard">
            <summary>
            Gets the "musical_keyboard" emoji.
            Description: Musical keyboard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MusicalNote">
            <summary>
            Gets the "musical_note" emoji.
            Description: Musical note.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MusicalNotes">
            <summary>
            Gets the "musical_notes" emoji.
            Description: Musical notes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MusicalScore">
            <summary>
            Gets the "musical_score" emoji.
            Description: Musical score.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.MutedSpeaker">
            <summary>
            Gets the "muted_speaker" emoji.
            Description: Muted speaker.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NailPolish">
            <summary>
            Gets the "nail_polish" emoji.
            Description: Nail polish.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NameBadge">
            <summary>
            Gets the "name_badge" emoji.
            Description: Name badge.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NationalPark">
            <summary>
            Gets the "national_park" emoji.
            Description: National park.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NauseatedFace">
            <summary>
            Gets the "nauseated_face" emoji.
            Description: Nauseated face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NazarAmulet">
            <summary>
            Gets the "nazar_amulet" emoji.
            Description: Nazar amulet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Necktie">
            <summary>
            Gets the "necktie" emoji.
            Description: Necktie.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NerdFace">
            <summary>
            Gets the "nerd_face" emoji.
            Description: Nerd face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NestingDolls">
            <summary>
            Gets the "nesting_dolls" emoji.
            Description: Nesting dolls.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NeutralFace">
            <summary>
            Gets the "neutral_face" emoji.
            Description: Neutral face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NewButton">
            <summary>
            Gets the "new_button" emoji.
            Description: NEW button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NewMoon">
            <summary>
            Gets the "new_moon" emoji.
            Description: New moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NewMoonFace">
            <summary>
            Gets the "new_moon_face" emoji.
            Description: New moon face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Newspaper">
            <summary>
            Gets the "newspaper" emoji.
            Description: Newspaper.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NextTrackButton">
            <summary>
            Gets the "next_track_button" emoji.
            Description: Next track button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NgButton">
            <summary>
            Gets the "ng_button" emoji.
            Description: NG button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NightWithStars">
            <summary>
            Gets the "night_with_stars" emoji.
            Description: Night with stars.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NineOClock">
            <summary>
            Gets the "nine_o_clock" emoji.
            Description: Nine o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NineThirty">
            <summary>
            Gets the "nine_thirty" emoji.
            Description: nine thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ninja">
            <summary>
            Gets the "ninja" emoji.
            Description: Ninja.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NoBicycles">
            <summary>
            Gets the "no_bicycles" emoji.
            Description: No bicycles.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NoEntry">
            <summary>
            Gets the "no_entry" emoji.
            Description: No entry.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NoLittering">
            <summary>
            Gets the "no_littering" emoji.
            Description: No littering.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NoMobilePhones">
            <summary>
            Gets the "no_mobile_phones" emoji.
            Description: No mobile phones.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NonPotableWater">
            <summary>
            Gets the "non_potable_water" emoji.
            Description: non potable water.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NoOneUnderEighteen">
            <summary>
            Gets the "no_one_under_eighteen" emoji.
            Description: No one under eighteen.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NoPedestrians">
            <summary>
            Gets the "no_pedestrians" emoji.
            Description: No pedestrians.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Nose">
            <summary>
            Gets the "nose" emoji.
            Description: Nose.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NoSmoking">
            <summary>
            Gets the "no_smoking" emoji.
            Description: No smoking.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Notebook">
            <summary>
            Gets the "notebook" emoji.
            Description: Notebook.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NotebookWithDecorativeCover">
            <summary>
            Gets the "notebook_with_decorative_cover" emoji.
            Description: Notebook with decorative cover.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.NutAndBolt">
            <summary>
            Gets the "nut_and_bolt" emoji.
            Description: Nut and bolt.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OButtonBloodType">
            <summary>
            Gets the "o_button_blood_type" emoji.
            Description: O button blood type.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Octopus">
            <summary>
            Gets the "octopus" emoji.
            Description: Octopus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Oden">
            <summary>
            Gets the "oden" emoji.
            Description: Oden.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OfficeBuilding">
            <summary>
            Gets the "office_building" emoji.
            Description: Office building.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ogre">
            <summary>
            Gets the "ogre" emoji.
            Description: Ogre.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OilDrum">
            <summary>
            Gets the "oil_drum" emoji.
            Description: Oil drum.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OkButton">
            <summary>
            Gets the "ok_button" emoji.
            Description: OK button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OkHand">
            <summary>
            Gets the "ok_hand" emoji.
            Description: OK hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OlderPerson">
            <summary>
            Gets the "older_person" emoji.
            Description: Older person.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OldKey">
            <summary>
            Gets the "old_key" emoji.
            Description: Old key.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OldMan">
            <summary>
            Gets the "old_man" emoji.
            Description: Old man.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OldWoman">
            <summary>
            Gets the "old_woman" emoji.
            Description: Old woman.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Olive">
            <summary>
            Gets the "olive" emoji.
            Description: Olive.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Om">
            <summary>
            Gets the "om" emoji.
            Description: Om.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OnArrow">
            <summary>
            Gets the "on_arrow" emoji.
            Description: ON arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OncomingAutomobile">
            <summary>
            Gets the "oncoming_automobile" emoji.
            Description: Oncoming automobile.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OncomingBus">
            <summary>
            Gets the "oncoming_bus" emoji.
            Description: Oncoming bus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OncomingFist">
            <summary>
            Gets the "oncoming_fist" emoji.
            Description: Oncoming fist.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OncomingPoliceCar">
            <summary>
            Gets the "oncoming_police_car" emoji.
            Description: Oncoming police car.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OncomingTaxi">
            <summary>
            Gets the "oncoming_taxi" emoji.
            Description: Oncoming taxi.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OneOClock">
            <summary>
            Gets the "one_o_clock" emoji.
            Description: One o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OnePieceSwimsuit">
            <summary>
            Gets the "one_piece_swimsuit" emoji.
            Description: one piece swimsuit.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OneThirty">
            <summary>
            Gets the "one_thirty" emoji.
            Description: one thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Onion">
            <summary>
            Gets the "onion" emoji.
            Description: Onion.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OpenBook">
            <summary>
            Gets the "open_book" emoji.
            Description: Open book.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OpenFileFolder">
            <summary>
            Gets the "open_file_folder" emoji.
            Description: Open file folder.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OpenHands">
            <summary>
            Gets the "open_hands" emoji.
            Description: Open hands.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OpenMailboxWithLoweredFlag">
            <summary>
            Gets the "open_mailbox_with_lowered_flag" emoji.
            Description: Open mailbox with lowered flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OpenMailboxWithRaisedFlag">
            <summary>
            Gets the "open_mailbox_with_raised_flag" emoji.
            Description: Open mailbox with raised flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ophiuchus">
            <summary>
            Gets the "ophiuchus" emoji.
            Description: Ophiuchus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OpticalDisk">
            <summary>
            Gets the "optical_disk" emoji.
            Description: Optical disk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OrangeBook">
            <summary>
            Gets the "orange_book" emoji.
            Description: Orange book.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OrangeCircle">
            <summary>
            Gets the "orange_circle" emoji.
            Description: Orange circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OrangeHeart">
            <summary>
            Gets the "orange_heart" emoji.
            Description: Orange heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OrangeSquare">
            <summary>
            Gets the "orange_square" emoji.
            Description: Orange square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Orangutan">
            <summary>
            Gets the "orangutan" emoji.
            Description: Orangutan.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OrthodoxCross">
            <summary>
            Gets the "orthodox_cross" emoji.
            Description: Orthodox cross.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Otter">
            <summary>
            Gets the "otter" emoji.
            Description: Otter.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.OutboxTray">
            <summary>
            Gets the "outbox_tray" emoji.
            Description: Outbox tray.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Owl">
            <summary>
            Gets the "owl" emoji.
            Description: Owl.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ox">
            <summary>
            Gets the "ox" emoji.
            Description: Ox.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Oyster">
            <summary>
            Gets the "oyster" emoji.
            Description: Oyster.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Package">
            <summary>
            Gets the "package" emoji.
            Description: Package.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PageFacingUp">
            <summary>
            Gets the "page_facing_up" emoji.
            Description: Page facing up.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pager">
            <summary>
            Gets the "pager" emoji.
            Description: Pager.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PageWithCurl">
            <summary>
            Gets the "page_with_curl" emoji.
            Description: Page with curl.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Paintbrush">
            <summary>
            Gets the "paintbrush" emoji.
            Description: Paintbrush.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PalmsUpTogether">
            <summary>
            Gets the "palms_up_together" emoji.
            Description: Palms up together.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PalmTree">
            <summary>
            Gets the "palm_tree" emoji.
            Description: Palm tree.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pancakes">
            <summary>
            Gets the "pancakes" emoji.
            Description: Pancakes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Panda">
            <summary>
            Gets the "panda" emoji.
            Description: Panda.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Paperclip">
            <summary>
            Gets the "paperclip" emoji.
            Description: Paperclip.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Parachute">
            <summary>
            Gets the "parachute" emoji.
            Description: Parachute.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Parrot">
            <summary>
            Gets the "parrot" emoji.
            Description: Parrot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PartAlternationMark">
            <summary>
            Gets the "part_alternation_mark" emoji.
            Description: Part alternation mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PartyingFace">
            <summary>
            Gets the "partying_face" emoji.
            Description: Partying face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PartyPopper">
            <summary>
            Gets the "party_popper" emoji.
            Description: Party popper.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PassengerShip">
            <summary>
            Gets the "passenger_ship" emoji.
            Description: Passenger ship.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PassportControl">
            <summary>
            Gets the "passport_control" emoji.
            Description: Passport control.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PauseButton">
            <summary>
            Gets the "pause_button" emoji.
            Description: Pause button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PawPrints">
            <summary>
            Gets the "paw_prints" emoji.
            Description: Paw prints.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PButton">
            <summary>
            Gets the "p_button" emoji.
            Description: P button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PeaceSymbol">
            <summary>
            Gets the "peace_symbol" emoji.
            Description: Peace symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Peach">
            <summary>
            Gets the "peach" emoji.
            Description: Peach.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Peacock">
            <summary>
            Gets the "peacock" emoji.
            Description: Peacock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Peanuts">
            <summary>
            Gets the "peanuts" emoji.
            Description: Peanuts.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pear">
            <summary>
            Gets the "pear" emoji.
            Description: Pear.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pen">
            <summary>
            Gets the "pen" emoji.
            Description: Pen.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pencil">
            <summary>
            Gets the "pencil" emoji.
            Description: Pencil.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Penguin">
            <summary>
            Gets the "penguin" emoji.
            Description: Penguin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PensiveFace">
            <summary>
            Gets the "pensive_face" emoji.
            Description: Pensive face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PeopleHugging">
            <summary>
            Gets the "people_hugging" emoji.
            Description: People hugging.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PeopleWithBunnyEars">
            <summary>
            Gets the "people_with_bunny_ears" emoji.
            Description: People with bunny ears.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PeopleWrestling">
            <summary>
            Gets the "people_wrestling" emoji.
            Description: People wrestling.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PerformingArts">
            <summary>
            Gets the "performing_arts" emoji.
            Description: Performing arts.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PerseveringFace">
            <summary>
            Gets the "persevering_face" emoji.
            Description: Persevering face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Person">
            <summary>
            Gets the "person" emoji.
            Description: Person.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonBeard">
            <summary>
            Gets the "person_beard" emoji.
            Description: Person beard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonBiking">
            <summary>
            Gets the "person_biking" emoji.
            Description: Person biking.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonBlondHair">
            <summary>
            Gets the "person_blond_hair" emoji.
            Description: Person blond hair.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonBouncingBall">
            <summary>
            Gets the "person_bouncing_ball" emoji.
            Description: Person bouncing ball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonBowing">
            <summary>
            Gets the "person_bowing" emoji.
            Description: Person bowing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonCartwheeling">
            <summary>
            Gets the "person_cartwheeling" emoji.
            Description: Person cartwheeling.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonClimbing">
            <summary>
            Gets the "person_climbing" emoji.
            Description: Person climbing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonFacepalming">
            <summary>
            Gets the "person_facepalming" emoji.
            Description: Person facepalming.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonFencing">
            <summary>
            Gets the "person_fencing" emoji.
            Description: Person fencing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonFrowning">
            <summary>
            Gets the "person_frowning" emoji.
            Description: Person frowning.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonGesturingNo">
            <summary>
            Gets the "person_gesturing_no" emoji.
            Description: Person gesturing NO.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonGesturingOk">
            <summary>
            Gets the "person_gesturing_ok" emoji.
            Description: Person gesturing OK.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonGettingHaircut">
            <summary>
            Gets the "person_getting_haircut" emoji.
            Description: Person getting haircut.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonGettingMassage">
            <summary>
            Gets the "person_getting_massage" emoji.
            Description: Person getting massage.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonGolfing">
            <summary>
            Gets the "person_golfing" emoji.
            Description: Person golfing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonInBed">
            <summary>
            Gets the "person_in_bed" emoji.
            Description: Person in bed.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonInLotusPosition">
            <summary>
            Gets the "person_in_lotus_position" emoji.
            Description: Person in lotus position.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonInSteamyRoom">
            <summary>
            Gets the "person_in_steamy_room" emoji.
            Description: Person in steamy room.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonInSuitLevitating">
            <summary>
            Gets the "person_in_suit_levitating" emoji.
            Description: Person in suit levitating.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonInTuxedo">
            <summary>
            Gets the "person_in_tuxedo" emoji.
            Description: Person in tuxedo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonJuggling">
            <summary>
            Gets the "person_juggling" emoji.
            Description: Person juggling.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonKneeling">
            <summary>
            Gets the "person_kneeling" emoji.
            Description: Person kneeling.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonLiftingWeights">
            <summary>
            Gets the "person_lifting_weights" emoji.
            Description: Person lifting weights.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonMountainBiking">
            <summary>
            Gets the "person_mountain_biking" emoji.
            Description: Person mountain biking.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonPlayingHandball">
            <summary>
            Gets the "person_playing_handball" emoji.
            Description: Person playing handball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonPlayingWaterPolo">
            <summary>
            Gets the "person_playing_water_polo" emoji.
            Description: Person playing water polo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonPouting">
            <summary>
            Gets the "person_pouting" emoji.
            Description: Person pouting.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonRaisingHand">
            <summary>
            Gets the "person_raising_hand" emoji.
            Description: Person raising hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonRowingBoat">
            <summary>
            Gets the "person_rowing_boat" emoji.
            Description: Person rowing boat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonRunning">
            <summary>
            Gets the "person_running" emoji.
            Description: Person running.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonShrugging">
            <summary>
            Gets the "person_shrugging" emoji.
            Description: Person shrugging.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonStanding">
            <summary>
            Gets the "person_standing" emoji.
            Description: Person standing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonSurfing">
            <summary>
            Gets the "person_surfing" emoji.
            Description: Person surfing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonSwimming">
            <summary>
            Gets the "person_swimming" emoji.
            Description: Person swimming.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonTakingBath">
            <summary>
            Gets the "person_taking_bath" emoji.
            Description: Person taking bath.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonTippingHand">
            <summary>
            Gets the "person_tipping_hand" emoji.
            Description: Person tipping hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonWalking">
            <summary>
            Gets the "person_walking" emoji.
            Description: Person walking.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonWearingTurban">
            <summary>
            Gets the "person_wearing_turban" emoji.
            Description: Person wearing turban.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonWithSkullcap">
            <summary>
            Gets the "person_with_skullcap" emoji.
            Description: Person with skullcap.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PersonWithVeil">
            <summary>
            Gets the "person_with_veil" emoji.
            Description: Person with veil.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PetriDish">
            <summary>
            Gets the "petri_dish" emoji.
            Description: Petri dish.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pick">
            <summary>
            Gets the "pick" emoji.
            Description: Pick.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PickupTruck">
            <summary>
            Gets the "pickup_truck" emoji.
            Description: Pickup truck.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pie">
            <summary>
            Gets the "pie" emoji.
            Description: Pie.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pig">
            <summary>
            Gets the "pig" emoji.
            Description: Pig.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PigFace">
            <summary>
            Gets the "pig_face" emoji.
            Description: Pig face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PigNose">
            <summary>
            Gets the "pig_nose" emoji.
            Description: Pig nose.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PileOfPoo">
            <summary>
            Gets the "pile_of_poo" emoji.
            Description: Pile of poo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pill">
            <summary>
            Gets the "pill" emoji.
            Description: Pill.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Piñata">
            <summary>
            Gets the "piñata" emoji.
            Description: Piñata.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PinchedFingers">
            <summary>
            Gets the "pinched_fingers" emoji.
            Description: Pinched fingers.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PinchingHand">
            <summary>
            Gets the "pinching_hand" emoji.
            Description: Pinching hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pineapple">
            <summary>
            Gets the "pineapple" emoji.
            Description: Pineapple.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PineDecoration">
            <summary>
            Gets the "pine_decoration" emoji.
            Description: Pine decoration.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PingPong">
            <summary>
            Gets the "ping_pong" emoji.
            Description: Ping pong.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pisces">
            <summary>
            Gets the "pisces" emoji.
            Description: Pisces.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pizza">
            <summary>
            Gets the "pizza" emoji.
            Description: Pizza.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Placard">
            <summary>
            Gets the "placard" emoji.
            Description: Placard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PlaceOfWorship">
            <summary>
            Gets the "place_of_worship" emoji.
            Description: Place of worship.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PlayButton">
            <summary>
            Gets the "play_button" emoji.
            Description: Play button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PlayOrPauseButton">
            <summary>
            Gets the "play_or_pause_button" emoji.
            Description: Play or pause button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PleadingFace">
            <summary>
            Gets the "pleading_face" emoji.
            Description: Pleading face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Plunger">
            <summary>
            Gets the "plunger" emoji.
            Description: Plunger.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Plus">
            <summary>
            Gets the "plus" emoji.
            Description: Plus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PoliceCar">
            <summary>
            Gets the "police_car" emoji.
            Description: Police car.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PoliceCarLight">
            <summary>
            Gets the "police_car_light" emoji.
            Description: Police car light.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PoliceOfficer">
            <summary>
            Gets the "police_officer" emoji.
            Description: Police officer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Poodle">
            <summary>
            Gets the "poodle" emoji.
            Description: Poodle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pool8Ball">
            <summary>
            Gets the "pool_8_ball" emoji.
            Description: Pool 8 ball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Popcorn">
            <summary>
            Gets the "popcorn" emoji.
            Description: Popcorn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PostalHorn">
            <summary>
            Gets the "postal_horn" emoji.
            Description: Postal horn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Postbox">
            <summary>
            Gets the "postbox" emoji.
            Description: Postbox.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PostOffice">
            <summary>
            Gets the "post_office" emoji.
            Description: Post office.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PotableWater">
            <summary>
            Gets the "potable_water" emoji.
            Description: Potable water.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Potato">
            <summary>
            Gets the "potato" emoji.
            Description: Potato.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PotOfFood">
            <summary>
            Gets the "pot_of_food" emoji.
            Description: Pot of food.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PottedPlant">
            <summary>
            Gets the "potted_plant" emoji.
            Description: Potted plant.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PoultryLeg">
            <summary>
            Gets the "poultry_leg" emoji.
            Description: Poultry leg.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PoundBanknote">
            <summary>
            Gets the "pound_banknote" emoji.
            Description: Pound banknote.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PoutingCat">
            <summary>
            Gets the "pouting_cat" emoji.
            Description: Pouting cat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PoutingFace">
            <summary>
            Gets the "pouting_face" emoji.
            Description: Pouting face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PrayerBeads">
            <summary>
            Gets the "prayer_beads" emoji.
            Description: Prayer beads.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PregnantWoman">
            <summary>
            Gets the "pregnant_woman" emoji.
            Description: Pregnant woman.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pretzel">
            <summary>
            Gets the "pretzel" emoji.
            Description: Pretzel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Prince">
            <summary>
            Gets the "prince" emoji.
            Description: Prince.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Princess">
            <summary>
            Gets the "princess" emoji.
            Description: Princess.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Printer">
            <summary>
            Gets the "printer" emoji.
            Description: Printer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Prohibited">
            <summary>
            Gets the "prohibited" emoji.
            Description: Prohibited.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PurpleCircle">
            <summary>
            Gets the "purple_circle" emoji.
            Description: Purple circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PurpleHeart">
            <summary>
            Gets the "purple_heart" emoji.
            Description: Purple heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PurpleSquare">
            <summary>
            Gets the "purple_square" emoji.
            Description: Purple square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Purse">
            <summary>
            Gets the "purse" emoji.
            Description: Purse.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Pushpin">
            <summary>
            Gets the "pushpin" emoji.
            Description: Pushpin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.PuzzlePiece">
            <summary>
            Gets the "puzzle_piece" emoji.
            Description: Puzzle piece.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rabbit">
            <summary>
            Gets the "rabbit" emoji.
            Description: Rabbit.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RabbitFace">
            <summary>
            Gets the "rabbit_face" emoji.
            Description: Rabbit face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Raccoon">
            <summary>
            Gets the "raccoon" emoji.
            Description: Raccoon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RacingCar">
            <summary>
            Gets the "racing_car" emoji.
            Description: Racing car.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Radio">
            <summary>
            Gets the "radio" emoji.
            Description: Radio.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Radioactive">
            <summary>
            Gets the "radioactive" emoji.
            Description: Radioactive.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RadioButton">
            <summary>
            Gets the "radio_button" emoji.
            Description: Radio button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RailwayCar">
            <summary>
            Gets the "railway_car" emoji.
            Description: Railway car.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RailwayTrack">
            <summary>
            Gets the "railway_track" emoji.
            Description: Railway track.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rainbow">
            <summary>
            Gets the "rainbow" emoji.
            Description: Rainbow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RaisedBackOfHand">
            <summary>
            Gets the "raised_back_of_hand" emoji.
            Description: Raised back of hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RaisedFist">
            <summary>
            Gets the "raised_fist" emoji.
            Description: Raised fist.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RaisedHand">
            <summary>
            Gets the "raised_hand" emoji.
            Description: Raised hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RaisingHands">
            <summary>
            Gets the "raising_hands" emoji.
            Description: Raising hands.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ram">
            <summary>
            Gets the "ram" emoji.
            Description: Ram.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rat">
            <summary>
            Gets the "rat" emoji.
            Description: Rat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Razor">
            <summary>
            Gets the "razor" emoji.
            Description: Razor.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Receipt">
            <summary>
            Gets the "receipt" emoji.
            Description: Receipt.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RecordButton">
            <summary>
            Gets the "record_button" emoji.
            Description: Record button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RecyclingSymbol">
            <summary>
            Gets the "recycling_symbol" emoji.
            Description: Recycling symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedApple">
            <summary>
            Gets the "red_apple" emoji.
            Description: Red apple.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedCircle">
            <summary>
            Gets the "red_circle" emoji.
            Description: Red circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedEnvelope">
            <summary>
            Gets the "red_envelope" emoji.
            Description: Red envelope.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedExclamationMark">
            <summary>
            Gets the "red_exclamation_mark" emoji.
            Description: Red exclamation mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedHair">
            <summary>
            Gets the "red_hair" emoji.
            Description: Red hair.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedHeart">
            <summary>
            Gets the "red_heart" emoji.
            Description: Red heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedPaperLantern">
            <summary>
            Gets the "red_paper_lantern" emoji.
            Description: Red paper lantern.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedQuestionMark">
            <summary>
            Gets the "red_question_mark" emoji.
            Description: Red question mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedSquare">
            <summary>
            Gets the "red_square" emoji.
            Description: Red square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedTrianglePointedDown">
            <summary>
            Gets the "red_triangle_pointed_down" emoji.
            Description: Red triangle pointed down.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RedTrianglePointedUp">
            <summary>
            Gets the "red_triangle_pointed_up" emoji.
            Description: Red triangle pointed up.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Registered">
            <summary>
            Gets the "registered" emoji.
            Description: Registered.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RelievedFace">
            <summary>
            Gets the "relieved_face" emoji.
            Description: Relieved face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ReminderRibbon">
            <summary>
            Gets the "reminder_ribbon" emoji.
            Description: Reminder ribbon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RepeatButton">
            <summary>
            Gets the "repeat_button" emoji.
            Description: Repeat button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RepeatSingleButton">
            <summary>
            Gets the "repeat_single_button" emoji.
            Description: Repeat single button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RescueWorkersHelmet">
            <summary>
            Gets the "rescue_workers_helmet" emoji.
            Description: Rescue worker s helmet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Restroom">
            <summary>
            Gets the "restroom" emoji.
            Description: Restroom.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ReverseButton">
            <summary>
            Gets the "reverse_button" emoji.
            Description: Reverse button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RevolvingHearts">
            <summary>
            Gets the "revolving_hearts" emoji.
            Description: Revolving hearts.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rhinoceros">
            <summary>
            Gets the "rhinoceros" emoji.
            Description: Rhinoceros.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ribbon">
            <summary>
            Gets the "ribbon" emoji.
            Description: Ribbon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RiceBall">
            <summary>
            Gets the "rice_ball" emoji.
            Description: Rice ball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RiceCracker">
            <summary>
            Gets the "rice_cracker" emoji.
            Description: Rice cracker.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RightAngerBubble">
            <summary>
            Gets the "right_anger_bubble" emoji.
            Description: Right anger bubble.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RightArrow">
            <summary>
            Gets the "right_arrow" emoji.
            Description: Right arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RightArrowCurvingDown">
            <summary>
            Gets the "right_arrow_curving_down" emoji.
            Description: Right arrow curving down.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RightArrowCurvingLeft">
            <summary>
            Gets the "right_arrow_curving_left" emoji.
            Description: Right arrow curving left.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RightArrowCurvingUp">
            <summary>
            Gets the "right_arrow_curving_up" emoji.
            Description: Right arrow curving up.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RightFacingFist">
            <summary>
            Gets the "right_facing_fist" emoji.
            Description: right facing fist.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ring">
            <summary>
            Gets the "ring" emoji.
            Description: Ring.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RingedPlanet">
            <summary>
            Gets the "ringed_planet" emoji.
            Description: Ringed planet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RoastedSweetPotato">
            <summary>
            Gets the "roasted_sweet_potato" emoji.
            Description: Roasted sweet potato.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Robot">
            <summary>
            Gets the "robot" emoji.
            Description: Robot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rock">
            <summary>
            Gets the "rock" emoji.
            Description: Rock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rocket">
            <summary>
            Gets the "rocket" emoji.
            Description: Rocket.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RolledUpNewspaper">
            <summary>
            Gets the "rolled_up_newspaper" emoji.
            Description: rolled up newspaper.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RollerCoaster">
            <summary>
            Gets the "roller_coaster" emoji.
            Description: Roller coaster.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RollerSkate">
            <summary>
            Gets the "roller_skate" emoji.
            Description: Roller skate.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RollingOnTheFloorLaughing">
            <summary>
            Gets the "rolling_on_the_floor_laughing" emoji.
            Description: Rolling on the floor laughing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RollOfPaper">
            <summary>
            Gets the "roll_of_paper" emoji.
            Description: Roll of paper.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rooster">
            <summary>
            Gets the "rooster" emoji.
            Description: Rooster.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rose">
            <summary>
            Gets the "rose" emoji.
            Description: Rose.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Rosette">
            <summary>
            Gets the "rosette" emoji.
            Description: Rosette.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RoundPushpin">
            <summary>
            Gets the "round_pushpin" emoji.
            Description: Round pushpin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RugbyFootball">
            <summary>
            Gets the "rugby_football" emoji.
            Description: Rugby football.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RunningShirt">
            <summary>
            Gets the "running_shirt" emoji.
            Description: Running shirt.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.RunningShoe">
            <summary>
            Gets the "running_shoe" emoji.
            Description: Running shoe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SadButRelievedFace">
            <summary>
            Gets the "sad_but_relieved_face" emoji.
            Description: Sad but relieved face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SafetyPin">
            <summary>
            Gets the "safety_pin" emoji.
            Description: Safety pin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SafetyVest">
            <summary>
            Gets the "safety_vest" emoji.
            Description: Safety vest.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sagittarius">
            <summary>
            Gets the "sagittarius" emoji.
            Description: Sagittarius.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sailboat">
            <summary>
            Gets the "sailboat" emoji.
            Description: Sailboat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sake">
            <summary>
            Gets the "sake" emoji.
            Description: Sake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Salt">
            <summary>
            Gets the "salt" emoji.
            Description: Salt.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sandwich">
            <summary>
            Gets the "sandwich" emoji.
            Description: Sandwich.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SantaClaus">
            <summary>
            Gets the "santa_claus" emoji.
            Description: Santa claus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sari">
            <summary>
            Gets the "sari" emoji.
            Description: Sari.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Satellite">
            <summary>
            Gets the "satellite" emoji.
            Description: Satellite.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SatelliteAntenna">
            <summary>
            Gets the "satellite_antenna" emoji.
            Description: Satellite antenna.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sauropod">
            <summary>
            Gets the "sauropod" emoji.
            Description: Sauropod.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Saxophone">
            <summary>
            Gets the "saxophone" emoji.
            Description: Saxophone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Scarf">
            <summary>
            Gets the "scarf" emoji.
            Description: Scarf.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.School">
            <summary>
            Gets the "school" emoji.
            Description: School.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Scissors">
            <summary>
            Gets the "scissors" emoji.
            Description: Scissors.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Scorpio">
            <summary>
            Gets the "scorpio" emoji.
            Description: Scorpio.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Scorpion">
            <summary>
            Gets the "scorpion" emoji.
            Description: Scorpion.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Screwdriver">
            <summary>
            Gets the "screwdriver" emoji.
            Description: Screwdriver.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Scroll">
            <summary>
            Gets the "scroll" emoji.
            Description: Scroll.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Seal">
            <summary>
            Gets the "seal" emoji.
            Description: Seal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Seat">
            <summary>
            Gets the "seat" emoji.
            Description: Seat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SecondPlaceMedal">
            <summary>
            Gets the "2nd_place_medal" emoji.
            Description: 2nd place medal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Seedling">
            <summary>
            Gets the "seedling" emoji.
            Description: Seedling.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SeeNoEvilMonkey">
            <summary>
            Gets the "see_no_evil_monkey" emoji.
            Description: see no evil monkey.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Selfie">
            <summary>
            Gets the "selfie" emoji.
            Description: Selfie.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SevenOClock">
            <summary>
            Gets the "seven_o_clock" emoji.
            Description: Seven o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SevenThirty">
            <summary>
            Gets the "seven_thirty" emoji.
            Description: seven thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SewingNeedle">
            <summary>
            Gets the "sewing_needle" emoji.
            Description: Sewing needle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShallowPanOfFood">
            <summary>
            Gets the "shallow_pan_of_food" emoji.
            Description: Shallow pan of food.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Shamrock">
            <summary>
            Gets the "shamrock" emoji.
            Description: Shamrock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Shark">
            <summary>
            Gets the "shark" emoji.
            Description: Shark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShavedIce">
            <summary>
            Gets the "shaved_ice" emoji.
            Description: Shaved ice.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SheafOfRice">
            <summary>
            Gets the "sheaf_of_rice" emoji.
            Description: Sheaf of rice.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Shield">
            <summary>
            Gets the "shield" emoji.
            Description: Shield.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShintoShrine">
            <summary>
            Gets the "shinto_shrine" emoji.
            Description: Shinto shrine.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ship">
            <summary>
            Gets the "ship" emoji.
            Description: Ship.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShootingStar">
            <summary>
            Gets the "shooting_star" emoji.
            Description: Shooting star.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShoppingBags">
            <summary>
            Gets the "shopping_bags" emoji.
            Description: Shopping bags.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShoppingCart">
            <summary>
            Gets the "shopping_cart" emoji.
            Description: Shopping cart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Shortcake">
            <summary>
            Gets the "shortcake" emoji.
            Description: Shortcake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Shorts">
            <summary>
            Gets the "shorts" emoji.
            Description: Shorts.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Shower">
            <summary>
            Gets the "shower" emoji.
            Description: Shower.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Shrimp">
            <summary>
            Gets the "shrimp" emoji.
            Description: Shrimp.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShuffleTracksButton">
            <summary>
            Gets the "shuffle_tracks_button" emoji.
            Description: Shuffle tracks button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ShushingFace">
            <summary>
            Gets the "shushing_face" emoji.
            Description: Shushing face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SignOfTheHorns">
            <summary>
            Gets the "sign_of_the_horns" emoji.
            Description: Sign of the horns.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SixOClock">
            <summary>
            Gets the "six_o_clock" emoji.
            Description: Six o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SixThirty">
            <summary>
            Gets the "six_thirty" emoji.
            Description: six thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Skateboard">
            <summary>
            Gets the "skateboard" emoji.
            Description: Skateboard.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Skier">
            <summary>
            Gets the "skier" emoji.
            Description: Skier.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Skis">
            <summary>
            Gets the "skis" emoji.
            Description: Skis.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Skull">
            <summary>
            Gets the "skull" emoji.
            Description: Skull.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SkullAndCrossbones">
            <summary>
            Gets the "skull_and_crossbones" emoji.
            Description: Skull and crossbones.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Skunk">
            <summary>
            Gets the "skunk" emoji.
            Description: Skunk.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sled">
            <summary>
            Gets the "sled" emoji.
            Description: Sled.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SleepingFace">
            <summary>
            Gets the "sleeping_face" emoji.
            Description: Sleeping face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SleepyFace">
            <summary>
            Gets the "sleepy_face" emoji.
            Description: Sleepy face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SlightlyFrowningFace">
            <summary>
            Gets the "slightly_frowning_face" emoji.
            Description: Slightly frowning face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SlightlySmilingFace">
            <summary>
            Gets the "slightly_smiling_face" emoji.
            Description: Slightly smiling face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sloth">
            <summary>
            Gets the "sloth" emoji.
            Description: Sloth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SlotMachine">
            <summary>
            Gets the "slot_machine" emoji.
            Description: Slot machine.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmallAirplane">
            <summary>
            Gets the "small_airplane" emoji.
            Description: Small airplane.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmallBlueDiamond">
            <summary>
            Gets the "small_blue_diamond" emoji.
            Description: Small blue diamond.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmallOrangeDiamond">
            <summary>
            Gets the "small_orange_diamond" emoji.
            Description: Small orange diamond.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingCatWithHeartEyes">
            <summary>
            Gets the "smiling_cat_with_heart_eyes" emoji.
            Description: smiling cat with heart eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFace">
            <summary>
            Gets the "smiling_face" emoji.
            Description: Smiling face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFaceWithHalo">
            <summary>
            Gets the "smiling_face_with_halo" emoji.
            Description: Smiling face with halo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFaceWithHeartEyes">
            <summary>
            Gets the "smiling_face_with_heart_eyes" emoji.
            Description: smiling face with heart eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFaceWithHearts">
            <summary>
            Gets the "smiling_face_with_hearts" emoji.
            Description: Smiling face with hearts.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFaceWithHorns">
            <summary>
            Gets the "smiling_face_with_horns" emoji.
            Description: Smiling face with horns.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFaceWithSmilingEyes">
            <summary>
            Gets the "smiling_face_with_smiling_eyes" emoji.
            Description: Smiling face with smiling eyes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFaceWithSunglasses">
            <summary>
            Gets the "smiling_face_with_sunglasses" emoji.
            Description: Smiling face with sunglasses.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmilingFaceWithTear">
            <summary>
            Gets the "smiling_face_with_tear" emoji.
            Description: Smiling face with tear.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SmirkingFace">
            <summary>
            Gets the "smirking_face" emoji.
            Description: Smirking face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Snail">
            <summary>
            Gets the "snail" emoji.
            Description: Snail.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Snake">
            <summary>
            Gets the "snake" emoji.
            Description: Snake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SneezingFace">
            <summary>
            Gets the "sneezing_face" emoji.
            Description: Sneezing face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Snowboarder">
            <summary>
            Gets the "snowboarder" emoji.
            Description: Snowboarder.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SnowCappedMountain">
            <summary>
            Gets the "snow_capped_mountain" emoji.
            Description: snow capped mountain.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Snowflake">
            <summary>
            Gets the "snowflake" emoji.
            Description: Snowflake.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Snowman">
            <summary>
            Gets the "snowman" emoji.
            Description: Snowman.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SnowmanWithoutSnow">
            <summary>
            Gets the "snowman_without_snow" emoji.
            Description: Snowman without snow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Soap">
            <summary>
            Gets the "soap" emoji.
            Description: Soap.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SoccerBall">
            <summary>
            Gets the "soccer_ball" emoji.
            Description: Soccer ball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Socks">
            <summary>
            Gets the "socks" emoji.
            Description: Socks.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Softball">
            <summary>
            Gets the "softball" emoji.
            Description: Softball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SoftIceCream">
            <summary>
            Gets the "soft_ice_cream" emoji.
            Description: Soft ice cream.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SoonArrow">
            <summary>
            Gets the "soon_arrow" emoji.
            Description: SOON arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SosButton">
            <summary>
            Gets the "sos_button" emoji.
            Description: SOS button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpadeSuit">
            <summary>
            Gets the "spade_suit" emoji.
            Description: Spade suit.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Spaghetti">
            <summary>
            Gets the "spaghetti" emoji.
            Description: Spaghetti.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sparkle">
            <summary>
            Gets the "sparkle" emoji.
            Description: Sparkle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sparkler">
            <summary>
            Gets the "sparkler" emoji.
            Description: Sparkler.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sparkles">
            <summary>
            Gets the "sparkles" emoji.
            Description: Sparkles.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SparklingHeart">
            <summary>
            Gets the "sparkling_heart" emoji.
            Description: Sparkling heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpeakerHighVolume">
            <summary>
            Gets the "speaker_high_volume" emoji.
            Description: Speaker high volume.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpeakerLowVolume">
            <summary>
            Gets the "speaker_low_volume" emoji.
            Description: Speaker low volume.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpeakerMediumVolume">
            <summary>
            Gets the "speaker_medium_volume" emoji.
            Description: Speaker medium volume.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpeakingHead">
            <summary>
            Gets the "speaking_head" emoji.
            Description: Speaking head.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpeakNoEvilMonkey">
            <summary>
            Gets the "speak_no_evil_monkey" emoji.
            Description: speak no evil monkey.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpeechBalloon">
            <summary>
            Gets the "speech_balloon" emoji.
            Description: Speech balloon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Speedboat">
            <summary>
            Gets the "speedboat" emoji.
            Description: Speedboat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Spider">
            <summary>
            Gets the "spider" emoji.
            Description: Spider.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpiderWeb">
            <summary>
            Gets the "spider_web" emoji.
            Description: Spider web.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpiralCalendar">
            <summary>
            Gets the "spiral_calendar" emoji.
            Description: Spiral calendar.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpiralNotepad">
            <summary>
            Gets the "spiral_notepad" emoji.
            Description: Spiral notepad.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpiralShell">
            <summary>
            Gets the "spiral_shell" emoji.
            Description: Spiral shell.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sponge">
            <summary>
            Gets the "sponge" emoji.
            Description: Sponge.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Spoon">
            <summary>
            Gets the "spoon" emoji.
            Description: Spoon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SportsMedal">
            <summary>
            Gets the "sports_medal" emoji.
            Description: Sports medal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SportUtilityVehicle">
            <summary>
            Gets the "sport_utility_vehicle" emoji.
            Description: Sport utility vehicle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SpoutingWhale">
            <summary>
            Gets the "spouting_whale" emoji.
            Description: Spouting whale.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Squid">
            <summary>
            Gets the "squid" emoji.
            Description: Squid.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SquintingFaceWithTongue">
            <summary>
            Gets the "squinting_face_with_tongue" emoji.
            Description: Squinting face with tongue.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Stadium">
            <summary>
            Gets the "stadium" emoji.
            Description: Stadium.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Star">
            <summary>
            Gets the "star" emoji.
            Description: Star.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StarAndCrescent">
            <summary>
            Gets the "star_and_crescent" emoji.
            Description: Star and crescent.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StarOfDavid">
            <summary>
            Gets the "star_of_david" emoji.
            Description: Star of david.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StarStruck">
            <summary>
            Gets the "star_struck" emoji.
            Description: star struck.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Station">
            <summary>
            Gets the "station" emoji.
            Description: Station.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StatueOfLiberty">
            <summary>
            Gets the "statue_of_liberty" emoji.
            Description: Statue of liberty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SteamingBowl">
            <summary>
            Gets the "steaming_bowl" emoji.
            Description: Steaming bowl.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Stethoscope">
            <summary>
            Gets the "stethoscope" emoji.
            Description: Stethoscope.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StopButton">
            <summary>
            Gets the "stop_button" emoji.
            Description: Stop button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StopSign">
            <summary>
            Gets the "stop_sign" emoji.
            Description: Stop sign.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Stopwatch">
            <summary>
            Gets the "stopwatch" emoji.
            Description: Stopwatch.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StraightRuler">
            <summary>
            Gets the "straight_ruler" emoji.
            Description: Straight ruler.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Strawberry">
            <summary>
            Gets the "strawberry" emoji.
            Description: Strawberry.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StudioMicrophone">
            <summary>
            Gets the "studio_microphone" emoji.
            Description: Studio microphone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.StuffedFlatbread">
            <summary>
            Gets the "stuffed_flatbread" emoji.
            Description: Stuffed flatbread.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sun">
            <summary>
            Gets the "sun" emoji.
            Description: Sun.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SunBehindCloud">
            <summary>
            Gets the "sun_behind_cloud" emoji.
            Description: Sun behind cloud.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SunBehindLargeCloud">
            <summary>
            Gets the "sun_behind_large_cloud" emoji.
            Description: Sun behind large cloud.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SunBehindRainCloud">
            <summary>
            Gets the "sun_behind_rain_cloud" emoji.
            Description: Sun behind rain cloud.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SunBehindSmallCloud">
            <summary>
            Gets the "sun_behind_small_cloud" emoji.
            Description: Sun behind small cloud.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sunflower">
            <summary>
            Gets the "sunflower" emoji.
            Description: Sunflower.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sunglasses">
            <summary>
            Gets the "sunglasses" emoji.
            Description: Sunglasses.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sunrise">
            <summary>
            Gets the "sunrise" emoji.
            Description: Sunrise.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SunriseOverMountains">
            <summary>
            Gets the "sunrise_over_mountains" emoji.
            Description: Sunrise over mountains.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sunset">
            <summary>
            Gets the "sunset" emoji.
            Description: Sunset.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SunWithFace">
            <summary>
            Gets the "sun_with_face" emoji.
            Description: Sun with face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Superhero">
            <summary>
            Gets the "superhero" emoji.
            Description: Superhero.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Supervillain">
            <summary>
            Gets the "supervillain" emoji.
            Description: Supervillain.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Sushi">
            <summary>
            Gets the "sushi" emoji.
            Description: Sushi.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SuspensionRailway">
            <summary>
            Gets the "suspension_railway" emoji.
            Description: Suspension railway.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Swan">
            <summary>
            Gets the "swan" emoji.
            Description: Swan.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.SweatDroplets">
            <summary>
            Gets the "sweat_droplets" emoji.
            Description: Sweat droplets.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Synagogue">
            <summary>
            Gets the "synagogue" emoji.
            Description: Synagogue.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Syringe">
            <summary>
            Gets the "syringe" emoji.
            Description: Syringe.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Taco">
            <summary>
            Gets the "taco" emoji.
            Description: Taco.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TakeoutBox">
            <summary>
            Gets the "takeout_box" emoji.
            Description: Takeout box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tamale">
            <summary>
            Gets the "tamale" emoji.
            Description: Tamale.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TanabataTree">
            <summary>
            Gets the "tanabata_tree" emoji.
            Description: Tanabata tree.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tangerine">
            <summary>
            Gets the "tangerine" emoji.
            Description: Tangerine.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Taurus">
            <summary>
            Gets the "taurus" emoji.
            Description: Taurus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Taxi">
            <summary>
            Gets the "taxi" emoji.
            Description: Taxi.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TeacupWithoutHandle">
            <summary>
            Gets the "teacup_without_handle" emoji.
            Description: Teacup without handle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Teapot">
            <summary>
            Gets the "teapot" emoji.
            Description: Teapot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TearOffCalendar">
            <summary>
            Gets the "tear_off_calendar" emoji.
            Description: tear off calendar.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TeddyBear">
            <summary>
            Gets the "teddy_bear" emoji.
            Description: Teddy bear.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Telephone">
            <summary>
            Gets the "telephone" emoji.
            Description: Telephone.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TelephoneReceiver">
            <summary>
            Gets the "telephone_receiver" emoji.
            Description: Telephone receiver.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Telescope">
            <summary>
            Gets the "telescope" emoji.
            Description: Telescope.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Television">
            <summary>
            Gets the "television" emoji.
            Description: Television.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tennis">
            <summary>
            Gets the "tennis" emoji.
            Description: Tennis.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TenOClock">
            <summary>
            Gets the "ten_o_clock" emoji.
            Description: Ten o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tent">
            <summary>
            Gets the "tent" emoji.
            Description: Tent.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TenThirty">
            <summary>
            Gets the "ten_thirty" emoji.
            Description: ten thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TestTube">
            <summary>
            Gets the "test_tube" emoji.
            Description: Test tube.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Thermometer">
            <summary>
            Gets the "thermometer" emoji.
            Description: Thermometer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThinkingFace">
            <summary>
            Gets the "thinking_face" emoji.
            Description: Thinking face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThirdPlaceMedal">
            <summary>
            Gets the "3rd_place_medal" emoji.
            Description: 3rd place medal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThongSandal">
            <summary>
            Gets the "thong_sandal" emoji.
            Description: Thong sandal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThoughtBalloon">
            <summary>
            Gets the "thought_balloon" emoji.
            Description: Thought balloon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Thread">
            <summary>
            Gets the "thread" emoji.
            Description: Thread.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThreeOClock">
            <summary>
            Gets the "three_o_clock" emoji.
            Description: Three o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThreeThirty">
            <summary>
            Gets the "three_thirty" emoji.
            Description: three thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThumbsDown">
            <summary>
            Gets the "thumbs_down" emoji.
            Description: Thumbs down.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ThumbsUp">
            <summary>
            Gets the "thumbs_up" emoji.
            Description: Thumbs up.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Ticket">
            <summary>
            Gets the "ticket" emoji.
            Description: Ticket.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tiger">
            <summary>
            Gets the "tiger" emoji.
            Description: Tiger.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TigerFace">
            <summary>
            Gets the "tiger_face" emoji.
            Description: Tiger face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TimerClock">
            <summary>
            Gets the "timer_clock" emoji.
            Description: Timer clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TiredFace">
            <summary>
            Gets the "tired_face" emoji.
            Description: Tired face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Toilet">
            <summary>
            Gets the "toilet" emoji.
            Description: Toilet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TokyoTower">
            <summary>
            Gets the "tokyo_tower" emoji.
            Description: Tokyo tower.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tomato">
            <summary>
            Gets the "tomato" emoji.
            Description: Tomato.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tongue">
            <summary>
            Gets the "tongue" emoji.
            Description: Tongue.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Toolbox">
            <summary>
            Gets the "toolbox" emoji.
            Description: Toolbox.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tooth">
            <summary>
            Gets the "tooth" emoji.
            Description: Tooth.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Toothbrush">
            <summary>
            Gets the "toothbrush" emoji.
            Description: Toothbrush.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TopArrow">
            <summary>
            Gets the "top_arrow" emoji.
            Description: TOP arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TopHat">
            <summary>
            Gets the "top_hat" emoji.
            Description: Top hat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tornado">
            <summary>
            Gets the "tornado" emoji.
            Description: Tornado.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Trackball">
            <summary>
            Gets the "trackball" emoji.
            Description: Trackball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tractor">
            <summary>
            Gets the "tractor" emoji.
            Description: Tractor.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TradeMark">
            <summary>
            Gets the "trade_mark" emoji.
            Description: Trade mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Train">
            <summary>
            Gets the "train" emoji.
            Description: Train.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tram">
            <summary>
            Gets the "tram" emoji.
            Description: Tram.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TramCar">
            <summary>
            Gets the "tram_car" emoji.
            Description: Tram car.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TransgenderSymbol">
            <summary>
            Gets the "transgender_symbol" emoji.
            Description: Transgender symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TRex">
            <summary>
            Gets the "t_rex" emoji.
            Description: T Rex.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TriangularFlag">
            <summary>
            Gets the "triangular_flag" emoji.
            Description: Triangular flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TriangularRuler">
            <summary>
            Gets the "triangular_ruler" emoji.
            Description: Triangular ruler.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TridentEmblem">
            <summary>
            Gets the "trident_emblem" emoji.
            Description: Trident emblem.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Trolleybus">
            <summary>
            Gets the "trolleybus" emoji.
            Description: Trolleybus.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Trophy">
            <summary>
            Gets the "trophy" emoji.
            Description: Trophy.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TropicalDrink">
            <summary>
            Gets the "tropical_drink" emoji.
            Description: Tropical drink.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TropicalFish">
            <summary>
            Gets the "tropical_fish" emoji.
            Description: Tropical fish.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Trumpet">
            <summary>
            Gets the "trumpet" emoji.
            Description: Trumpet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TShirt">
            <summary>
            Gets the "t_shirt" emoji.
            Description: t shirt.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Tulip">
            <summary>
            Gets the "tulip" emoji.
            Description: Tulip.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TumblerGlass">
            <summary>
            Gets the "tumbler_glass" emoji.
            Description: Tumbler glass.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Turkey">
            <summary>
            Gets the "turkey" emoji.
            Description: Turkey.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Turtle">
            <summary>
            Gets the "turtle" emoji.
            Description: Turtle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TwelveOClock">
            <summary>
            Gets the "twelve_o_clock" emoji.
            Description: Twelve o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TwelveThirty">
            <summary>
            Gets the "twelve_thirty" emoji.
            Description: twelve thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TwoHearts">
            <summary>
            Gets the "two_hearts" emoji.
            Description: Two hearts.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TwoHumpCamel">
            <summary>
            Gets the "two_hump_camel" emoji.
            Description: two hump camel.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TwoOClock">
            <summary>
            Gets the "two_o_clock" emoji.
            Description: Two o clock.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.TwoThirty">
            <summary>
            Gets the "two_thirty" emoji.
            Description: two thirty.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Umbrella">
            <summary>
            Gets the "umbrella" emoji.
            Description: Umbrella.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UmbrellaOnGround">
            <summary>
            Gets the "umbrella_on_ground" emoji.
            Description: Umbrella on ground.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UmbrellaWithRainDrops">
            <summary>
            Gets the "umbrella_with_rain_drops" emoji.
            Description: Umbrella with rain drops.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UnamusedFace">
            <summary>
            Gets the "unamused_face" emoji.
            Description: Unamused face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Unicorn">
            <summary>
            Gets the "unicorn" emoji.
            Description: Unicorn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Unlocked">
            <summary>
            Gets the "unlocked" emoji.
            Description: Unlocked.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UpArrow">
            <summary>
            Gets the "up_arrow" emoji.
            Description: Up arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UpButton">
            <summary>
            Gets the "up_button" emoji.
            Description: UP button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UpDownArrow">
            <summary>
            Gets the "up_down_arrow" emoji.
            Description: up down arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UpLeftArrow">
            <summary>
            Gets the "up_left_arrow" emoji.
            Description: up left arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UpRightArrow">
            <summary>
            Gets the "up_right_arrow" emoji.
            Description: up right arrow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UpsideDownFace">
            <summary>
            Gets the "upside_down_face" emoji.
            Description: upside down face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.UpwardsButton">
            <summary>
            Gets the "upwards_button" emoji.
            Description: Upwards button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Vampire">
            <summary>
            Gets the "vampire" emoji.
            Description: Vampire.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.VerticalTrafficLight">
            <summary>
            Gets the "vertical_traffic_light" emoji.
            Description: Vertical traffic light.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.VibrationMode">
            <summary>
            Gets the "vibration_mode" emoji.
            Description: Vibration mode.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.VictoryHand">
            <summary>
            Gets the "victory_hand" emoji.
            Description: Victory hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.VideoCamera">
            <summary>
            Gets the "video_camera" emoji.
            Description: Video camera.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Videocassette">
            <summary>
            Gets the "videocassette" emoji.
            Description: Videocassette.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.VideoGame">
            <summary>
            Gets the "video_game" emoji.
            Description: Video game.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Violin">
            <summary>
            Gets the "violin" emoji.
            Description: Violin.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Virgo">
            <summary>
            Gets the "virgo" emoji.
            Description: Virgo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Volcano">
            <summary>
            Gets the "volcano" emoji.
            Description: Volcano.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Volleyball">
            <summary>
            Gets the "volleyball" emoji.
            Description: Volleyball.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.VsButton">
            <summary>
            Gets the "vs_button" emoji.
            Description: VS button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.VulcanSalute">
            <summary>
            Gets the "vulcan_salute" emoji.
            Description: Vulcan salute.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Waffle">
            <summary>
            Gets the "waffle" emoji.
            Description: Waffle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaningCrescentMoon">
            <summary>
            Gets the "waning_crescent_moon" emoji.
            Description: Waning crescent moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaningGibbousMoon">
            <summary>
            Gets the "waning_gibbous_moon" emoji.
            Description: Waning gibbous moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Warning">
            <summary>
            Gets the "warning" emoji.
            Description: Warning.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Wastebasket">
            <summary>
            Gets the "wastebasket" emoji.
            Description: Wastebasket.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Watch">
            <summary>
            Gets the "watch" emoji.
            Description: Watch.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaterBuffalo">
            <summary>
            Gets the "water_buffalo" emoji.
            Description: Water buffalo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaterCloset">
            <summary>
            Gets the "water_closet" emoji.
            Description: Water closet.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Watermelon">
            <summary>
            Gets the "watermelon" emoji.
            Description: Watermelon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaterPistol">
            <summary>
            Gets the "water_pistol" emoji.
            Description: Water pistol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaterWave">
            <summary>
            Gets the "water_wave" emoji.
            Description: Water wave.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WavingHand">
            <summary>
            Gets the "waving_hand" emoji.
            Description: Waving hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WavyDash">
            <summary>
            Gets the "wavy_dash" emoji.
            Description: Wavy dash.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaxingCrescentMoon">
            <summary>
            Gets the "waxing_crescent_moon" emoji.
            Description: Waxing crescent moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WaxingGibbousMoon">
            <summary>
            Gets the "waxing_gibbous_moon" emoji.
            Description: Waxing gibbous moon.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WearyCat">
            <summary>
            Gets the "weary_cat" emoji.
            Description: Weary cat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WearyFace">
            <summary>
            Gets the "weary_face" emoji.
            Description: Weary face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Wedding">
            <summary>
            Gets the "wedding" emoji.
            Description: Wedding.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Whale">
            <summary>
            Gets the "whale" emoji.
            Description: Whale.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WheelchairSymbol">
            <summary>
            Gets the "wheelchair_symbol" emoji.
            Description: Wheelchair symbol.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WheelOfDharma">
            <summary>
            Gets the "wheel_of_dharma" emoji.
            Description: Wheel of dharma.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteCane">
            <summary>
            Gets the "white_cane" emoji.
            Description: White cane.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteCircle">
            <summary>
            Gets the "white_circle" emoji.
            Description: White circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteExclamationMark">
            <summary>
            Gets the "white_exclamation_mark" emoji.
            Description: White exclamation mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteFlag">
            <summary>
            Gets the "white_flag" emoji.
            Description: White flag.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteFlower">
            <summary>
            Gets the "white_flower" emoji.
            Description: White flower.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteHair">
            <summary>
            Gets the "white_hair" emoji.
            Description: White hair.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteHeart">
            <summary>
            Gets the "white_heart" emoji.
            Description: White heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteLargeSquare">
            <summary>
            Gets the "white_large_square" emoji.
            Description: White large square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteMediumSmallSquare">
            <summary>
            Gets the "white_medium_small_square" emoji.
            Description: white medium small square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteMediumSquare">
            <summary>
            Gets the "white_medium_square" emoji.
            Description: White medium square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteQuestionMark">
            <summary>
            Gets the "white_question_mark" emoji.
            Description: White question mark.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteSmallSquare">
            <summary>
            Gets the "white_small_square" emoji.
            Description: White small square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WhiteSquareButton">
            <summary>
            Gets the "white_square_button" emoji.
            Description: White square button.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WiltedFlower">
            <summary>
            Gets the "wilted_flower" emoji.
            Description: Wilted flower.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WindChime">
            <summary>
            Gets the "wind_chime" emoji.
            Description: Wind chime.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WindFace">
            <summary>
            Gets the "wind_face" emoji.
            Description: Wind face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Window">
            <summary>
            Gets the "window" emoji.
            Description: Window.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WineGlass">
            <summary>
            Gets the "wine_glass" emoji.
            Description: Wine glass.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WinkingFace">
            <summary>
            Gets the "winking_face" emoji.
            Description: Winking face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WinkingFaceWithTongue">
            <summary>
            Gets the "winking_face_with_tongue" emoji.
            Description: Winking face with tongue.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Wolf">
            <summary>
            Gets the "wolf" emoji.
            Description: Wolf.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Woman">
            <summary>
            Gets the "woman" emoji.
            Description: Woman.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomanAndManHoldingHands">
            <summary>
            Gets the "woman_and_man_holding_hands" emoji.
            Description: Woman and man holding hands.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomanDancing">
            <summary>
            Gets the "woman_dancing" emoji.
            Description: Woman dancing.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomansBoot">
            <summary>
            Gets the "womans_boot" emoji.
            Description: Woman s boot.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomansClothes">
            <summary>
            Gets the "womans_clothes" emoji.
            Description: Woman s clothes.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomansHat">
            <summary>
            Gets the "womans_hat" emoji.
            Description: Woman s hat.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomansSandal">
            <summary>
            Gets the "womans_sandal" emoji.
            Description: Woman s sandal.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomanWithHeadscarf">
            <summary>
            Gets the "woman_with_headscarf" emoji.
            Description: Woman with headscarf.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomenHoldingHands">
            <summary>
            Gets the "women_holding_hands" emoji.
            Description: Women holding hands.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WomensRoom">
            <summary>
            Gets the "womens_room" emoji.
            Description: Women s room.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Wood">
            <summary>
            Gets the "wood" emoji.
            Description: Wood.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WoozyFace">
            <summary>
            Gets the "woozy_face" emoji.
            Description: Woozy face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WorldMap">
            <summary>
            Gets the "world_map" emoji.
            Description: World map.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Worm">
            <summary>
            Gets the "worm" emoji.
            Description: Worm.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WorriedFace">
            <summary>
            Gets the "worried_face" emoji.
            Description: Worried face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WrappedGift">
            <summary>
            Gets the "wrapped_gift" emoji.
            Description: Wrapped gift.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Wrench">
            <summary>
            Gets the "wrench" emoji.
            Description: Wrench.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.WritingHand">
            <summary>
            Gets the "writing_hand" emoji.
            Description: Writing hand.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Yarn">
            <summary>
            Gets the "yarn" emoji.
            Description: Yarn.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.YawningFace">
            <summary>
            Gets the "yawning_face" emoji.
            Description: Yawning face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.YellowCircle">
            <summary>
            Gets the "yellow_circle" emoji.
            Description: Yellow circle.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.YellowHeart">
            <summary>
            Gets the "yellow_heart" emoji.
            Description: Yellow heart.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.YellowSquare">
            <summary>
            Gets the "yellow_square" emoji.
            Description: Yellow square.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.YenBanknote">
            <summary>
            Gets the "yen_banknote" emoji.
            Description: Yen banknote.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.YinYang">
            <summary>
            Gets the "yin_yang" emoji.
            Description: Yin yang.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.YoYo">
            <summary>
            Gets the "yo_yo" emoji.
            Description: yo yo.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ZanyFace">
            <summary>
            Gets the "zany_face" emoji.
            Description: Zany face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Zebra">
            <summary>
            Gets the "zebra" emoji.
            Description: Zebra.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.ZipperMouthFace">
            <summary>
            Gets the "zipper_mouth_face" emoji.
            Description: zipper mouth face.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Zombie">
            <summary>
            Gets the "zombie" emoji.
            Description: Zombie.
            </summary>
        </member>
        <member name="F:Spectre.Console.Emoji.Known.Zzz">
            <summary>
            Gets the "zzz" emoji.
            Description: Zzz.
            </summary>
        </member>
        <member name="T:Spectre.Console.ProfileEnrichment">
            <summary>
            Contains settings for profile enrichment.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProfileEnrichment.UseDefaultEnrichers">
            <summary>
            Gets or sets a value indicating whether or not
            any default enrichers should be added.
            </summary>
            <remarks>Defaults to <c>true</c>.</remarks>
        </member>
        <member name="P:Spectre.Console.ProfileEnrichment.Enrichers">
            <summary>
            Gets or sets the list of custom enrichers to use.
            </summary>
        </member>
        <member name="T:Spectre.Console.Advanced.AnsiConsoleExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Advanced.AnsiConsoleExtensions.WriteAnsi(Spectre.Console.IAnsiConsole,System.String)">
            <summary>
            Writes a VT/Ansi control code sequence to the console (if supported).
            </summary>
            <param name="console">The console to write to.</param>
            <param name="sequence">The VT/Ansi control code sequence to write.</param>
        </member>
        <member name="M:Spectre.Console.Advanced.AnsiConsoleExtensions.ToAnsi(Spectre.Console.IAnsiConsole,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Gets the VT/ANSI control code sequence for a <see cref="T:Spectre.Console.Rendering.IRenderable"/>.
            </summary>
            <param name="console">The console.</param>
            <param name="renderable">The renderable to the VT/ANSI control code sequence for.</param>
            <returns>The VT/ANSI control code sequence.</returns>
        </member>
        <member name="T:Spectre.Console.AlignableExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAlignable"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.AlignableExtensions.Alignment``1(``0,System.Nullable{Spectre.Console.Justify})">
            <summary>
            Sets the alignment for an <see cref="T:Spectre.Console.IAlignable"/> object.
            </summary>
            <typeparam name="T">The alignable object type.</typeparam>
            <param name="obj">The alignable object.</param>
            <param name="alignment">The alignment.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.AlignableExtensions.LeftAligned``1(``0)">
            <summary>
            Sets the <see cref="T:Spectre.Console.IAlignable"/> object to be left aligned.
            </summary>
            <typeparam name="T">The alignable type.</typeparam>
            <param name="obj">The alignable object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.AlignableExtensions.Centered``1(``0)">
            <summary>
            Sets the <see cref="T:Spectre.Console.IAlignable"/> object to be centered.
            </summary>
            <typeparam name="T">The alignable type.</typeparam>
            <param name="obj">The alignable object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.AlignableExtensions.RightAligned``1(``0)">
            <summary>
            Sets the <see cref="T:Spectre.Console.IAlignable"/> object to be right aligned.
            </summary>
            <typeparam name="T">The alignable type.</typeparam>
            <param name="obj">The alignable object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.Extensions.AlignExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Align"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Extensions.AlignExtensions.Width(Spectre.Console.Align,System.Nullable{System.Int32})">
            <summary>
            Sets the width.
            </summary>
            <param name="align">The <see cref="T:Spectre.Console.Align"/> object.</param>
            <param name="width">The width, or <c>null</c> for no explicit width.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Extensions.AlignExtensions.Height(Spectre.Console.Align,System.Nullable{System.Int32})">
            <summary>
            Sets the height.
            </summary>
            <param name="align">The <see cref="T:Spectre.Console.Align"/> object.</param>
            <param name="height">The height, or <c>null</c> for no explicit height.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Extensions.AlignExtensions.VerticalAlignment(Spectre.Console.Align,System.Nullable{Spectre.Console.VerticalAlignment})">
            <summary>
            Sets the vertical alignment.
            </summary>
            <param name="align">The <see cref="T:Spectre.Console.Align"/> object.</param>
            <param name="vertical">The vertical alignment, or <c>null</c> for no vertical alignment.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Extensions.AlignExtensions.TopAligned(Spectre.Console.Align)">
            <summary>
            Sets the <see cref="T:Spectre.Console.Align"/> object to be top aligned.
            </summary>
            <param name="align">The <see cref="T:Spectre.Console.Align"/> object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Extensions.AlignExtensions.MiddleAligned(Spectre.Console.Align)">
            <summary>
            Sets the <see cref="T:Spectre.Console.Align"/> object to be middle aligned.
            </summary>
            <param name="align">The <see cref="T:Spectre.Console.Align"/> object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Extensions.AlignExtensions.BottomAligned(Spectre.Console.Align)">
            <summary>
            Sets the <see cref="T:Spectre.Console.Align"/> object to be bottom aligned.
            </summary>
            <param name="align">The <see cref="T:Spectre.Console.Align"/> object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.AnsiConsoleExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.CreateRecorder(Spectre.Console.IAnsiConsole)">
            <summary>
            Creates a recorder for the specified console.
            </summary>
            <param name="console">The console to record.</param>
            <returns>A recorder for the specified console.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Clear(Spectre.Console.IAnsiConsole)">
            <summary>
            Clears the console.
            </summary>
            <param name="console">The console to clear.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Write(Spectre.Console.IAnsiConsole,System.String)">
            <summary>
            Writes the specified string value to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Write(Spectre.Console.IAnsiConsole,System.String,Spectre.Console.Style)">
            <summary>
            Writes the specified string value to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="text">The text to write.</param>
            <param name="style">The text style or <see cref="P:Spectre.Console.Style.Plain"/> if <see langword="null"/>.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.WriteLine(Spectre.Console.IAnsiConsole)">
            <summary>
            Writes an empty line to the console.
            </summary>
            <param name="console">The console to write to.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.WriteLine(Spectre.Console.IAnsiConsole,System.String)">
            <summary>
            Writes the specified string value, followed by the current line terminator, to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.WriteLine(Spectre.Console.IAnsiConsole,System.String,Spectre.Console.Style)">
            <summary>
            Writes the specified string value, followed by the current line terminator, to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="text">The text to write.</param>
            <param name="style">The text style or <see cref="P:Spectre.Console.Style.Plain"/> if <see langword="null"/>.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.WriteException(Spectre.Console.IAnsiConsole,System.Exception,Spectre.Console.ExceptionFormats)">
            <summary>
            Writes an exception to the console.
            </summary>
            <param name="console">The console.</param>
            <param name="exception">The exception to write to the console.</param>
            <param name="format">The exception format options.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.WriteException(Spectre.Console.IAnsiConsole,System.Exception,Spectre.Console.ExceptionSettings)">
            <summary>
            Writes an exception to the console.
            </summary>
            <param name="console">The console.</param>
            <param name="exception">The exception to write to the console.</param>
            <param name="settings">The exception settings.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.RunExclusive``1(Spectre.Console.IAnsiConsole,System.Func{``0})">
            <summary>
            Runs the specified function in exclusive mode.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="console">The console.</param>
            <param name="func">The func to run in exclusive mode.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.RunExclusive``1(Spectre.Console.IAnsiConsole,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Runs the specified function in exclusive mode asynchronously.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="console">The console.</param>
            <param name="func">The func to run in exclusive mode.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Live(Spectre.Console.IAnsiConsole,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Creates a new <see cref="T:Spectre.Console.LiveDisplay"/> instance for the console.
            </summary>
            <param name="console">The console.</param>
            <param name="target">The target renderable to update.</param>
            <returns>A <see cref="T:Spectre.Console.LiveDisplay"/> instance.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Markup(Spectre.Console.IAnsiConsole,System.String,System.Object[])">
            <summary>
            Writes the specified markup to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.MarkupInterpolated(Spectre.Console.IAnsiConsole,System.FormattableString)">
            <summary>
            Writes the specified markup to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            console.MarkupInterpolated($"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="console">The console to write to.</param>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Markup(Spectre.Console.IAnsiConsole,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the specified markup to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.MarkupInterpolated(Spectre.Console.IAnsiConsole,System.IFormatProvider,System.FormattableString)">
            <summary>
            Writes the specified markup to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            console.MarkupInterpolated(CultureInfo.InvariantCulture, $"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="console">The console to write to.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Markup(Spectre.Console.IAnsiConsole,System.String)">
            <summary>
            Writes the specified markup to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.MarkupLine(Spectre.Console.IAnsiConsole,System.String,System.Object[])">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.MarkupLineInterpolated(Spectre.Console.IAnsiConsole,System.FormattableString)">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            console.MarkupLineInterpolated($"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="console">The console to write to.</param>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.MarkupLine(Spectre.Console.IAnsiConsole,System.String)">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.MarkupLine(Spectre.Console.IAnsiConsole,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            </summary>
            <param name="console">The console to write to.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.MarkupLineInterpolated(Spectre.Console.IAnsiConsole,System.IFormatProvider,System.FormattableString)">
            <summary>
            Writes the specified markup, followed by the current line terminator, to the console.
            <para/>
            All interpolation holes which contain a string are automatically escaped so you must not call <see cref="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)"/>.
            </summary>
            <example>
            <code>
            string input = args[0];
            string output = Process(input);
            console.MarkupLineInterpolated(CultureInfo.InvariantCulture, $"[blue]{input}[/] -> [green]{output}[/]");
            </code>
            </example>
            <param name="console">The console to write to.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="value">The interpolated string value to write.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Progress(Spectre.Console.IAnsiConsole)">
            <summary>
            Creates a new <see cref="M:Spectre.Console.AnsiConsoleExtensions.Progress(Spectre.Console.IAnsiConsole)"/> instance for the console.
            </summary>
            <param name="console">The console.</param>
            <returns>A <see cref="M:Spectre.Console.AnsiConsoleExtensions.Progress(Spectre.Console.IAnsiConsole)"/> instance.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Status(Spectre.Console.IAnsiConsole)">
            <summary>
            Creates a new <see cref="M:Spectre.Console.AnsiConsoleExtensions.Status(Spectre.Console.IAnsiConsole)"/> instance for the console.
            </summary>
            <param name="console">The console.</param>
            <returns>A <see cref="M:Spectre.Console.AnsiConsoleExtensions.Status(Spectre.Console.IAnsiConsole)"/> instance.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Prompt``1(Spectre.Console.IAnsiConsole,Spectre.Console.IPrompt{``0})">
            <summary>
            Displays a prompt to the user.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="console">The console.</param>
            <param name="prompt">The prompt to display.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Ask``1(Spectre.Console.IAnsiConsole,System.String)">
            <summary>
            Displays a prompt to the user.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="console">The console.</param>
            <param name="prompt">The prompt markup text.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Ask``1(Spectre.Console.IAnsiConsole,System.String,System.Globalization.CultureInfo)">
            <summary>
            Displays a prompt to the user.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="console">The console.</param>
            <param name="prompt">The prompt markup text.</param>
            <param name="culture">Specific CultureInfo to use when converting input.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Confirm(Spectre.Console.IAnsiConsole,System.String,System.Boolean)">
            <summary>
            Displays a prompt with two choices, yes or no.
            </summary>
            <param name="console">The console.</param>
            <param name="prompt">The prompt markup text.</param>
            <param name="defaultValue">Specifies the default answer.</param>
            <returns><c>true</c> if the user selected "yes", otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.Render(Spectre.Console.IAnsiConsole,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Renders the specified object to the console.
            </summary>
            <param name="console">The console to render to.</param>
            <param name="renderable">The object to render.</param>
        </member>
        <member name="M:Spectre.Console.AnsiConsoleExtensions.AlternateScreen(Spectre.Console.IAnsiConsole,System.Action)">
            <summary>
            Switches to an alternate screen buffer if the terminal supports it.
            </summary>
            <param name="console">The console.</param>
            <param name="action">The action to execute within the alternate screen buffer.</param>
        </member>
        <member name="T:Spectre.Console.BarChartExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.BarChart"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.AddItem(Spectre.Console.BarChart,System.String,System.Double,System.Nullable{Spectre.Console.Color})">
            <summary>
            Adds an item to the bar chart.
            </summary>
            <param name="chart">The bar chart.</param>
            <param name="label">The item label.</param>
            <param name="value">The item value.</param>
            <param name="color">The item color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.AddItem``1(Spectre.Console.BarChart,``0)">
            <summary>
            Adds an item to the bar chart.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:Spectre.Console.IBarChartItem"/>.</typeparam>
            <param name="chart">The bar chart.</param>
            <param name="item">The item.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.AddItems``1(Spectre.Console.BarChart,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds multiple items to the bar chart.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:Spectre.Console.IBarChartItem"/>.</typeparam>
            <param name="chart">The bar chart.</param>
            <param name="items">The items.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.AddItems``1(Spectre.Console.BarChart,System.Collections.Generic.IEnumerable{``0},System.Func{``0,Spectre.Console.BarChartItem})">
            <summary>
            Adds multiple items to the bar chart.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:Spectre.Console.IBarChartItem"/>.</typeparam>
            <param name="chart">The bar chart.</param>
            <param name="items">The items.</param>
            <param name="converter">The converter that converts instances of <c>T</c> to <see cref="T:Spectre.Console.BarChartItem"/>.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.Width(Spectre.Console.BarChart,System.Nullable{System.Int32})">
            <summary>
            Sets the width of the bar chart.
            </summary>
            <param name="chart">The bar chart.</param>
            <param name="width">The bar chart width.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.Label(Spectre.Console.BarChart,System.String)">
            <summary>
            Sets the label of the bar chart.
            </summary>
            <param name="chart">The bar chart.</param>
            <param name="label">The bar chart label.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.ShowValues(Spectre.Console.BarChart)">
            <summary>
            Shows values next to each bar in the bar chart.
            </summary>
            <param name="chart">The bar chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.HideValues(Spectre.Console.BarChart)">
            <summary>
            Hides values next to each bar in the bar chart.
            </summary>
            <param name="chart">The bar chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.ShowValues(Spectre.Console.BarChart,System.Boolean)">
            <summary>
            Sets whether or not values should be shown
            next to each bar.
            </summary>
            <param name="chart">The bar chart.</param>
            <param name="show">Whether or not values should be shown next to each bar.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.LeftAlignLabel(Spectre.Console.BarChart)">
            <summary>
            Aligns the label to the left.
            </summary>
            <param name="chart">The bar chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.CenterLabel(Spectre.Console.BarChart)">
            <summary>
            Centers the label.
            </summary>
            <param name="chart">The bar chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.RightAlignLabel(Spectre.Console.BarChart)">
            <summary>
            Aligns the label to the right.
            </summary>
            <param name="chart">The bar chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BarChartExtensions.WithMaxValue(Spectre.Console.BarChart,System.Double)">
            <summary>
            Sets the max fixed value for the chart.
            </summary>
            <param name="chart">The bar chart.</param>
            <param name="maxValue">Max value for the chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.BoxExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.BoxBorder"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.BoxExtensions.GetSafeBorder(Spectre.Console.BoxBorder,System.Boolean)">
            <summary>
            Gets the safe border for a border.
            </summary>
            <param name="border">The border to get the safe border for.</param>
            <param name="safe">Whether or not to return the safe border.</param>
            <returns>The safe border if one exist, otherwise the original border.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.TableBorderExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.TableBorder"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.TableBorderExtensions.GetSafeBorder(Spectre.Console.TableBorder,System.Boolean)">
            <summary>
            Gets the safe border for a border.
            </summary>
            <param name="border">The border to get the safe border for.</param>
            <param name="safe">Whether or not to return the safe border.</param>
            <returns>The safe border if one exist, otherwise the original border.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.TreeGuideExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.TreeGuide"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.TreeGuideExtensions.GetSafeTreeGuide(Spectre.Console.TreeGuide,System.Boolean)">
            <summary>
            Gets the safe border for a border.
            </summary>
            <param name="guide">The tree guide to get the safe version for.</param>
            <param name="safe">Whether or not to return the safe border.</param>
            <returns>The safe border if one exist, otherwise the original border.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.IRenderable">
            <summary>
            Represents something that can be rendered to the console.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.IRenderable.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <summary>
            Measures the renderable object.
            </summary>
            <param name="options">The render options.</param>
            <param name="maxWidth">The maximum allowed width.</param>
            <returns>The minimum and maximum width of the object.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.IRenderable.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <summary>
            Renders the object.
            </summary>
            <param name="options">The render options.</param>
            <param name="maxWidth">The maximum allowed width.</param>
            <returns>A collection of segments.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.BoxBorderPart">
            <summary>
            Represents the different parts of a box border.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.TopLeft">
            <summary>
            The top left part of a box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.Top">
            <summary>
            The top part of a box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.TopRight">
            <summary>
            The top right part of a box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.Left">
            <summary>
            The left part of a box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.Right">
            <summary>
            The right part of a box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.BottomLeft">
            <summary>
            The bottom left part of a box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.Bottom">
            <summary>
            The bottom part of a box.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.BoxBorderPart.BottomRight">
            <summary>
            The bottom right part of a box.
            </summary>
        </member>
        <member name="T:Spectre.Console.Rendering.AsciiBoxBorder">
            <summary>
            Represents an old school ASCII border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.AsciiBoxBorder.GetPart(Spectre.Console.Rendering.BoxBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.DoubleBoxBorder">
            <summary>
            Represents a double border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.DoubleBoxBorder.GetPart(Spectre.Console.Rendering.BoxBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.HeavyBoxBorder">
            <summary>
            Represents a heavy border.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.HeavyBoxBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.HeavyBoxBorder.GetPart(Spectre.Console.Rendering.BoxBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.NoBoxBorder">
            <summary>
            Represents an invisible border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.NoBoxBorder.GetPart(Spectre.Console.Rendering.BoxBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.RoundedBoxBorder">
            <summary>
            Represents a rounded border.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RoundedBoxBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.RoundedBoxBorder.GetPart(Spectre.Console.Rendering.BoxBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.SquareBoxBorder">
            <summary>
            Represents a square border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.SquareBoxBorder.GetPart(Spectre.Console.Rendering.BoxBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.TableBorderPart">
            <summary>
            Represents the different parts of a table border.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderTopLeft">
            <summary>
            The top left part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderTop">
            <summary>
            The top part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderTopSeparator">
            <summary>
            The top separator part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderTopRight">
            <summary>
            The top right part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderLeft">
            <summary>
            The left part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderSeparator">
            <summary>
            A header separator.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderRight">
            <summary>
            The right part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderBottomLeft">
            <summary>
            The bottom left part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderBottom">
            <summary>
            The bottom part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderBottomSeparator">
            <summary>
            The bottom separator part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.HeaderBottomRight">
            <summary>
            The bottom right part of a header.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterTopLeft">
            <summary>
            The top left part of a footer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterTop">
            <summary>
            The top part of a footer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterTopSeparator">
            <summary>
            The top separator part of a footer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterTopRight">
            <summary>
            The top right part of a footer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.CellLeft">
            <summary>
            The left part of a cell.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.CellSeparator">
            <summary>
            A cell separator.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.CellRight">
            <summary>
            The right part of a cell.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterBottomLeft">
            <summary>
            The bottom left part of a footer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterBottom">
            <summary>
            The bottom part of a footer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterBottomSeparator">
            <summary>
            The bottom separator part of a footer.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TableBorderPart.FooterBottomRight">
            <summary>
            The bottom right part of a footer.
            </summary>
        </member>
        <member name="T:Spectre.Console.Rendering.Ascii2TableBorder">
            <summary>
            Represents another old school ASCII border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.Ascii2TableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.AsciiDoubleHeadTableBorder">
            <summary>
            Represents an old school ASCII border with a double header border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.AsciiDoubleHeadTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.AsciiTableBorder">
            <summary>
            Represents an old school ASCII border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.AsciiTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.DoubleEdgeTableBorder">
            <summary>
            Represents a border with a double edge.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.DoubleEdgeTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.DoubleTableBorder">
            <summary>
            Represents a double border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.DoubleTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.HeavyEdgeTableBorder">
            <summary>
            Represents a border with a heavy edge.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.HeavyEdgeTableBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.HeavyEdgeTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.HeavyHeadTableBorder">
            <summary>
            Represents a border with a heavy header.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.HeavyHeadTableBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.HeavyHeadTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.HeavyTableBorder">
            <summary>
            Represents a heavy border.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.HeavyTableBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.HeavyTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.HorizontalTableBorder">
            <summary>
            Represents a horizontal border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.HorizontalTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.MarkdownTableBorder">
            <summary>
            Represents a Markdown border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.MarkdownTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.MarkdownTableBorder.GetColumnRow(Spectre.Console.Rendering.TablePart,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{Spectre.Console.IColumn})">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.MinimalDoubleHeadTableBorder">
            <summary>
            Represents a minimal border with a double header border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.MinimalDoubleHeadTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.MinimalHeavyHeadTableBorder">
            <summary>
            Represents a minimal border with a heavy header.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.MinimalHeavyHeadTableBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.MinimalHeavyHeadTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.MinimalTableBorder">
            <summary>
            Represents a minimal border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.MinimalTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.NoTableBorder">
            <summary>
            Represents an invisible border.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.NoTableBorder.Visible">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.NoTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.RoundedTableBorder">
            <summary>
            Represents a rounded border.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RoundedTableBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.RoundedTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.SimpleHeavyTableBorder">
            <summary>
            Represents a simple border with heavy lines.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.SimpleHeavyTableBorder.SafeBorder">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.SimpleHeavyTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.SimpleTableBorder">
            <summary>
            Represents a simple border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.SimpleTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.SquareTableBorder">
            <summary>
            Represents a square border.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.SquareTableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.IAnsiConsoleEncoder">
            <summary>
            Represents a console encoder that can encode
            recorded segments into a string.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.IAnsiConsoleEncoder.Encode(Spectre.Console.IAnsiConsole,System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Encodes the specified <see cref="T:Spectre.Console.Rendering.IRenderable"/> enumerator.
            </summary>
            <param name="console">The console to use when encoding.</param>
            <param name="renderable">The renderable objects to encode.</param>
            <returns>A string representing the encoded result.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.IHasDirtyState">
            <summary>
            Represents something that can be dirty.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.IHasDirtyState.IsDirty">
            <summary>
            Gets a value indicating whether the object is dirty.
            </summary>
        </member>
        <member name="T:Spectre.Console.Rendering.IRenderHook">
            <summary>
            Represents a render hook.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.IRenderHook.Process(Spectre.Console.Rendering.RenderOptions,System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Processes the specified renderables.
            </summary>
            <param name="options">The render options.</param>
            <param name="renderables">The renderables to process.</param>
            <returns>The processed renderables.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.JustInTimeRenderable">
            <summary>
            Represents something renderable that's reconstructed
            when its state change in any way.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.JustInTimeRenderable.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.JustInTimeRenderable.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.JustInTimeRenderable.Build">
            <summary>
            Builds the inner renderable.
            </summary>
            <returns>A new inner renderable.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.JustInTimeRenderable.HasDirtyChildren">
            <summary>
            Checks if there are any children that has changed.
            If so, the underlying renderable needs rebuilding.
            </summary>
            <returns><c>true</c> if the object needs rebuilding, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.JustInTimeRenderable.MarkAsDirty">
            <summary>
            Marks this instance as dirty.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.JustInTimeRenderable.MarkAsDirty(System.Action)">
            <summary>
            Marks this instance as dirty.
            </summary>
            <param name="action">
            The action to execute before marking the instance as dirty.
            </param>
        </member>
        <member name="T:Spectre.Console.Rendering.Measurement">
            <summary>
            Represents a measurement.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Measurement.Min">
            <summary>
            Gets the minimum width.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Measurement.Max">
            <summary>
            Gets the maximum width.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.Measurement.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.Measurement"/> struct.
            </summary>
            <param name="min">The minimum width.</param>
            <param name="max">The maximum width.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.Measurement.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.Measurement.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.Measurement.Equals(Spectre.Console.Rendering.Measurement)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.Measurement.op_Equality(Spectre.Console.Rendering.Measurement,Spectre.Console.Rendering.Measurement)">
            <summary>
            Checks if two <see cref="T:Spectre.Console.Rendering.Measurement"/> instances are equal.
            </summary>
            <param name="left">The first measurement instance to compare.</param>
            <param name="right">The second measurement instance to compare.</param>
            <returns><c>true</c> if the two measurements are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Measurement.op_Inequality(Spectre.Console.Rendering.Measurement,Spectre.Console.Rendering.Measurement)">
            <summary>
            Checks if two <see cref="T:Spectre.Console.Rendering.Measurement"/> instances are not equal.
            </summary>
            <param name="left">The first measurement instance to compare.</param>
            <param name="right">The second measurement instance to compare.</param>
            <returns><c>true</c> if the two measurements are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.Renderable">
            <summary>
            Base class for a renderable object implementing <see cref="T:Spectre.Console.Rendering.IRenderable"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.Renderable.Spectre#Console#Rendering#IRenderable#Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.Renderable.Spectre#Console#Rendering#IRenderable#Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.Renderable.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <summary>
            Measures the renderable object.
            </summary>
            <param name="options">The render options.</param>
            <param name="maxWidth">The maximum allowed width.</param>
            <returns>The minimum and maximum width of the object.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Renderable.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <summary>
            Renders the object.
            </summary>
            <param name="options">The render options.</param>
            <param name="maxWidth">The maximum allowed width.</param>
            <returns>A collection of segments.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.RenderHookScope">
            <summary>
            Represents a render hook scope.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderHookScope.#ctor(Spectre.Console.IAnsiConsole,Spectre.Console.Rendering.IRenderHook)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.RenderHookScope"/> class.
            </summary>
            <param name="console">The console to attach the render hook to.</param>
            <param name="hook">The render hook.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderHookScope.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.RenderOptions">
            <summary>
            Represents render options.
            </summary>
            <param name="Capabilities">The capabilities.</param>
            <param name="ConsoleSize">The console size.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderOptions.#ctor(Spectre.Console.IReadOnlyCapabilities,Spectre.Console.Size)">
            <summary>
            Represents render options.
            </summary>
            <param name="Capabilities">The capabilities.</param>
            <param name="ConsoleSize">The console size.</param>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.Capabilities">
            <summary>The capabilities.</summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.ConsoleSize">
            <summary>The console size.</summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.ColorSystem">
            <summary>
            Gets the current color system.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.Ansi">
            <summary>
            Gets a value indicating whether or not VT/Ansi codes are supported.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.Unicode">
            <summary>
            Gets a value indicating whether or not unicode is supported.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.Justification">
            <summary>
            Gets the current justification.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.Height">
            <summary>
            Gets the requested height.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.RenderOptions.SingleLine">
            <summary>
            Gets a value indicating whether the context want items to render without
            line breaks and return a single line where applicable.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderOptions.Create(Spectre.Console.IAnsiConsole,Spectre.Console.IReadOnlyCapabilities)">
            <summary>
            Creates a <see cref="T:Spectre.Console.Rendering.RenderOptions"/> instance from a <see cref="T:Spectre.Console.IAnsiConsole"/>.
            </summary>
            <param name="console">The console.</param>
            <param name="capabilities">The capabilities, or <c>null</c> to use the provided console's capabilities.</param>
            <returns>A <see cref="T:Spectre.Console.Rendering.RenderOptions"/> representing the provided <see cref="T:Spectre.Console.IAnsiConsole"/>.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.RenderPipeline">
            <summary>
            Represents the render pipeline.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderPipeline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.RenderPipeline"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderPipeline.Attach(Spectre.Console.Rendering.IRenderHook)">
            <summary>
            Attaches a new render hook onto the pipeline.
            </summary>
            <param name="hook">The render hook to attach.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderPipeline.Detach(Spectre.Console.Rendering.IRenderHook)">
            <summary>
            Detaches a render hook from the pipeline.
            </summary>
            <param name="hook">The render hook to detach.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.RenderPipeline.Process(Spectre.Console.Rendering.RenderOptions,System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Processes the specified renderables.
            </summary>
            <param name="options">The render options.</param>
            <param name="renderables">The renderables to process.</param>
            <returns>The processed renderables.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.Segment">
            <summary>
            Represents a renderable segment.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Segment.Text">
            <summary>
            Gets the segment text.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Segment.IsLineBreak">
            <summary>
            Gets a value indicating whether or not this is an explicit line break
            that should be preserved.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Segment.IsWhiteSpace">
            <summary>
            Gets a value indicating whether or not this is a whitespace
            that should be preserved but not taken into account when
            layouting text.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Segment.IsControlCode">
            <summary>
            Gets a value indicating whether or not his is a
            control code such as cursor movement.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Segment.Style">
            <summary>
            Gets the segment style.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Segment.LineBreak">
            <summary>
            Gets a segment representing a line break.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.Segment.Empty">
            <summary>
            Gets an empty segment.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.Padding(System.Int32)">
            <summary>
            Creates padding segment.
            </summary>
            <param name="size">Number of whitespace characters.</param>
            <returns>Segment for specified padding size.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.Segment"/> class.
            </summary>
            <param name="text">The segment text.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.#ctor(System.String,Spectre.Console.Style)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.Segment"/> class.
            </summary>
            <param name="text">The segment text.</param>
            <param name="style">The segment style.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.Control(System.String)">
            <summary>
            Creates a control segment.
            </summary>
            <param name="control">The control code.</param>
            <returns>A segment representing a control code.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.CellCount">
            <summary>
            Gets the number of cells that this segment
            occupies in the console.
            </summary>
            <returns>The number of cells that this segment occupies in the console.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.CellCount(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.Segment})">
            <summary>
            Gets the number of cells that the segments occupies in the console.
            </summary>
            <param name="segments">The segments to measure.</param>
            <returns>The number of cells that the segments occupies in the console.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.StripLineEndings">
            <summary>
            Returns a new segment without any trailing line endings.
            </summary>
            <returns>A new segment without any trailing line endings.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.Split(System.Int32)">
            <summary>
            Splits the segment at the offset.
            </summary>
            <param name="offset">The offset where to split the segment.</param>
            <returns>One or two new segments representing the split.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.Clone">
            <summary>
            Clones the segment.
            </summary>
            <returns>A new segment that's identical to this one.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.SplitLines(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.Segment})">
            <summary>
            Splits the provided segments into lines.
            </summary>
            <param name="segments">The segments to split.</param>
            <returns>A collection of lines.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.SplitLines(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.Segment},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Splits the provided segments into lines with a maximum width.
            </summary>
            <param name="segments">The segments to split into lines.</param>
            <param name="maxWidth">The maximum width.</param>
            <param name="height">The height (if any).</param>
            <returns>A list of lines.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.SplitOverflow(Spectre.Console.Rendering.Segment,System.Nullable{Spectre.Console.Overflow},System.Int32)">
            <summary>
            Splits an overflowing segment into several new segments.
            </summary>
            <param name="segment">The segment to split.</param>
            <param name="overflow">The overflow strategy to use.</param>
            <param name="maxWidth">The maximum width.</param>
            <returns>A list of segments that has been split.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.Truncate(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.Segment},System.Int32)">
            <summary>
            Truncates the segments to the specified width.
            </summary>
            <param name="segments">The segments to truncate.</param>
            <param name="maxWidth">The maximum width that the segments may occupy.</param>
            <returns>A list of segments that has been truncated.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.Segment.Truncate(Spectre.Console.Rendering.Segment,System.Int32)">
            <summary>
            Truncates the segment to the specified width.
            </summary>
            <param name="segment">The segment to truncate.</param>
            <param name="maxWidth">The maximum width that the segment may occupy.</param>
            <returns>A new truncated segment, or <c>null</c>.</returns>
        </member>
        <member name="T:Spectre.Console.Rendering.SegmentLine">
            <summary>
            Represents a collection of segments.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.SegmentLine.Length">
            <summary>
            Gets the width of the line.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.SegmentLine"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLine.#ctor(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.Segment})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.SegmentLine"/> class.
            </summary>
            <param name="segments">The segments.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLine.CellCount">
            <summary>
            Gets the number of cells the segment line occupies.
            </summary>
            <returns>The cell width of the segment line.</returns>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLine.Prepend(Spectre.Console.Rendering.Segment)">
            <summary>
            Preprends a segment to the line.
            </summary>
            <param name="segment">The segment to prepend.</param>
        </member>
        <member name="T:Spectre.Console.Rendering.SegmentLineEnumerator">
            <summary>
            An enumerator for <see cref="T:Spectre.Console.Rendering.SegmentLine"/> collections.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLineEnumerator.#ctor(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.SegmentLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.SegmentLineEnumerator"/> class.
            </summary>
            <param name="lines">The lines to enumerate.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLineEnumerator.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLineEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.SegmentLineIterator">
            <summary>
            An iterator for <see cref="T:Spectre.Console.Rendering.SegmentLine"/> collections.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.SegmentLineIterator.Current">
            <summary>
            Gets the current segment.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.SegmentLineIterator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLineIterator.#ctor(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.SegmentLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rendering.SegmentLineIterator"/> class.
            </summary>
            <param name="lines">The lines to iterate.</param>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLineIterator.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLineIterator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.SegmentLineIterator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.TablePart">
            <summary>
            Represents different parts of a table.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TablePart.Top">
            <summary>
            The top of a table.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TablePart.HeaderSeparator">
            <summary>
            The separator between the header and the cells.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TablePart.FooterSeparator">
            <summary>
            The separator between the footer and the cells.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TablePart.Bottom">
            <summary>
            The bottom of a table.
            </summary>
        </member>
        <member name="T:Spectre.Console.Rendering.AsciiTreeGuide">
            <summary>
            An ASCII tree guide.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.AsciiTreeGuide.GetPart(Spectre.Console.Rendering.TreeGuidePart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.BoldLineTreeGuide">
            <summary>
            A tree guide made up of bold lines.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.BoldLineTreeGuide.SafeTreeGuide">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.BoldLineTreeGuide.GetPart(Spectre.Console.Rendering.TreeGuidePart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.DoubleLineTreeGuide">
            <summary>
            A tree guide made up of double lines.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rendering.DoubleLineTreeGuide.SafeTreeGuide">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rendering.DoubleLineTreeGuide.GetPart(Spectre.Console.Rendering.TreeGuidePart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.LineTreeGuide">
            <summary>
            A tree guide made up of lines.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rendering.LineTreeGuide.GetPart(Spectre.Console.Rendering.TreeGuidePart)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rendering.TreeGuidePart">
            <summary>
            Defines the different rendering parts of a <see cref="T:Spectre.Console.Tree"/>.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TreeGuidePart.Space">
            <summary>
            Represents a space.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TreeGuidePart.Continue">
            <summary>
            Connection between siblings.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TreeGuidePart.Fork">
            <summary>
            Branch from parent to child.
            </summary>
        </member>
        <member name="F:Spectre.Console.Rendering.TreeGuidePart.End">
            <summary>
            Branch from parent to child for the last child in a set.
            </summary>
        </member>
        <member name="T:Spectre.Console.BreakdownChartExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.BreakdownChart"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.AddItem(Spectre.Console.BreakdownChart,System.String,System.Double,Spectre.Console.Color)">
            <summary>
            Adds an item to the breakdown chart.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <param name="label">The item label.</param>
            <param name="value">The item value.</param>
            <param name="color">The item color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.AddItem``1(Spectre.Console.BreakdownChart,``0)">
            <summary>
            Adds an item to the breakdown chart.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:Spectre.Console.IBreakdownChartItem"/>.</typeparam>
            <param name="chart">The breakdown chart.</param>
            <param name="item">The item.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.AddItems``1(Spectre.Console.BreakdownChart,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds multiple items to the breakdown chart.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:Spectre.Console.IBreakdownChartItem"/>.</typeparam>
            <param name="chart">The breakdown chart.</param>
            <param name="items">The items.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.AddItems``1(Spectre.Console.BreakdownChart,System.Collections.Generic.IEnumerable{``0},System.Func{``0,Spectre.Console.IBreakdownChartItem})">
            <summary>
            Adds multiple items to the breakdown chart.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:Spectre.Console.IBarChartItem"/>.</typeparam>
            <param name="chart">The breakdown chart.</param>
            <param name="items">The items.</param>
            <param name="converter">The converter that converts instances of <c>T</c> to <see cref="T:Spectre.Console.IBreakdownChartItem"/>.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.Width(Spectre.Console.BreakdownChart,System.Nullable{System.Int32})">
            <summary>
            Sets the width of the breakdown chart.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <param name="width">The breakdown chart width.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.UseValueFormatter(Spectre.Console.BreakdownChart,System.Func{System.Double,System.Globalization.CultureInfo,System.String})">
            <summary>
            Tags will be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <param name="func">The value formatter to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.UseValueFormatter(Spectre.Console.BreakdownChart,System.Func{System.Double,System.String})">
            <summary>
            Tags will be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <param name="func">The value formatter to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.ShowPercentage(Spectre.Console.BreakdownChart)">
            <summary>
            Tags will be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.ShowTags(Spectre.Console.BreakdownChart)">
            <summary>
            Tags will be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.HideTags(Spectre.Console.BreakdownChart)">
            <summary>
            Tags will be not be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.ShowTags(Spectre.Console.BreakdownChart,System.Boolean)">
            <summary>
            Sets whether or not tags will be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <param name="show">Whether or not tags will be shown.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.ShowTagValues(Spectre.Console.BreakdownChart)">
            <summary>
            Tag values will be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.HideTagValues(Spectre.Console.BreakdownChart)">
            <summary>
            Tag values will be not be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.ShowTagValues(Spectre.Console.BreakdownChart,System.Boolean)">
            <summary>
            Sets whether or not tag values will be shown.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <param name="show">Whether or not tag values will be shown.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.Compact(Spectre.Console.BreakdownChart)">
            <summary>
            Chart and tags is rendered in compact mode.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.FullSize(Spectre.Console.BreakdownChart)">
            <summary>
            Chart and tags is rendered in full size mode.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.BreakdownChartExtensions.Compact(Spectre.Console.BreakdownChart,System.Boolean)">
            <summary>
            Sets whether or not the chart and tags should be rendered in compact mode.
            </summary>
            <param name="chart">The breakdown chart.</param>
            <param name="compact">Whether or not the chart and tags should be rendered in compact mode.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.CalendarExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Calendar"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.AddCalendarEvent(Spectre.Console.Calendar,System.DateTime)">
            <summary>
            Adds a calendar event.
            </summary>
            <param name="calendar">The calendar to add the calendar event to.</param>
            <param name="date">The calendar event date.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.AddCalendarEvent(Spectre.Console.Calendar,System.String,System.DateTime)">
            <summary>
            Adds a calendar event.
            </summary>
            <param name="calendar">The calendar to add the calendar event to.</param>
            <param name="description">The calendar event description.</param>
            <param name="date">The calendar event date.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.AddCalendarEvent(Spectre.Console.Calendar,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a calendar event.
            </summary>
            <param name="calendar">The calendar to add the calendar event to.</param>
            <param name="year">The year of the calendar event.</param>
            <param name="month">The month of the calendar event.</param>
            <param name="day">The day of the calendar event.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.AddCalendarEvent(Spectre.Console.Calendar,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a calendar event.
            </summary>
            <param name="calendar">The calendar.</param>
            <param name="description">The calendar event description.</param>
            <param name="year">The year of the calendar event.</param>
            <param name="month">The month of the calendar event.</param>
            <param name="day">The day of the calendar event.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.HighlightStyle(Spectre.Console.Calendar,Spectre.Console.Style)">
            <summary>
            Sets the calendar's highlight <see cref="T:Spectre.Console.Style"/>.
            </summary>
            <param name="calendar">The calendar.</param>
            <param name="style">The highlight style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.HeaderStyle(Spectre.Console.Calendar,Spectre.Console.Style)">
            <summary>
            Sets the calendar's header <see cref="T:Spectre.Console.Style"/>.
            </summary>
            <param name="calendar">The calendar.</param>
            <param name="style">The header style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.ShowHeader(Spectre.Console.Calendar)">
            <summary>
            Shows the calendar header.
            </summary>
            <param name="calendar">The calendar.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.CalendarExtensions.HideHeader(Spectre.Console.Calendar)">
            <summary>
            Hides the calendar header.
            </summary>
            <param name="calendar">The calendar.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.CharExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.Char"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.CharExtensions.GetCellWidth(System.Char)">
            <summary>
            Gets the cell width of a character.
            </summary>
            <param name="character">The character to get the cell width of.</param>
            <returns>The cell width of the character.</returns>
        </member>
        <member name="T:Spectre.Console.ColumnExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IColumn"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.ColumnExtensions.NoWrap``1(``0)">
            <summary>
            Prevents a column from wrapping.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IColumn"/>.</typeparam>
            <param name="obj">The column.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ColumnExtensions.Width``1(``0,System.Nullable{System.Int32})">
            <summary>
            Sets the width of the column.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IColumn"/>.</typeparam>
            <param name="obj">The column.</param>
            <param name="width">The column width.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.ConfirmationPromptExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.ConfirmationPrompt"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.ShowChoices(Spectre.Console.ConfirmationPrompt,System.Boolean)">
            <summary>
            Show or hide choices.
            </summary>
            <param name="obj">The prompt.</param>
            <param name="show">Whether or not the choices should be visible.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.ShowChoices(Spectre.Console.ConfirmationPrompt)">
            <summary>
            Shows choices.
            </summary>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.HideChoices(Spectre.Console.ConfirmationPrompt)">
            <summary>
            Hides choices.
            </summary>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.ShowDefaultValue(Spectre.Console.ConfirmationPrompt,System.Boolean)">
            <summary>
            Show or hide the default value.
            </summary>
            <param name="obj">The prompt.</param>
            <param name="show">Whether or not the default value should be visible.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.ShowDefaultValue(Spectre.Console.ConfirmationPrompt)">
            <summary>
            Shows the default value.
            </summary>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.HideDefaultValue(Spectre.Console.ConfirmationPrompt)">
            <summary>
            Hides the default value.
            </summary>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.InvalidChoiceMessage(Spectre.Console.ConfirmationPrompt,System.String)">
            <summary>
            Sets the "invalid choice" message for the prompt.
            </summary>
            <param name="obj">The prompt.</param>
            <param name="message">The "invalid choice" message.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.Yes(Spectre.Console.ConfirmationPrompt,System.Char)">
            <summary>
            Sets the character to interpret as "yes".
            </summary>
            <param name="obj">The confirmation prompt.</param>
            <param name="character">The character to interpret as "yes".</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ConfirmationPromptExtensions.No(Spectre.Console.ConfirmationPrompt,System.Char)">
            <summary>
            Sets the character to interpret as "no".
            </summary>
            <param name="obj">The confirmation prompt.</param>
            <param name="character">The character to interpret as "no".</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.CursorExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IAnsiConsoleCursor"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.Show(Spectre.Console.IAnsiConsoleCursor)">
            <summary>
            Shows the cursor.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.Hide(Spectre.Console.IAnsiConsoleCursor)">
            <summary>
            Hides the cursor.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveUp(Spectre.Console.IAnsiConsoleCursor)">
            <summary>
            Moves the cursor up.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveUp(Spectre.Console.IAnsiConsoleCursor,System.Int32)">
            <summary>
            Moves the cursor up.
            </summary>
            <param name="cursor">The cursor.</param>
            <param name="steps">The number of steps to move the cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveDown(Spectre.Console.IAnsiConsoleCursor)">
            <summary>
            Moves the cursor down.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveDown(Spectre.Console.IAnsiConsoleCursor,System.Int32)">
            <summary>
            Moves the cursor down.
            </summary>
            <param name="cursor">The cursor.</param>
            <param name="steps">The number of steps to move the cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveLeft(Spectre.Console.IAnsiConsoleCursor)">
            <summary>
            Moves the cursor to the left.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveLeft(Spectre.Console.IAnsiConsoleCursor,System.Int32)">
            <summary>
            Moves the cursor to the left.
            </summary>
            <param name="cursor">The cursor.</param>
            <param name="steps">The number of steps to move the cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveRight(Spectre.Console.IAnsiConsoleCursor)">
            <summary>
            Moves the cursor to the right.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:Spectre.Console.CursorExtensions.MoveRight(Spectre.Console.IAnsiConsoleCursor,System.Int32)">
            <summary>
            Moves the cursor to the right.
            </summary>
            <param name="cursor">The cursor.</param>
            <param name="steps">The number of steps to move the cursor.</param>
        </member>
        <member name="T:Spectre.Console.ExceptionExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.Exception"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.ExceptionExtensions.GetRenderable(System.Exception,Spectre.Console.ExceptionFormats)">
            <summary>
            Gets a <see cref="T:Spectre.Console.Rendering.IRenderable"/> representation of the exception.
            </summary>
            <param name="exception">The exception to format.</param>
            <param name="format">The exception format options.</param>
            <returns>A <see cref="T:Spectre.Console.Rendering.IRenderable"/> representing the exception.</returns>
        </member>
        <member name="M:Spectre.Console.ExceptionExtensions.GetRenderable(System.Exception,Spectre.Console.ExceptionSettings)">
            <summary>
            Gets a <see cref="T:Spectre.Console.Rendering.IRenderable"/> representation of the exception.
            </summary>
            <param name="exception">The exception to format.</param>
            <param name="settings">The exception settings.</param>
            <returns>A <see cref="T:Spectre.Console.Rendering.IRenderable"/> representing the exception.</returns>
        </member>
        <member name="T:Spectre.Console.ExpandableExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IExpandable"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.ExpandableExtensions.Collapse``1(``0)">
            <summary>
            Tells the specified object to not expand to the available area
            but take as little space as possible.
            </summary>
            <typeparam name="T">The expandable object.</typeparam>
            <param name="obj">The object to collapse.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ExpandableExtensions.Expand``1(``0)">
            <summary>
            Tells the specified object to expand to the available area.
            </summary>
            <typeparam name="T">The expandable object.</typeparam>
            <param name="obj">The object to expand.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.FigletTextExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.FigletText"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.FigletTextExtensions.Color(Spectre.Console.FigletText,System.Nullable{Spectre.Console.Color})">
            <summary>
            Sets the color of the FIGlet text.
            </summary>
            <param name="text">The text.</param>
            <param name="color">The color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.GridExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Grid"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.GridExtensions.AddColumns(Spectre.Console.Grid,System.Int32)">
            <summary>
            Adds a column to the grid.
            </summary>
            <param name="grid">The grid to add the column to.</param>
            <param name="count">The number of columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.GridExtensions.AddColumns(Spectre.Console.Grid,Spectre.Console.GridColumn[])">
            <summary>
            Adds a column to the grid.
            </summary>
            <param name="grid">The grid to add the column to.</param>
            <param name="columns">The columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.GridExtensions.AddEmptyRow(Spectre.Console.Grid)">
            <summary>
            Adds an empty row to the grid.
            </summary>
            <param name="grid">The grid to add the row to.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.GridExtensions.AddRow(Spectre.Console.Grid,System.String[])">
            <summary>
            Adds a new row to the grid.
            </summary>
            <param name="grid">The grid to add the row to.</param>
            <param name="columns">The columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.GridExtensions.Width(Spectre.Console.Grid,System.Nullable{System.Int32})">
            <summary>
            Sets the grid width.
            </summary>
            <param name="grid">The grid.</param>
            <param name="width">The width.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.HasBorderExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IHasBorder"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.HasBorderExtensions.SafeBorder``1(``0)">
            <summary>
            Enables the safe border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to enable the safe border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBorderExtensions.NoSafeBorder``1(``0)">
            <summary>
            Disables the safe border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to disable the safe border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBorderExtensions.BorderStyle``1(``0,Spectre.Console.Style)">
            <summary>
            Sets the border style.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border style for.</param>
            <param name="style">The border style to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBorderExtensions.BorderColor``1(``0,Spectre.Console.Color)">
            <summary>
            Sets the border color.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border color for.</param>
            <param name="color">The border color to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.HasBoxBorderExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IHasBoxBorder"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.HasBoxBorderExtensions.Border``1(``0,Spectre.Console.BoxBorder)">
            <summary>
            Sets the border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <param name="border">The border to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBoxBorderExtensions.NoBorder``1(``0)">
            <summary>
            Do not display a border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBoxBorderExtensions.SquareBorder``1(``0)">
            <summary>
            Display a square border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBoxBorderExtensions.AsciiBorder``1(``0)">
            <summary>
            Display an ASCII border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBoxBorderExtensions.RoundedBorder``1(``0)">
            <summary>
            Display a rounded border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBoxBorderExtensions.HeavyBorder``1(``0)">
            <summary>
            Display a heavy border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasBoxBorderExtensions.DoubleBorder``1(``0)">
            <summary>
            Display a double border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.HasCultureExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IHasCulture"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.HasCultureExtensions.Culture``1(``0,System.Globalization.CultureInfo)">
            <summary>
            Sets the culture.
            </summary>
            <typeparam name="T">An object type with a culture.</typeparam>
            <param name="obj">The object to set the culture for.</param>
            <param name="culture">The culture to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasCultureExtensions.Culture``1(``0,System.String)">
            <summary>
            Sets the culture.
            </summary>
            <typeparam name="T">An object type with a culture.</typeparam>
            <param name="obj">The object to set the culture for.</param>
            <param name="name">The culture to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasCultureExtensions.Culture``1(``0,System.Int32)">
            <summary>
            Sets the culture.
            </summary>
            <typeparam name="T">An object type with a culture.</typeparam>
            <param name="obj">The object to set the culture for.</param>
            <param name="culture">The culture to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.HasJustificationExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IHasJustification"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.HasJustificationExtensions.Justify``1(``0,System.Nullable{Spectre.Console.Justify})">
            <summary>
            Sets the justification for an <see cref="T:Spectre.Console.IHasJustification"/> object.
            </summary>
            <typeparam name="T">The type that can be justified.</typeparam>
            <param name="obj">The alignable object.</param>
            <param name="alignment">The alignment.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasJustificationExtensions.LeftJustified``1(``0)">
            <summary>
            Sets the <see cref="T:Spectre.Console.IHasJustification"/> object to be left justified.
            </summary>
            <typeparam name="T">The type that can be justified.</typeparam>
            <param name="obj">The alignable object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasJustificationExtensions.Centered``1(``0)">
            <summary>
            Sets the <see cref="T:Spectre.Console.IHasJustification"/> object to be centered.
            </summary>
            <typeparam name="T">The type that can be justified.</typeparam>
            <param name="obj">The alignable object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasJustificationExtensions.RightJustified``1(``0)">
            <summary>
            Sets the <see cref="T:Spectre.Console.IHasJustification"/> object to be right justified.
            </summary>
            <typeparam name="T">The type that can be justified.</typeparam>
            <param name="obj">The alignable object.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.HasTableBorderExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IHasTableBorder"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.NoBorder``1(``0)">
            <summary>
            Do not display a border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.SquareBorder``1(``0)">
            <summary>
            Display a square border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.AsciiBorder``1(``0)">
            <summary>
            Display an ASCII border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.Ascii2Border``1(``0)">
            <summary>
            Display another ASCII border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.AsciiDoubleHeadBorder``1(``0)">
            <summary>
            Display an ASCII border with a double header border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.RoundedBorder``1(``0)">
            <summary>
            Display a rounded border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.MinimalBorder``1(``0)">
            <summary>
            Display a minimal border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.MinimalHeavyHeadBorder``1(``0)">
            <summary>
            Display a minimal border with a heavy head.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.MinimalDoubleHeadBorder``1(``0)">
            <summary>
            Display a minimal border with a double header border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.SimpleBorder``1(``0)">
            <summary>
            Display a simple border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.SimpleHeavyBorder``1(``0)">
            <summary>
            Display a simple border with heavy lines.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.HorizontalBorder``1(``0)">
            <summary>
            Display a simple border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.HeavyBorder``1(``0)">
            <summary>
            Display a heavy border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.HeavyEdgeBorder``1(``0)">
            <summary>
            Display a border with a heavy edge.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.HeavyHeadBorder``1(``0)">
            <summary>
            Display a border with a heavy header.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.DoubleBorder``1(``0)">
            <summary>
            Display a double border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.DoubleEdgeBorder``1(``0)">
            <summary>
            Display a border with a double edge.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.MarkdownBorder``1(``0)">
            <summary>
            Display a markdown border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.HasTableBorderExtensions.Border``1(``0,Spectre.Console.TableBorder)">
            <summary>
            Sets the border.
            </summary>
            <typeparam name="T">An object type with a border.</typeparam>
            <param name="obj">The object to set the border for.</param>
            <param name="border">The border to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.HasTreeNodeExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IHasTreeNodes"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNode``1(``0,System.String)">
            <summary>
            Adds a tree node.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree node to.</param>
            <param name="markup">The node's markup text.</param>
            <returns>The added tree node.</returns>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNode``1(``0,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Adds a tree node.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree node to.</param>
            <param name="renderable">The renderable to add.</param>
            <returns>The added tree node.</returns>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNode``1(``0,Spectre.Console.TreeNode)">
            <summary>
            Adds a tree node.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree node to.</param>
            <param name="node">The tree node to add.</param>
            <returns>The added tree node.</returns>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNodes``1(``0,System.String[])">
            <summary>
            Add multiple tree nodes.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree nodes to.</param>
            <param name="nodes">The tree nodes to add.</param>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNodes``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add multiple tree nodes.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree nodes to.</param>
            <param name="nodes">The tree nodes to add.</param>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNodes``1(``0,Spectre.Console.Rendering.IRenderable[])">
            <summary>
            Add multiple tree nodes.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree nodes to.</param>
            <param name="nodes">The tree nodes to add.</param>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNodes``1(``0,System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Add multiple tree nodes.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree nodes to.</param>
            <param name="nodes">The tree nodes to add.</param>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNodes``1(``0,Spectre.Console.TreeNode[])">
            <summary>
            Add multiple tree nodes.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree nodes to.</param>
            <param name="nodes">The tree nodes to add.</param>
        </member>
        <member name="M:Spectre.Console.HasTreeNodeExtensions.AddNodes``1(``0,System.Collections.Generic.IEnumerable{Spectre.Console.TreeNode})">
            <summary>
            Add multiple tree nodes.
            </summary>
            <typeparam name="T">An object with tree nodes.</typeparam>
            <param name="obj">The object to add the tree nodes to.</param>
            <param name="nodes">The tree nodes to add.</param>
        </member>
        <member name="T:Spectre.Console.LayoutExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Layout"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.LayoutExtensions.Ratio(Spectre.Console.Layout,System.Int32)">
            <summary>
            Sets the ratio of the layout.
            </summary>
            <param name="layout">The layout.</param>
            <param name="ratio">The ratio.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.LayoutExtensions.Size(Spectre.Console.Layout,System.Int32)">
            <summary>
            Sets the size of the layout.
            </summary>
            <param name="layout">The layout.</param>
            <param name="size">The size.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.LayoutExtensions.MinimumSize(Spectre.Console.Layout,System.Int32)">
            <summary>
            Sets the minimum width of the layout.
            </summary>
            <param name="layout">The layout.</param>
            <param name="size">The size.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.LiveDisplayExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.LiveDisplay"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.LiveDisplayExtensions.AutoClear(Spectre.Console.LiveDisplay,System.Boolean)">
            <summary>
            Sets whether or not auto clear is enabled.
            If enabled, the live display will be cleared when done.
            </summary>
            <param name="live">The <see cref="T:Spectre.Console.LiveDisplay"/> instance.</param>
            <param name="enabled">Whether or not auto clear is enabled.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.LiveDisplayExtensions.Overflow(Spectre.Console.LiveDisplay,Spectre.Console.VerticalOverflow)">
            <summary>
            Sets the vertical overflow strategy.
            </summary>
            <param name="live">The <see cref="T:Spectre.Console.LiveDisplay"/> instance.</param>
            <param name="overflow">The overflow strategy to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.LiveDisplayExtensions.Cropping(Spectre.Console.LiveDisplay,Spectre.Console.VerticalOverflowCropping)">
            <summary>
            Sets the vertical overflow cropping strategy.
            </summary>
            <param name="live">The <see cref="T:Spectre.Console.LiveDisplay"/> instance.</param>
            <param name="cropping">The overflow cropping strategy to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.OverflowableExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IOverflowable"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.OverflowableExtensions.Fold``1(``0)">
            <summary>
            Folds any overflowing text.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IOverflowable"/>.</typeparam>
            <param name="obj">The overflowable object instance.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.OverflowableExtensions.Crop``1(``0)">
            <summary>
            Crops any overflowing text.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IOverflowable"/>.</typeparam>
            <param name="obj">The overflowable object instance.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.OverflowableExtensions.Ellipsis``1(``0)">
            <summary>
            Crops any overflowing text and adds an ellipsis to the end.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IOverflowable"/>.</typeparam>
            <param name="obj">The overflowable object instance.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.OverflowableExtensions.Overflow``1(``0,Spectre.Console.Overflow)">
            <summary>
            Sets the overflow strategy.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IOverflowable"/>.</typeparam>
            <param name="obj">The overflowable object instance.</param>
            <param name="overflow">The overflow strategy to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.PaddableExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IPaddable"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.PaddableExtensions.PadLeft``1(``0,System.Int32)">
            <summary>
            Sets the left padding.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IPaddable"/>.</typeparam>
            <param name="obj">The paddable object instance.</param>
            <param name="left">The left padding.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PaddableExtensions.PadTop``1(``0,System.Int32)">
            <summary>
            Sets the top padding.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IPaddable"/>.</typeparam>
            <param name="obj">The paddable object instance.</param>
            <param name="top">The top padding.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PaddableExtensions.PadRight``1(``0,System.Int32)">
            <summary>
            Sets the right padding.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IPaddable"/>.</typeparam>
            <param name="obj">The paddable object instance.</param>
            <param name="right">The right padding.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PaddableExtensions.PadBottom``1(``0,System.Int32)">
            <summary>
            Sets the bottom padding.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IPaddable"/>.</typeparam>
            <param name="obj">The paddable object instance.</param>
            <param name="bottom">The bottom padding.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PaddableExtensions.Padding``1(``0,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the left, top, right and bottom padding.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IPaddable"/>.</typeparam>
            <param name="obj">The paddable object instance.</param>
            <param name="left">The left padding to apply.</param>
            <param name="top">The top padding to apply.</param>
            <param name="right">The right padding to apply.</param>
            <param name="bottom">The bottom padding to apply.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PaddableExtensions.Padding``1(``0,System.Int32,System.Int32)">
            <summary>
            Sets the horizontal and vertical padding.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IPaddable"/>.</typeparam>
            <param name="obj">The paddable object instance.</param>
            <param name="horizontal">The left and right padding.</param>
            <param name="vertical">The top and bottom padding.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PaddableExtensions.Padding``1(``0,Spectre.Console.Padding)">
            <summary>
            Sets the padding.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IPaddable"/>.</typeparam>
            <param name="obj">The paddable object instance.</param>
            <param name="padding">The padding to apply.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.PaddingExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Padding"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.PaddingExtensions.GetLeftSafe(System.Nullable{Spectre.Console.Padding})">
            <summary>
            Gets the left padding.
            </summary>
            <param name="padding">The padding.</param>
            <returns>The left padding or zero if <c>padding</c> is null.</returns>
        </member>
        <member name="M:Spectre.Console.PaddingExtensions.GetRightSafe(System.Nullable{Spectre.Console.Padding})">
            <summary>
            Gets the right padding.
            </summary>
            <param name="padding">The padding.</param>
            <returns>The right padding or zero if <c>padding</c> is null.</returns>
        </member>
        <member name="M:Spectre.Console.PaddingExtensions.GetTopSafe(System.Nullable{Spectre.Console.Padding})">
            <summary>
            Gets the top padding.
            </summary>
            <param name="padding">The padding.</param>
            <returns>The top padding or zero if <c>padding</c> is null.</returns>
        </member>
        <member name="M:Spectre.Console.PaddingExtensions.GetBottomSafe(System.Nullable{Spectre.Console.Padding})">
            <summary>
            Gets the bottom padding.
            </summary>
            <param name="padding">The padding.</param>
            <returns>The bottom padding or zero if <c>padding</c> is null.</returns>
        </member>
        <member name="T:Spectre.Console.PanelExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Panel"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.PanelExtensions.Header(Spectre.Console.Panel,System.String,System.Nullable{Spectre.Console.Justify})">
            <summary>
            Sets the panel header.
            </summary>
            <param name="panel">The panel.</param>
            <param name="text">The header text.</param>
            <param name="alignment">The header alignment.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PanelExtensions.HeaderAlignment(Spectre.Console.Panel,Spectre.Console.Justify)">
            <summary>
            Sets the panel header alignment.
            </summary>
            <param name="panel">The panel.</param>
            <param name="alignment">The header alignment.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PanelExtensions.Header(Spectre.Console.Panel,Spectre.Console.PanelHeader)">
            <summary>
            Sets the panel header.
            </summary>
            <param name="panel">The panel.</param>
            <param name="header">The header to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.PercentageColumnExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.PercentageColumn"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.PercentageColumnExtensions.Style(Spectre.Console.PercentageColumn,Spectre.Console.Style)">
            <summary>
            Sets the style for a non-complete task.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PercentageColumnExtensions.CompletedStyle(Spectre.Console.PercentageColumn,Spectre.Console.Style)">
            <summary>
            Sets the style for a completed task.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.ProgressBarColumnExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.ProgressBarColumn"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressBarColumnExtensions.CompletedStyle(Spectre.Console.ProgressBarColumn,Spectre.Console.Style)">
            <summary>
            Sets the style of completed portions of the progress bar.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressBarColumnExtensions.FinishedStyle(Spectre.Console.ProgressBarColumn,Spectre.Console.Style)">
            <summary>
            Sets the style of a finished progress bar.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressBarColumnExtensions.RemainingStyle(Spectre.Console.ProgressBarColumn,Spectre.Console.Style)">
            <summary>
            Sets the style of remaining portions of the progress bar.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.ProgressExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Progress"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressExtensions.Columns(Spectre.Console.Progress,Spectre.Console.ProgressColumn[])">
            <summary>
            Sets the columns to be used for an <see cref="T:Spectre.Console.Progress"/> instance.
            </summary>
            <param name="progress">The <see cref="T:Spectre.Console.Progress"/> instance.</param>
            <param name="columns">The columns to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressExtensions.AutoRefresh(Spectre.Console.Progress,System.Boolean)">
            <summary>
            Sets whether or not auto refresh is enabled.
            If disabled, you will manually have to refresh the progress.
            </summary>
            <param name="progress">The <see cref="T:Spectre.Console.Progress"/> instance.</param>
            <param name="enabled">Whether or not auto refresh is enabled.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressExtensions.AutoClear(Spectre.Console.Progress,System.Boolean)">
            <summary>
            Sets whether or not auto clear is enabled.
            If enabled, the task tabled will be removed once
            all tasks have completed.
            </summary>
            <param name="progress">The <see cref="T:Spectre.Console.Progress"/> instance.</param>
            <param name="enabled">Whether or not auto clear is enabled.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressExtensions.HideCompleted(Spectre.Console.Progress,System.Boolean)">
            <summary>
            Sets whether or not hide completed is enabled.
            If enabled, the task tabled will be removed once it is
            completed.
            </summary>
            <param name="progress">The <see cref="T:Spectre.Console.Progress"/> instance.</param>
            <param name="enabled">Whether or not hide completed is enabled.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.ProgressTaskExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.ProgressTask"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressTaskExtensions.Description(Spectre.Console.ProgressTask,System.String)">
            <summary>
            Sets the task description.
            </summary>
            <param name="task">The task.</param>
            <param name="description">The description.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressTaskExtensions.MaxValue(Spectre.Console.ProgressTask,System.Double)">
            <summary>
            Sets the max value of the task.
            </summary>
            <param name="task">The task.</param>
            <param name="value">The max value.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressTaskExtensions.Value(Spectre.Console.ProgressTask,System.Double)">
            <summary>
            Sets the value of the task.
            </summary>
            <param name="task">The task.</param>
            <param name="value">The value.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressTaskExtensions.IsIndeterminate(Spectre.Console.ProgressTask,System.Boolean)">
            <summary>
            Sets whether the task is considered indeterminate or not.
            </summary>
            <param name="task">The task.</param>
            <param name="indeterminate">Whether the task is considered indeterminate or not.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.RemainingTimeColumnExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.RemainingTimeColumn"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.RemainingTimeColumnExtensions.Style(Spectre.Console.RemainingTimeColumn,Spectre.Console.Style)">
            <summary>
            Sets the style of the remaining time text.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.SpinnerColumnExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.SpinnerColumn"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.SpinnerColumnExtensions.Style(Spectre.Console.SpinnerColumn,Spectre.Console.Style)">
            <summary>
            Sets the style of the spinner.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SpinnerColumnExtensions.CompletedText(Spectre.Console.SpinnerColumn,System.String)">
            <summary>
            Sets the text that should be shown instead of the spinner
            once a task completes.
            </summary>
            <param name="column">The column.</param>
            <param name="text">The text.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SpinnerColumnExtensions.CompletedStyle(Spectre.Console.SpinnerColumn,Spectre.Console.Style)">
            <summary>
            Sets the completed style of the spinner.
            </summary>
            <param name="column">The column.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.StatusContextExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.StatusContext"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.StatusContextExtensions.Status(Spectre.Console.StatusContext,System.String)">
            <summary>
            Sets the status message.
            </summary>
            <param name="context">The status context.</param>
            <param name="status">The status message.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.StatusContextExtensions.Spinner(Spectre.Console.StatusContext,Spectre.Console.Spinner)">
            <summary>
            Sets the spinner.
            </summary>
            <param name="context">The status context.</param>
            <param name="spinner">The spinner.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.StatusContextExtensions.SpinnerStyle(Spectre.Console.StatusContext,Spectre.Console.Style)">
            <summary>
            Sets the spinner style.
            </summary>
            <param name="context">The status context.</param>
            <param name="style">The spinner style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.StatusExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Status"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.StatusExtensions.AutoRefresh(Spectre.Console.Status,System.Boolean)">
            <summary>
            Sets whether or not auto refresh is enabled.
            If disabled, you will manually have to refresh the progress.
            </summary>
            <param name="status">The <see cref="T:Spectre.Console.Status"/> instance.</param>
            <param name="enabled">Whether or not auto refresh is enabled.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.StatusExtensions.Spinner(Spectre.Console.Status,Spectre.Console.Spinner)">
            <summary>
            Sets the spinner.
            </summary>
            <param name="status">The <see cref="T:Spectre.Console.Status"/> instance.</param>
            <param name="spinner">The spinner.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.StatusExtensions.SpinnerStyle(Spectre.Console.Status,Spectre.Console.Style)">
            <summary>
            Sets the spinner style.
            </summary>
            <param name="status">The <see cref="T:Spectre.Console.Status"/> instance.</param>
            <param name="style">The spinner style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.RecorderExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Recorder"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.RecorderExtensions.ExportText(Spectre.Console.Recorder)">
            <summary>
            Exports the recorded content as text.
            </summary>
            <param name="recorder">The recorder.</param>
            <returns>The recorded content as text.</returns>
        </member>
        <member name="M:Spectre.Console.RecorderExtensions.ExportHtml(Spectre.Console.Recorder)">
            <summary>
            Exports the recorded content as HTML.
            </summary>
            <param name="recorder">The recorder.</param>
            <returns>The recorded content as HTML.</returns>
        </member>
        <member name="T:Spectre.Console.RenderableExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Rendering.IRenderable"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.RenderableExtensions.GetSegments(Spectre.Console.Rendering.IRenderable,Spectre.Console.IAnsiConsole)">
            <summary>
            Gets the segments for a renderable using the specified console.
            </summary>
            <param name="renderable">The renderable.</param>
            <param name="console">The console.</param>
            <returns>An enumerable containing segments representing the specified <see cref="T:Spectre.Console.Rendering.IRenderable"/>.</returns>
        </member>
        <member name="T:Spectre.Console.RuleExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.RuleExtensions"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.RuleExtensions.RuleTitle(Spectre.Console.Rule,System.String)">
            <summary>
            Sets the rule title.
            </summary>
            <param name="rule">The rule.</param>
            <param name="title">The title.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.RuleExtensions.RuleStyle(Spectre.Console.Rule,Spectre.Console.Style)">
            <summary>
            Sets the rule style.
            </summary>
            <param name="rule">The rule.</param>
            <param name="style">The rule style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.StringExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.StringExtensions.EscapeMarkup(System.String)">
            <summary>
            Escapes text so that it won’t be interpreted as markup.
            </summary>
            <param name="text">The text to escape.</param>
            <returns>A string that is safe to use in markup.</returns>
        </member>
        <member name="M:Spectre.Console.StringExtensions.RemoveMarkup(System.String)">
            <summary>
            Removes markup from the specified string.
            </summary>
            <param name="text">The text to remove markup from.</param>
            <returns>A string that does not have any markup.</returns>
        </member>
        <member name="M:Spectre.Console.StringExtensions.GetCellWidth(System.String)">
            <summary>
            Gets the cell width of the specified text.
            </summary>
            <param name="text">The text to get the cell width of.</param>
            <returns>The cell width of the text.</returns>
        </member>
        <member name="M:Spectre.Console.StringExtensions.Mask(System.String,System.Nullable{System.Char})">
            <summary>
            "Masks" every character in a string.
            </summary>
            <param name="value">String value to mask.</param>
            <param name="mask">Character to use for masking.</param>
            <returns>Masked string.</returns>
        </member>
        <member name="T:Spectre.Console.StyleExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Style"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.StyleExtensions.Foreground(Spectre.Console.Style,Spectre.Console.Color)">
            <summary>
            Creates a new style from the specified one with
            the specified foreground color.
            </summary>
            <param name="style">The style.</param>
            <param name="color">The foreground color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.StyleExtensions.Background(Spectre.Console.Style,Spectre.Console.Color)">
            <summary>
            Creates a new style from the specified one with
            the specified background color.
            </summary>
            <param name="style">The style.</param>
            <param name="color">The background color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.StyleExtensions.Decoration(Spectre.Console.Style,Spectre.Console.Decoration)">
            <summary>
            Creates a new style from the specified one with
            the specified text decoration.
            </summary>
            <param name="style">The style.</param>
            <param name="decoration">The text decoration.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.StyleExtensions.Link(Spectre.Console.Style,System.String)">
            <summary>
            Creates a new style from the specified one with
            the specified link.
            </summary>
            <param name="style">The style.</param>
            <param name="link">The link.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.TableColumnExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.TableColumn"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.TableColumnExtensions.Header(Spectre.Console.TableColumn,System.String)">
            <summary>
            Sets the table column header.
            </summary>
            <param name="column">The table column.</param>
            <param name="header">The table column header markup text.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableColumnExtensions.Header(Spectre.Console.TableColumn,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Sets the table column header.
            </summary>
            <param name="column">The table column.</param>
            <param name="header">The table column header.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableColumnExtensions.Footer(Spectre.Console.TableColumn,System.String)">
            <summary>
            Sets the table column footer.
            </summary>
            <param name="column">The table column.</param>
            <param name="footer">The table column footer markup text.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableColumnExtensions.Footer(Spectre.Console.TableColumn,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Sets the table column footer.
            </summary>
            <param name="column">The table column.</param>
            <param name="footer">The table column footer.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.TableExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Table"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.TableExtensions.AddColumns(Spectre.Console.Table,Spectre.Console.TableColumn[])">
            <summary>
            Adds multiple columns to the table.
            </summary>
            <param name="table">The table to add the column to.</param>
            <param name="columns">The columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.AddRow(Spectre.Console.Table,System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="table">The table to add the row to.</param>
            <param name="columns">The row columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.AddRow(Spectre.Console.Table,Spectre.Console.Rendering.IRenderable[])">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="table">The table to add the row to.</param>
            <param name="columns">The row columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.AddEmptyRow(Spectre.Console.Table)">
            <summary>
            Adds an empty row to the table.
            </summary>
            <param name="table">The table to add the row to.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.AddColumn(Spectre.Console.Table,System.String,System.Action{Spectre.Console.TableColumn})">
            <summary>
            Adds a column to the table.
            </summary>
            <param name="table">The table to add the column to.</param>
            <param name="column">The column to add.</param>
            <param name="configure">Delegate that can be used to configure the added column.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.AddColumns(Spectre.Console.Table,System.String[])">
            <summary>
            Adds multiple columns to the table.
            </summary>
            <param name="table">The table to add the columns to.</param>
            <param name="columns">The columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.AddRow(Spectre.Console.Table,System.String[])">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="table">The table to add the row to.</param>
            <param name="columns">The row columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.InsertRow(Spectre.Console.Table,System.Int32,System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Inserts a row in the table at the specified index.
            </summary>
            <param name="table">The table to add the row to.</param>
            <param name="index">The index to insert the row at.</param>
            <param name="columns">The row columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.UpdateCell(Spectre.Console.Table,System.Int32,System.Int32,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Updates a tables cell.
            </summary>
            <param name="table">The table to update.</param>
            <param name="rowIndex">The index of row to update.</param>
            <param name="columnIndex">The index of column to update.</param>
            <param name="cellData">New cell data.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.UpdateCell(Spectre.Console.Table,System.Int32,System.Int32,System.String)">
            <summary>
            Updates a tables cell.
            </summary>
            <param name="table">The table to update.</param>
            <param name="rowIndex">The index of row to update.</param>
            <param name="columnIndex">The index of column to update.</param>
            <param name="cellData">New cell data.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.InsertRow(Spectre.Console.Table,System.Int32,Spectre.Console.Rendering.IRenderable[])">
            <summary>
            Inserts a row in the table at the specified index.
            </summary>
            <param name="table">The table to add the row to.</param>
            <param name="index">The index to insert the row at.</param>
            <param name="columns">The row columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.InsertRow(Spectre.Console.Table,System.Int32,System.String[])">
            <summary>
            Inserts a row in the table at the specified index.
            </summary>
            <param name="table">The table to add the row to.</param>
            <param name="index">The index to insert the row at.</param>
            <param name="columns">The row columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.RemoveRow(Spectre.Console.Table,System.Int32)">
            <summary>
            Removes a row from the table with the specified index.
            </summary>
            <param name="table">The table to add the row to.</param>
            <param name="index">The index to remove the row at.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.Width(Spectre.Console.Table,System.Nullable{System.Int32})">
            <summary>
            Sets the table width.
            </summary>
            <param name="table">The table.</param>
            <param name="width">The width.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.ShowHeaders(Spectre.Console.Table)">
            <summary>
            Shows table headers.
            </summary>
            <param name="table">The table.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.HideHeaders(Spectre.Console.Table)">
            <summary>
            Hides table headers.
            </summary>
            <param name="table">The table.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.ShowFooters(Spectre.Console.Table)">
            <summary>
            Shows table footers.
            </summary>
            <param name="table">The table.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.HideFooters(Spectre.Console.Table)">
            <summary>
            Hides table footers.
            </summary>
            <param name="table">The table.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.Title(Spectre.Console.Table,System.String,Spectre.Console.Style)">
            <summary>
            Sets the table title.
            </summary>
            <param name="table">The table.</param>
            <param name="text">The table title markup text.</param>
            <param name="style">The table title style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.Title(Spectre.Console.Table,Spectre.Console.TableTitle)">
            <summary>
            Sets the table title.
            </summary>
            <param name="table">The table.</param>
            <param name="title">The table title.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.Caption(Spectre.Console.Table,System.String,Spectre.Console.Style)">
            <summary>
            Sets the table caption.
            </summary>
            <param name="table">The table.</param>
            <param name="text">The caption markup text.</param>
            <param name="style">The style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableExtensions.Caption(Spectre.Console.Table,Spectre.Console.TableTitle)">
            <summary>
            Sets the table caption.
            </summary>
            <param name="table">The table.</param>
            <param name="caption">The caption.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.TextPathExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.TextPath"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.SeparatorStyle(Spectre.Console.TextPath,Spectre.Console.Style)">
            <summary>
            Sets the separator style.
            </summary>
            <param name="obj">The path.</param>
            <param name="style">The separator style to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.SeparatorColor(Spectre.Console.TextPath,Spectre.Console.Color)">
            <summary>
            Sets the separator color.
            </summary>
            <param name="obj">The path.</param>
            <param name="color">The separator color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.RootStyle(Spectre.Console.TextPath,Spectre.Console.Style)">
            <summary>
            Sets the root style.
            </summary>
            <param name="obj">The path.</param>
            <param name="style">The root style to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.RootColor(Spectre.Console.TextPath,Spectre.Console.Color)">
            <summary>
            Sets the root color.
            </summary>
            <param name="obj">The path.</param>
            <param name="color">The root color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.StemStyle(Spectre.Console.TextPath,Spectre.Console.Style)">
            <summary>
            Sets the stem style.
            </summary>
            <param name="obj">The path.</param>
            <param name="style">The stem style to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.StemColor(Spectre.Console.TextPath,Spectre.Console.Color)">
            <summary>
            Sets the stem color.
            </summary>
            <param name="obj">The path.</param>
            <param name="color">The stem color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.LeafStyle(Spectre.Console.TextPath,Spectre.Console.Style)">
            <summary>
            Sets the leaf style.
            </summary>
            <param name="obj">The path.</param>
            <param name="style">The stem leaf to set.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPathExtensions.LeafColor(Spectre.Console.TextPath,Spectre.Console.Color)">
            <summary>
            Sets the leaf color.
            </summary>
            <param name="obj">The path.</param>
            <param name="color">The leaf color.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.TreeExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.Tree"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.TreeExtensions.Style(Spectre.Console.Tree,Spectre.Console.Style)">
            <summary>
            Sets the tree style.
            </summary>
            <param name="tree">The tree.</param>
            <param name="style">The tree style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TreeExtensions.Guide(Spectre.Console.Tree,Spectre.Console.TreeGuide)">
            <summary>
            Sets the tree guide line appearance.
            </summary>
            <param name="tree">The tree.</param>
            <param name="guide">The tree guide lines to use.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.TreeNodeExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.TreeNode"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.TreeNodeExtensions.Expand(Spectre.Console.TreeNode)">
            <summary>
            Expands the tree.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TreeNodeExtensions.Collapse(Spectre.Console.TreeNode)">
            <summary>
            Collapses the tree.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TreeNodeExtensions.Expand(Spectre.Console.TreeNode,System.Boolean)">
            <summary>
            Sets whether or not the tree node should be expanded.
            </summary>
            <param name="node">The tree node.</param>
            <param name="expand">Whether or not the tree node should be expanded.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.VisibilityExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.IHasVisibility"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.VisibilityExtensions.Invisible``1(``0)">
            <summary>
            Marks the specified object as being invisible.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IHasVisibility"/>.</typeparam>
            <param name="obj">The object to hide.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.VisibilityExtensions.Visible``1(``0)">
            <summary>
            Marks the specified object as being visible.
            </summary>
            <typeparam name="T">An object implementing <see cref="T:Spectre.Console.IHasVisibility"/>.</typeparam>
            <param name="obj">The object to show.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.HorizontalAlignment">
            <summary>
            Represents horizontal alignment.
            </summary>
        </member>
        <member name="F:Spectre.Console.HorizontalAlignment.Left">
            <summary>
            Left aligned.
            </summary>
        </member>
        <member name="F:Spectre.Console.HorizontalAlignment.Center">
            <summary>
            Centered.
            </summary>
        </member>
        <member name="F:Spectre.Console.HorizontalAlignment.Right">
            <summary>
            Right aligned.
            </summary>
        </member>
        <member name="T:Spectre.Console.IAlignable">
            <summary>
            Represents something that is alignable.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAlignable.Alignment">
            <summary>
            Gets or sets the alignment.
            </summary>
        </member>
        <member name="T:Spectre.Console.IAnsiConsole">
            <summary>
            Represents a console.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsole.Profile">
            <summary>
            Gets the console profile.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsole.Cursor">
            <summary>
            Gets the console cursor.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsole.Input">
            <summary>
            Gets the console input.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsole.ExclusivityMode">
            <summary>
            Gets the exclusivity mode.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsole.Pipeline">
            <summary>
            Gets the render pipeline.
            </summary>
        </member>
        <member name="M:Spectre.Console.IAnsiConsole.Clear(System.Boolean)">
            <summary>
            Clears the console.
            </summary>
            <param name="home">If the cursor should be moved to the home position.</param>
        </member>
        <member name="M:Spectre.Console.IAnsiConsole.Write(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Writes a <see cref="T:Spectre.Console.Rendering.IRenderable"/> to the console.
            </summary>
            <param name="renderable">The <see cref="T:Spectre.Console.Rendering.IRenderable"/> to write.</param>
        </member>
        <member name="T:Spectre.Console.IAnsiConsoleCursor">
            <summary>
            Represents the console's cursor.
            </summary>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleCursor.Show(System.Boolean)">
            <summary>
            Shows or hides the cursor.
            </summary>
            <param name="show"><c>true</c> to show the cursor, <c>false</c> to hide it.</param>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleCursor.SetPosition(System.Int32,System.Int32)">
            <summary>
            Sets the cursor position.
            </summary>
            <param name="column">The column to move the cursor to.</param>
            <param name="line">The line to move the cursor to.</param>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleCursor.Move(Spectre.Console.CursorDirection,System.Int32)">
            <summary>
            Moves the cursor relative to the current position.
            </summary>
            <param name="direction">The direction to move the cursor.</param>
            <param name="steps">The number of steps to move the cursor.</param>
        </member>
        <member name="T:Spectre.Console.IAnsiConsoleInput">
            <summary>
            Represents the console's input mechanism.
            </summary>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleInput.IsKeyAvailable">
            <summary>
            Gets a value indicating whether or not
            there is a key available.
            </summary>
            <returns><c>true</c> if there's a key available, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleInput.ReadKey(System.Boolean)">
            <summary>
            Reads a key from the console.
            </summary>
            <param name="intercept">Whether or not to intercept the key.</param>
            <returns>The key that was read.</returns>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleInput.ReadKeyAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Reads a key from the console.
            </summary>
            <param name="intercept">Whether or not to intercept the key.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>The key that was read.</returns>
        </member>
        <member name="T:Spectre.Console.IAnsiConsoleOutput">
            <summary>
            Represents console output.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsoleOutput.Writer">
            <summary>
            Gets the <see cref="T:System.IO.TextWriter"/> used to write to the output.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsoleOutput.IsTerminal">
            <summary>
            Gets a value indicating whether or not the output is a terminal.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsoleOutput.Width">
            <summary>
            Gets the output width.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsoleOutput.Height">
            <summary>
            Gets the output height.
            </summary>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleOutput.SetEncoding(System.Text.Encoding)">
            <summary>
            Sets the output encoding.
            </summary>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="T:Spectre.Console.IColumn">
            <summary>
            Represents a column.
            </summary>
        </member>
        <member name="P:Spectre.Console.IColumn.NoWrap">
            <summary>
            Gets or sets a value indicating whether
            or not wrapping should be prevented.
            </summary>
        </member>
        <member name="P:Spectre.Console.IColumn.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="T:Spectre.Console.IExclusivityMode">
            <summary>
            Represents an exclusivity mode.
            </summary>
        </member>
        <member name="M:Spectre.Console.IExclusivityMode.Run``1(System.Func{``0})">
            <summary>
            Runs the specified function in exclusive mode.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="func">The func to run in exclusive mode.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Spectre.Console.IExclusivityMode.RunAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Runs the specified function in exclusive mode asynchronously.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="func">The func to run in exclusive mode.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="T:Spectre.Console.IExpandable">
            <summary>
            Represents something that is expandable.
            </summary>
        </member>
        <member name="P:Spectre.Console.IExpandable.Expand">
            <summary>
            Gets or sets a value indicating whether or not the object should
            expand to the available space. If <c>false</c>, the object's
            width will be auto calculated.
            </summary>
        </member>
        <member name="T:Spectre.Console.IHasBorder">
            <summary>
            Represents something that has a border.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasBorder.UseSafeBorder">
            <summary>
            Gets or sets a value indicating whether or not to use
            a "safe" border on legacy consoles that might not be able
            to render non-ASCII characters.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasBorder.BorderStyle">
            <summary>
            Gets or sets the box style.
            </summary>
        </member>
        <member name="T:Spectre.Console.IHasBoxBorder">
            <summary>
            Represents something that has a box border.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasBoxBorder.Border">
            <summary>
            Gets or sets the box.
            </summary>
        </member>
        <member name="T:Spectre.Console.IHasCulture">
            <summary>
            Represents something that has a culture.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasCulture.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
        </member>
        <member name="T:Spectre.Console.IHasJustification">
            <summary>
            Represents something that has justification.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasJustification.Justification">
            <summary>
            Gets or sets the justification.
            </summary>
        </member>
        <member name="T:Spectre.Console.IHasTableBorder">
            <summary>
            Represents something that has a border.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasTableBorder.Border">
            <summary>
            Gets or sets the border.
            </summary>
        </member>
        <member name="T:Spectre.Console.IHasTreeNodes">
            <summary>
            Represents something that has tree nodes.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasTreeNodes.Nodes">
            <summary>
            Gets the tree's child nodes.
            </summary>
        </member>
        <member name="T:Spectre.Console.IHasVisibility">
            <summary>
            Represents something that can be hidden.
            </summary>
        </member>
        <member name="P:Spectre.Console.IHasVisibility.IsVisible">
            <summary>
            Gets or sets a value indicating whether or not the object should
            be visible or not.
            </summary>
        </member>
        <member name="T:Spectre.Console.InteractionSupport">
            <summary>
            Determines interactivity support.
            </summary>
        </member>
        <member name="F:Spectre.Console.InteractionSupport.Detect">
            <summary>
            Interaction support should be
            detected by the system.
            </summary>
        </member>
        <member name="F:Spectre.Console.InteractionSupport.Yes">
            <summary>
            Interactivity is supported.
            </summary>
        </member>
        <member name="F:Spectre.Console.InteractionSupport.No">
            <summary>
            Interactivity is not supported.
            </summary>
        </member>
        <member name="F:Spectre.Console.AnsiSequences.ESC">
            <summary>
            The ASCII escape character (decimal 27).
            </summary>
        </member>
        <member name="F:Spectre.Console.AnsiSequences.CSI">
            <summary>
            Introduces a control sequence that uses 8-bit characters.
            </summary>
        </member>
        <member name="F:Spectre.Console.AnsiSequences.DECTCEM">
            <summary>
            Text cursor enable.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/DECRQM.html#T5-8"/>.
            </remarks>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.SGR(System.Byte[])">
            <summary>
            This control function selects one or more character attributes at the same time.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/SGR.html"/>.
            </remarks>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.ED(System.Int32)">
            <summary>
            This control function erases characters from part or all of the display.
            When you erase complete lines, they become single-height, single-width lines,
            with all visual character attributes cleared.
            ED works inside or outside the scrolling margins.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/ED.html"/>.
            </remarks>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.CUU(System.Int32)">
            <summary>
            Moves the cursor up a specified number of lines in the same column.
            The cursor stops at the top margin.
            If the cursor is already above the top margin, then the cursor stops at the top line.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/CUU.html"/>.
            </remarks>
            <param name="steps">The number of steps to move up.</param>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.CUD(System.Int32)">
            <summary>
            This control function moves the cursor down a specified number of lines in the same column.
            The cursor stops at the bottom margin.
            If the cursor is already below the bottom margin, then the cursor stops at the bottom line.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/CUD.html"/>.
            </remarks>
            <param name="steps">The number of steps to move down.</param>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.CUF(System.Int32)">
            <summary>
            This control function moves the cursor to the right by a specified number of columns.
            The cursor stops at the right border of the page.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/CUF.html"/>.
            </remarks>
            <param name="steps">The number of steps to move forward.</param>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.CUB(System.Int32)">
            <summary>
            This control function moves the cursor to the left by a specified number of columns.
            The cursor stops at the left border of the page.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/CUB.html"/>.
            </remarks>
            <param name="steps">The number of steps to move backward.</param>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.CUP(System.Int32,System.Int32)">
            <summary>
            Moves the cursor to the specified position.
            </summary>
            <param name="line">The line to move to.</param>
            <param name="column">The column to move to.</param>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/CUP.html"/>.
            </remarks>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.RM(System.Int32)">
            <summary>
            Hides the cursor.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/RM.html"/>.
            </remarks>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.SM(System.Int32)">
            <summary>
            Shows the cursor.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/SM.html"/>.
            </remarks>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="M:Spectre.Console.AnsiSequences.EL(System.Int32)">
            <summary>
            This control function erases characters on the line that has the cursor.
            EL clears all character attributes from erased character positions.
            EL works inside or outside the scrolling margins.
            </summary>
            <remarks>
            See <see href="https://vt100.net/docs/vt510-rm/EL.html"/>.
            </remarks>
            <returns>The ANSI escape code.</returns>
        </member>
        <member name="T:Spectre.Console.IAnsiConsoleBackend">
            <summary>
            Represents a console backend.
            </summary>
        </member>
        <member name="P:Spectre.Console.IAnsiConsoleBackend.Cursor">
            <summary>
            Gets the console cursor for the backend.
            </summary>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleBackend.Clear(System.Boolean)">
            <summary>
            Clears the console.
            </summary>
            <param name="home">If the cursor should be moved to the home position.</param>
        </member>
        <member name="M:Spectre.Console.IAnsiConsoleBackend.Write(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Writes a <see cref="T:Spectre.Console.Rendering.IRenderable"/> to the console backend.
            </summary>
            <param name="renderable">The <see cref="T:Spectre.Console.Rendering.IRenderable"/> to write.</param>
        </member>
        <member name="T:Spectre.Console.IRatioResolvable">
            <summary>
            Represents something that can be used to resolve ratios.
            </summary>
        </member>
        <member name="P:Spectre.Console.IRatioResolvable.Ratio">
            <summary>
            Gets the ratio.
            </summary>
        </member>
        <member name="P:Spectre.Console.IRatioResolvable.Size">
            <summary>
            Gets the size.
            </summary>
        </member>
        <member name="P:Spectre.Console.IRatioResolvable.MinimumSize">
            <summary>
            Gets the minimum size.
            </summary>
        </member>
        <member name="T:Spectre.Console.IOverflowable">
            <summary>
            Represents something that can overflow.
            </summary>
        </member>
        <member name="P:Spectre.Console.IOverflowable.Overflow">
            <summary>
            Gets or sets the text overflow strategy.
            </summary>
        </member>
        <member name="T:Spectre.Console.IPaddable">
            <summary>
            Represents something that is paddable.
            </summary>
        </member>
        <member name="P:Spectre.Console.IPaddable.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
        </member>
        <member name="T:Spectre.Console.IProfileEnricher">
            <summary>
            Represents something that can enrich a profile.
            </summary>
        </member>
        <member name="P:Spectre.Console.IProfileEnricher.Name">
            <summary>
            Gets the name of the enricher.
            </summary>
        </member>
        <member name="M:Spectre.Console.IProfileEnricher.Enabled(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets whether or not this enricher is enabled.
            </summary>
            <param name="environmentVariables">The environment variables.</param>
            <returns>Whether or not this enricher is enabled.</returns>
        </member>
        <member name="M:Spectre.Console.IProfileEnricher.Enrich(Spectre.Console.Profile)">
            <summary>
            Enriches the profile.
            </summary>
            <param name="profile">The profile to enrich.</param>
        </member>
        <member name="T:Spectre.Console.IReadOnlyCapabilities">
            <summary>
            Represents (read-only) console capabilities.
            </summary>
        </member>
        <member name="P:Spectre.Console.IReadOnlyCapabilities.ColorSystem">
            <summary>
            Gets the color system.
            </summary>
        </member>
        <member name="P:Spectre.Console.IReadOnlyCapabilities.Ansi">
            <summary>
            Gets a value indicating whether or not
            the console supports VT/ANSI control codes.
            </summary>
        </member>
        <member name="P:Spectre.Console.IReadOnlyCapabilities.Links">
            <summary>
            Gets a value indicating whether or not
            the console support links.
            </summary>
        </member>
        <member name="P:Spectre.Console.IReadOnlyCapabilities.Legacy">
            <summary>
            Gets a value indicating whether or not
            this is a legacy console (cmd.exe) on an OS
            prior to Windows 10.
            </summary>
            <remarks>
            Only relevant when running on Microsoft Windows.
            </remarks>
        </member>
        <member name="P:Spectre.Console.IReadOnlyCapabilities.IsTerminal">
            <summary>
            Gets a value indicating whether or not
            console output has been redirected.
            </summary>
        </member>
        <member name="P:Spectre.Console.IReadOnlyCapabilities.Interactive">
            <summary>
            Gets a value indicating whether
            or not the console supports interaction.
            </summary>
        </member>
        <member name="P:Spectre.Console.IReadOnlyCapabilities.Unicode">
            <summary>
            Gets a value indicating whether
            or not the console supports Unicode.
            </summary>
        </member>
        <member name="T:Spectre.Console.Justify">
            <summary>
            Represents text justification.
            </summary>
        </member>
        <member name="F:Spectre.Console.Justify.Left">
            <summary>
            Left justified.
            </summary>
        </member>
        <member name="F:Spectre.Console.Justify.Right">
            <summary>
            Right justified.
            </summary>
        </member>
        <member name="F:Spectre.Console.Justify.Center">
            <summary>
            Centered.
            </summary>
        </member>
        <member name="T:Spectre.Console.LiveDisplay">
            <summary>
            Represents a live display.
            </summary>
        </member>
        <member name="P:Spectre.Console.LiveDisplay.AutoClear">
            <summary>
            Gets or sets a value indicating whether or not the live display should
            be cleared when it's done.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.LiveDisplay.Overflow">
            <summary>
            Gets or sets the vertical overflow strategy.
            </summary>
        </member>
        <member name="P:Spectre.Console.LiveDisplay.Cropping">
            <summary>
            Gets or sets the vertical overflow cropping strategy.
            </summary>
        </member>
        <member name="M:Spectre.Console.LiveDisplay.#ctor(Spectre.Console.IAnsiConsole,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.LiveDisplay"/> class.
            </summary>
            <param name="console">The console.</param>
            <param name="target">The target renderable to update.</param>
        </member>
        <member name="M:Spectre.Console.LiveDisplay.Start(System.Action{Spectre.Console.LiveDisplayContext})">
            <summary>
            Starts the live display.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Spectre.Console.LiveDisplay.Start``1(System.Func{Spectre.Console.LiveDisplayContext,``0})">
            <summary>
            Starts the live display.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="func">The action to execute.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Spectre.Console.LiveDisplay.StartAsync(System.Func{Spectre.Console.LiveDisplayContext,System.Threading.Tasks.Task})">
            <summary>
            Starts the live display.
            </summary>
            <param name="func">The action to execute.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Spectre.Console.LiveDisplay.StartAsync``1(System.Func{Spectre.Console.LiveDisplayContext,System.Threading.Tasks.Task{``0}})">
            <summary>
            Starts the live display.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="func">The action to execute.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Spectre.Console.LiveDisplayContext">
            <summary>
            Represents a context that can be used to interact with a <see cref="T:Spectre.Console.LiveDisplay"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.LiveDisplayContext.UpdateTarget(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Updates the live display target.
            </summary>
            <param name="target">The new live display target.</param>
        </member>
        <member name="M:Spectre.Console.LiveDisplayContext.Refresh">
            <summary>
            Refreshes the live display.
            </summary>
        </member>
        <member name="T:Spectre.Console.DownloadedColumn">
            <summary>
            A column showing download progress.
            </summary>
        </member>
        <member name="P:Spectre.Console.DownloadedColumn.Culture">
            <summary>
            Gets or sets the <see cref="T:System.Globalization.CultureInfo"/> to use.
            </summary>
        </member>
        <member name="M:Spectre.Console.DownloadedColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.ElapsedTimeColumn">
            <summary>
            A column showing the elapsed time of a task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ElapsedTimeColumn.NoWrap">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.ElapsedTimeColumn.Style">
            <summary>
            Gets or sets the style of the remaining time text.
            </summary>
        </member>
        <member name="M:Spectre.Console.ElapsedTimeColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.ElapsedTimeColumn.GetColumnWidth(Spectre.Console.Rendering.RenderOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.PercentageColumn">
            <summary>
            A column showing task progress in percentage.
            </summary>
        </member>
        <member name="P:Spectre.Console.PercentageColumn.Style">
            <summary>
            Gets or sets the style for a non-complete task.
            </summary>
        </member>
        <member name="P:Spectre.Console.PercentageColumn.CompletedStyle">
            <summary>
            Gets or sets the style for a completed task.
            </summary>
        </member>
        <member name="M:Spectre.Console.PercentageColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.PercentageColumn.GetColumnWidth(Spectre.Console.Rendering.RenderOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.ProgressBarColumn">
            <summary>
            A column showing task progress as a progress bar.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressBarColumn.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressBarColumn.CompletedStyle">
            <summary>
            Gets or sets the style of completed portions of the progress bar.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressBarColumn.FinishedStyle">
            <summary>
            Gets or sets the style of a finished progress bar.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressBarColumn.RemainingStyle">
            <summary>
            Gets or sets the style of remaining portions of the progress bar.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressBarColumn.IndeterminateStyle">
            <summary>
            Gets or sets the style of an indeterminate progress bar.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressBarColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.RemainingTimeColumn">
            <summary>
            A column showing the remaining time of a task.
            </summary>
        </member>
        <member name="P:Spectre.Console.RemainingTimeColumn.NoWrap">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.RemainingTimeColumn.Style">
            <summary>
            Gets or sets the style of the remaining time text.
            </summary>
        </member>
        <member name="M:Spectre.Console.RemainingTimeColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.RemainingTimeColumn.GetColumnWidth(Spectre.Console.Rendering.RenderOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.SpinnerColumn">
            <summary>
            A column showing a spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.SpinnerColumn.NoWrap">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.SpinnerColumn.Spinner">
            <summary>
            Gets or sets the <see cref="T:Spectre.Console.Spinner"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.SpinnerColumn.CompletedText">
            <summary>
            Gets or sets the text that should be shown instead
            of the spinner once a task completes.
            </summary>
        </member>
        <member name="P:Spectre.Console.SpinnerColumn.PendingText">
            <summary>
            Gets or sets the text that should be shown instead
            of the spinner before a task begins.
            </summary>
        </member>
        <member name="P:Spectre.Console.SpinnerColumn.CompletedStyle">
            <summary>
            Gets or sets the completed style.
            </summary>
        </member>
        <member name="P:Spectre.Console.SpinnerColumn.PendingStyle">
            <summary>
            Gets or sets the pending style.
            </summary>
        </member>
        <member name="P:Spectre.Console.SpinnerColumn.Style">
            <summary>
            Gets or sets the style of the spinner.
            </summary>
        </member>
        <member name="M:Spectre.Console.SpinnerColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.SpinnerColumn"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.SpinnerColumn.#ctor(Spectre.Console.Spinner)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.SpinnerColumn"/> class.
            </summary>
            <param name="spinner">The spinner to use.</param>
        </member>
        <member name="M:Spectre.Console.SpinnerColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.SpinnerColumn.GetColumnWidth(Spectre.Console.Rendering.RenderOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.TaskDescriptionColumn">
            <summary>
            A column showing the task description.
            </summary>
        </member>
        <member name="P:Spectre.Console.TaskDescriptionColumn.NoWrap">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.TaskDescriptionColumn.Alignment">
            <summary>
            Gets or sets the alignment of the task description.
            </summary>
        </member>
        <member name="M:Spectre.Console.TaskDescriptionColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.TransferSpeedColumn">
            <summary>
            A column showing transfer speed.
            </summary>
        </member>
        <member name="P:Spectre.Console.TransferSpeedColumn.Culture">
            <summary>
            Gets or sets the <see cref="T:System.Globalization.CultureInfo"/> to use.
            </summary>
        </member>
        <member name="M:Spectre.Console.TransferSpeedColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Progress">
            <summary>
            Represents a task list.
            </summary>
        </member>
        <member name="P:Spectre.Console.Progress.AutoRefresh">
            <summary>
            Gets or sets a value indicating whether or not task list should auto refresh.
            Defaults to <c>true</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Progress.AutoClear">
            <summary>
            Gets or sets a value indicating whether or not the task list should
            be cleared once it completes.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Progress.HideCompleted">
            <summary>
            Gets or sets a value indicating whether or not the task list should
            only include tasks not completed
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Progress.RefreshRate">
            <summary>
            Gets or sets the refresh rate if <c>AutoRefresh</c> is enabled.
            Defaults to 10 times/second.
            </summary>
        </member>
        <member name="M:Spectre.Console.Progress.#ctor(Spectre.Console.IAnsiConsole)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Progress"/> class.
            </summary>
            <param name="console">The console to render to.</param>
        </member>
        <member name="M:Spectre.Console.Progress.Start(System.Action{Spectre.Console.ProgressContext})">
            <summary>
            Starts the progress task list.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Spectre.Console.Progress.Start``1(System.Func{Spectre.Console.ProgressContext,``0})">
            <summary>
            Starts the progress task list and returns a result.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="func">he action to execute.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Spectre.Console.Progress.StartAsync(System.Func{Spectre.Console.ProgressContext,System.Threading.Tasks.Task})">
            <summary>
            Starts the progress task list.
            </summary>
            <param name="action">The action to execute.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Spectre.Console.Progress.StartAsync``1(System.Func{Spectre.Console.ProgressContext,System.Threading.Tasks.Task{``0}})">
            <summary>
            Starts the progress task list and returns a result.
            </summary>
            <param name="action">The action to execute.</param>
            <typeparam name="T">The result type of task.</typeparam>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Spectre.Console.ProgressColumn">
            <summary>
            Represents a progress column.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressColumn.NoWrap">
            <summary>
            Gets a value indicating whether or not content should not wrap.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressColumn.Render(Spectre.Console.Rendering.RenderOptions,Spectre.Console.ProgressTask,System.TimeSpan)">
            <summary>
            Gets a renderable representing the column.
            </summary>
            <param name="options">The render options.</param>
            <param name="task">The task.</param>
            <param name="deltaTime">The elapsed time since last call.</param>
            <returns>A renderable representing the column.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressColumn.GetColumnWidth(Spectre.Console.Rendering.RenderOptions)">
            <summary>
            Gets the width of the column.
            </summary>
            <param name="options">The render options.</param>
            <returns>The width of the column, or <c>null</c> to calculate.</returns>
        </member>
        <member name="T:Spectre.Console.ProgressContext">
            <summary>
            Represents a context that can be used to interact with a <see cref="T:Spectre.Console.Progress"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressContext.IsFinished">
            <summary>
            Gets a value indicating whether or not all started tasks have completed.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressContext.AddTask(System.String,System.Boolean,System.Double)">
            <summary>
            Adds a task.
            </summary>
            <param name="description">The task description.</param>
            <param name="autoStart">Whether or not the task should start immediately.</param>
            <param name="maxValue">The task's max value.</param>
            <returns>The newly created task.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressContext.AddTask(System.String,Spectre.Console.ProgressTaskSettings)">
            <summary>
            Adds a task.
            </summary>
            <param name="description">The task description.</param>
            <param name="settings">The task settings.</param>
            <returns>The newly created task.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressContext.Refresh">
            <summary>
            Refreshes the current progress.
            </summary>
        </member>
        <member name="T:Spectre.Console.ProgressTask">
            <summary>
            Represents a progress task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.Id">
            <summary>
            Gets the task ID.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.Description">
            <summary>
            Gets or sets the task description.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.MaxValue">
            <summary>
            Gets or sets the max value of the task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.Value">
            <summary>
            Gets or sets the value of the task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.StartTime">
            <summary>
            Gets the start time of the task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.StopTime">
            <summary>
            Gets the stop time of the task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.State">
            <summary>
            Gets the task state.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.IsStarted">
            <summary>
            Gets a value indicating whether or not the task has started.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.IsFinished">
            <summary>
            Gets a value indicating whether or not the task has finished.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.Percentage">
            <summary>
            Gets the percentage done of the task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.Speed">
            <summary>
            Gets the speed measured in steps/second.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.ElapsedTime">
            <summary>
            Gets the elapsed time.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.RemainingTime">
            <summary>
            Gets the remaining time.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTask.IsIndeterminate">
            <summary>
            Gets or sets a value indicating whether the ProgressBar shows
            actual values or generic, continuous progress feedback.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressTask.#ctor(System.Int32,System.String,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.ProgressTask"/> class.
            </summary>
            <param name="id">The task ID.</param>
            <param name="description">The task description.</param>
            <param name="maxValue">The task max value.</param>
            <param name="autoStart">Whether or not the task should start automatically.</param>
        </member>
        <member name="M:Spectre.Console.ProgressTask.StartTask">
            <summary>
            Starts the task.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressTask.StopTask">
            <summary>
            Stops and marks the task as finished.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressTask.Increment(System.Double)">
            <summary>
            Increments the task's value.
            </summary>
            <param name="value">The value to increment with.</param>
        </member>
        <member name="M:Spectre.Console.ProgressTask.System#IProgress{System#Double}#Report(System.Double)">
            <inheritdoc />
        </member>
        <member name="T:Spectre.Console.ProgressTaskSettings">
            <summary>
            Represents settings for a progress task.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTaskSettings.MaxValue">
            <summary>
            Gets or sets the task's max value.
            Defaults to <c>100</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTaskSettings.AutoStart">
            <summary>
            Gets or sets a value indicating whether or not the task
            will be auto started. Defaults to <c>true</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.ProgressTaskSettings.Default">
            <summary>
            Gets the default progress task settings.
            </summary>
        </member>
        <member name="T:Spectre.Console.ProgressTaskState">
            <summary>
            Represents progress task state.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressTaskState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.ProgressTaskState"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.ProgressTaskState.Get``1(System.String)">
            <summary>
            Gets the state value for the specified key.
            </summary>
            <typeparam name="T">The state value type.</typeparam>
            <param name="key">The state key.</param>
            <returns>The value for the specified key.</returns>
        </member>
        <member name="M:Spectre.Console.ProgressTaskState.Update``1(System.String,System.Func{``0,``0})">
            <summary>
            Updates a task state value.
            </summary>
            <typeparam name="T">The state value type.</typeparam>
            <param name="key">The key.</param>
            <param name="func">The transformation function.</param>
            <returns>The updated value.</returns>
        </member>
        <member name="T:Spectre.Console.Spinner">
            <summary>
            Represents a spinner used in a <see cref="T:Spectre.Console.SpinnerColumn"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Interval">
            <summary>
            Gets the update interval for the spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.IsUnicode">
            <summary>
            Gets a value indicating whether or not the spinner
            uses Unicode characters.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Frames">
            <summary>
            Gets the spinner frames.
            </summary>
        </member>
        <member name="T:Spectre.Console.Spinner.Known">
            <summary>
            Contains all predefined spinners.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Default">
            <summary>
            Gets the "Default" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Ascii">
            <summary>
            Gets the "Ascii" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots">
            <summary>
            Gets the "dots" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots2">
            <summary>
            Gets the "dots2" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots3">
            <summary>
            Gets the "dots3" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots4">
            <summary>
            Gets the "dots4" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots5">
            <summary>
            Gets the "dots5" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots6">
            <summary>
            Gets the "dots6" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots7">
            <summary>
            Gets the "dots7" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots8">
            <summary>
            Gets the "dots8" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots9">
            <summary>
            Gets the "dots9" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots10">
            <summary>
            Gets the "dots10" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots11">
            <summary>
            Gets the "dots11" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots12">
            <summary>
            Gets the "dots12" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dots8Bit">
            <summary>
            Gets the "dots8Bit" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Line">
            <summary>
            Gets the "line" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Line2">
            <summary>
            Gets the "line2" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Pipe">
            <summary>
            Gets the "pipe" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.SimpleDots">
            <summary>
            Gets the "simpleDots" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.SimpleDotsScrolling">
            <summary>
            Gets the "simpleDotsScrolling" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Star">
            <summary>
            Gets the "star" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Star2">
            <summary>
            Gets the "star2" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Flip">
            <summary>
            Gets the "flip" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Hamburger">
            <summary>
            Gets the "hamburger" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.GrowVertical">
            <summary>
            Gets the "growVertical" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.GrowHorizontal">
            <summary>
            Gets the "growHorizontal" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Balloon">
            <summary>
            Gets the "balloon" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Balloon2">
            <summary>
            Gets the "balloon2" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Noise">
            <summary>
            Gets the "noise" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Bounce">
            <summary>
            Gets the "bounce" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.BoxBounce">
            <summary>
            Gets the "boxBounce" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.BoxBounce2">
            <summary>
            Gets the "boxBounce2" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Triangle">
            <summary>
            Gets the "triangle" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Arc">
            <summary>
            Gets the "arc" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Circle">
            <summary>
            Gets the "circle" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.SquareCorners">
            <summary>
            Gets the "squareCorners" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.CircleQuarters">
            <summary>
            Gets the "circleQuarters" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.CircleHalves">
            <summary>
            Gets the "circleHalves" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Squish">
            <summary>
            Gets the "squish" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle">
            <summary>
            Gets the "toggle" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle2">
            <summary>
            Gets the "toggle2" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle3">
            <summary>
            Gets the "toggle3" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle4">
            <summary>
            Gets the "toggle4" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle5">
            <summary>
            Gets the "toggle5" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle6">
            <summary>
            Gets the "toggle6" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle7">
            <summary>
            Gets the "toggle7" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle8">
            <summary>
            Gets the "toggle8" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle9">
            <summary>
            Gets the "toggle9" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle10">
            <summary>
            Gets the "toggle10" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle11">
            <summary>
            Gets the "toggle11" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle12">
            <summary>
            Gets the "toggle12" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Toggle13">
            <summary>
            Gets the "toggle13" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Arrow">
            <summary>
            Gets the "arrow" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Arrow2">
            <summary>
            Gets the "arrow2" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Arrow3">
            <summary>
            Gets the "arrow3" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.BouncingBar">
            <summary>
            Gets the "bouncingBar" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.BouncingBall">
            <summary>
            Gets the "bouncingBall" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Smiley">
            <summary>
            Gets the "smiley" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Monkey">
            <summary>
            Gets the "monkey" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Hearts">
            <summary>
            Gets the "hearts" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Clock">
            <summary>
            Gets the "clock" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Earth">
            <summary>
            Gets the "earth" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Material">
            <summary>
            Gets the "material" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Moon">
            <summary>
            Gets the "moon" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Runner">
            <summary>
            Gets the "runner" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Pong">
            <summary>
            Gets the "pong" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Shark">
            <summary>
            Gets the "shark" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Dqpb">
            <summary>
            Gets the "dqpb" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Weather">
            <summary>
            Gets the "weather" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Christmas">
            <summary>
            Gets the "christmas" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Grenade">
            <summary>
            Gets the "grenade" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Point">
            <summary>
            Gets the "point" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Layer">
            <summary>
            Gets the "layer" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.BetaWave">
            <summary>
            Gets the "betaWave" spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Spinner.Known.Aesthetic">
            <summary>
            Gets the "aesthetic" spinner.
            </summary>
        </member>
        <member name="T:Spectre.Console.Status">
            <summary>
            Represents a status display.
            </summary>
        </member>
        <member name="P:Spectre.Console.Status.Spinner">
            <summary>
            Gets or sets the spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.Status.SpinnerStyle">
            <summary>
            Gets or sets the spinner style.
            </summary>
        </member>
        <member name="P:Spectre.Console.Status.AutoRefresh">
            <summary>
            Gets or sets a value indicating whether or not status
            should auto refresh. Defaults to <c>true</c>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Status.#ctor(Spectre.Console.IAnsiConsole)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Status"/> class.
            </summary>
            <param name="console">The console.</param>
        </member>
        <member name="M:Spectre.Console.Status.Start(System.String,System.Action{Spectre.Console.StatusContext})">
            <summary>
            Starts a new status display.
            </summary>
            <param name="status">The status to display.</param>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Spectre.Console.Status.Start``1(System.String,System.Func{Spectre.Console.StatusContext,``0})">
            <summary>
            Starts a new status display.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="status">The status to display.</param>
            <param name="func">The action to execute.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Spectre.Console.Status.StartAsync(System.String,System.Func{Spectre.Console.StatusContext,System.Threading.Tasks.Task})">
            <summary>
            Starts a new status display.
            </summary>
            <param name="status">The status to display.</param>
            <param name="action">The action to execute.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Spectre.Console.Status.StartAsync``1(System.String,System.Func{Spectre.Console.StatusContext,System.Threading.Tasks.Task{``0}})">
            <summary>
            Starts a new status display and returns a result.
            </summary>
            <typeparam name="T">The result type of task.</typeparam>
            <param name="status">The status to display.</param>
            <param name="func">The action to execute.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Spectre.Console.StatusContext">
            <summary>
            Represents a context that can be used to interact with a <see cref="P:Spectre.Console.StatusContext.Status"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.StatusContext.Status">
            <summary>
            Gets or sets the current status.
            </summary>
        </member>
        <member name="P:Spectre.Console.StatusContext.Spinner">
            <summary>
            Gets or sets the current spinner.
            </summary>
        </member>
        <member name="P:Spectre.Console.StatusContext.SpinnerStyle">
            <summary>
            Gets or sets the current spinner style.
            </summary>
        </member>
        <member name="M:Spectre.Console.StatusContext.Refresh">
            <summary>
            Refreshes the status.
            </summary>
        </member>
        <member name="T:Spectre.Console.Overflow">
            <summary>
            Represents text overflow.
            </summary>
        </member>
        <member name="F:Spectre.Console.Overflow.Fold">
            <summary>
            Put any excess characters on the next line.
            </summary>
        </member>
        <member name="F:Spectre.Console.Overflow.Crop">
            <summary>
            Truncates the text at the end of the line.
            </summary>
        </member>
        <member name="F:Spectre.Console.Overflow.Ellipsis">
            <summary>
            Truncates the text at the end of the line and
            also inserts an ellipsis character.
            </summary>
        </member>
        <member name="T:Spectre.Console.Padding">
            <summary>
            Represents padding.
            </summary>
        </member>
        <member name="P:Spectre.Console.Padding.Left">
            <summary>
            Gets the left padding.
            </summary>
        </member>
        <member name="P:Spectre.Console.Padding.Top">
            <summary>
            Gets the top padding.
            </summary>
        </member>
        <member name="P:Spectre.Console.Padding.Right">
            <summary>
            Gets the right padding.
            </summary>
        </member>
        <member name="P:Spectre.Console.Padding.Bottom">
            <summary>
            Gets the bottom padding.
            </summary>
        </member>
        <member name="M:Spectre.Console.Padding.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Padding"/> struct.
            </summary>
            <param name="size">The padding for all sides.</param>
        </member>
        <member name="M:Spectre.Console.Padding.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Padding"/> struct.
            </summary>
            <param name="horizontal">The left and right padding.</param>
            <param name="vertical">The top and bottom padding.</param>
        </member>
        <member name="M:Spectre.Console.Padding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Padding"/> struct.
            </summary>
            <param name="left">The left padding.</param>
            <param name="top">The top padding.</param>
            <param name="right">The right padding.</param>
            <param name="bottom">The bottom padding.</param>
        </member>
        <member name="M:Spectre.Console.Padding.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Padding.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Padding.Equals(Spectre.Console.Padding)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Padding.op_Equality(Spectre.Console.Padding,Spectre.Console.Padding)">
            <summary>
            Checks if two <see cref="T:Spectre.Console.Padding"/> instances are equal.
            </summary>
            <param name="left">The first <see cref="T:Spectre.Console.Padding"/> instance to compare.</param>
            <param name="right">The second <see cref="T:Spectre.Console.Padding"/> instance to compare.</param>
            <returns><c>true</c> if the two instances are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.Padding.op_Inequality(Spectre.Console.Padding,Spectre.Console.Padding)">
            <summary>
            Checks if two <see cref="T:Spectre.Console.Padding"/> instances are not equal.
            </summary>
            <param name="left">The first <see cref="T:Spectre.Console.Padding"/> instance to compare.</param>
            <param name="right">The second <see cref="T:Spectre.Console.Padding"/> instance to compare.</param>
            <returns><c>true</c> if the two instances are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.Padding.GetWidth">
            <summary>
            Gets the padding width.
            </summary>
            <returns>The padding width.</returns>
        </member>
        <member name="M:Spectre.Console.Padding.GetHeight">
            <summary>
            Gets the padding height.
            </summary>
            <returns>The padding height.</returns>
        </member>
        <member name="T:Spectre.Console.Profile">
            <summary>
            Represents a console profile.
            </summary>
        </member>
        <member name="P:Spectre.Console.Profile.Enrichers">
            <summary>
            Gets the enrichers used to build this profile.
            </summary>
        </member>
        <member name="P:Spectre.Console.Profile.Out">
            <summary>
            Gets or sets the out buffer.
            </summary>
        </member>
        <member name="P:Spectre.Console.Profile.Encoding">
            <summary>
            Gets or sets the console output encoding.
            </summary>
        </member>
        <member name="P:Spectre.Console.Profile.Width">
            <summary>
            Gets or sets an explicit console width.
            </summary>
        </member>
        <member name="P:Spectre.Console.Profile.Height">
            <summary>
            Gets or sets an explicit console height.
            </summary>
        </member>
        <member name="P:Spectre.Console.Profile.Capabilities">
            <summary>
            Gets or sets the capabilities of the profile.
            </summary>
        </member>
        <member name="M:Spectre.Console.Profile.#ctor(Spectre.Console.IAnsiConsoleOutput,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Profile"/> class.
            </summary>
            <param name="out">The output buffer.</param>
            <param name="encoding">The output encoding.</param>
        </member>
        <member name="M:Spectre.Console.Profile.Supports(Spectre.Console.ColorSystem)">
            <summary>
            Checks whether the current profile supports
            the specified color system.
            </summary>
            <param name="colorSystem">The color system to check.</param>
            <returns><c>true</c> if the color system is supported, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Spectre.Console.ConfirmationPrompt">
            <summary>
            A prompt that is answered with a yes or no.
            </summary>
        </member>
        <member name="P:Spectre.Console.ConfirmationPrompt.Yes">
            <summary>
            Gets or sets the character that represents "yes".
            </summary>
        </member>
        <member name="P:Spectre.Console.ConfirmationPrompt.No">
            <summary>
            Gets or sets the character that represents "no".
            </summary>
        </member>
        <member name="P:Spectre.Console.ConfirmationPrompt.DefaultValue">
            <summary>
            Gets or sets a value indicating whether "yes" is the default answer.
            </summary>
        </member>
        <member name="P:Spectre.Console.ConfirmationPrompt.InvalidChoiceMessage">
            <summary>
            Gets or sets the message for invalid choices.
            </summary>
        </member>
        <member name="P:Spectre.Console.ConfirmationPrompt.ShowChoices">
            <summary>
            Gets or sets a value indicating whether or not
            choices should be shown.
            </summary>
        </member>
        <member name="P:Spectre.Console.ConfirmationPrompt.ShowDefaultValue">
            <summary>
            Gets or sets a value indicating whether or not
            default values should be shown.
            </summary>
        </member>
        <member name="M:Spectre.Console.ConfirmationPrompt.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.ConfirmationPrompt"/> class.
            </summary>
            <param name="prompt">The prompt markup text.</param>
        </member>
        <member name="M:Spectre.Console.ConfirmationPrompt.Show(Spectre.Console.IAnsiConsole)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.ConfirmationPrompt.ShowAsync(Spectre.Console.IAnsiConsole,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.IMultiSelectionItem`1">
            <summary>
            Represent a multi selection prompt item.
            </summary>
            <typeparam name="T">The data type.</typeparam>
        </member>
        <member name="P:Spectre.Console.IMultiSelectionItem`1.IsSelected">
            <summary>
            Gets a value indicating whether or not this item is selected.
            </summary>
        </member>
        <member name="M:Spectre.Console.IMultiSelectionItem`1.Select">
            <summary>
            Selects the item.
            </summary>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.IPrompt`1">
            <summary>
            Represents a prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
        </member>
        <member name="M:Spectre.Console.IPrompt`1.Show(Spectre.Console.IAnsiConsole)">
            <summary>
            Shows the prompt.
            </summary>
            <param name="console">The console.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="M:Spectre.Console.IPrompt`1.ShowAsync(Spectre.Console.IAnsiConsole,System.Threading.CancellationToken)">
            <summary>
            Shows the prompt asynchronously.
            </summary>
            <param name="console">The console.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>The prompt input result.</returns>
        </member>
        <member name="T:Spectre.Console.ISelectionItem`1">
            <summary>
            Represent a selection item.
            </summary>
            <typeparam name="T">The data type.</typeparam>
        </member>
        <member name="M:Spectre.Console.ISelectionItem`1.AddChild(`0)">
            <summary>
            Adds a child to the item.
            </summary>
            <param name="child">The child to add.</param>
            <returns>A new <see cref="T:Spectre.Console.ISelectionItem`1"/> instance representing the child.</returns>
        </member>
        <member name="T:Spectre.Console.IListPromptStrategy`1">
            <summary>
            Represents a strategy for a list prompt.
            </summary>
            <typeparam name="T">The list data type.</typeparam>
        </member>
        <member name="M:Spectre.Console.IListPromptStrategy`1.HandleInput(System.ConsoleKeyInfo,Spectre.Console.ListPromptState{`0})">
            <summary>
            Handles any input received from the user.
            </summary>
            <param name="key">The key that was pressed.</param>
            <param name="state">The current state.</param>
            <returns>A result representing an action.</returns>
        </member>
        <member name="M:Spectre.Console.IListPromptStrategy`1.CalculatePageSize(Spectre.Console.IAnsiConsole,System.Int32,System.Int32)">
            <summary>
            Calculates the page size.
            </summary>
            <param name="console">The console.</param>
            <param name="totalItemCount">The total number of items.</param>
            <param name="requestedPageSize">The requested number of items to show.</param>
            <returns>The page size that should be used.</returns>
        </member>
        <member name="M:Spectre.Console.IListPromptStrategy`1.Render(Spectre.Console.IAnsiConsole,System.Boolean,System.Int32,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,Spectre.Console.ListPromptItem{`0}}})">
            <summary>
            Builds a <see cref="T:Spectre.Console.Rendering.IRenderable"/> from the current state.
            </summary>
            <param name="console">The console.</param>
            <param name="scrollable">Whether or not the list is scrollable.</param>
            <param name="cursorIndex">The cursor index.</param>
            <param name="items">The visible items.</param>
            <returns>A <see cref="T:Spectre.Console.Rendering.IRenderable"/> representing the items.</returns>
        </member>
        <member name="T:Spectre.Console.MultiSelectionPrompt`1">
            <summary>
            Represents a multi selection list prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.PageSize">
            <summary>
            Gets or sets the page size.
            Defaults to <c>10</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.WrapAround">
            <summary>
            Gets or sets a value indicating whether the selection should wrap around when reaching the edge.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.HighlightStyle">
            <summary>
            Gets or sets the highlight style of the selected choice.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.Converter">
            <summary>
            Gets or sets the converter to get the display string for a choice. By default
            the corresponding <see cref="T:System.ComponentModel.TypeConverter"/> is used.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.Required">
            <summary>
            Gets or sets a value indicating whether or not
            at least one selection is required.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.MoreChoicesText">
            <summary>
            Gets or sets the text that will be displayed if there are more choices to show.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.InstructionsText">
            <summary>
            Gets or sets the text that instructs the user of how to select items.
            </summary>
        </member>
        <member name="P:Spectre.Console.MultiSelectionPrompt`1.Mode">
            <summary>
            Gets or sets the selection mode.
            Defaults to <see cref="F:Spectre.Console.SelectionMode.Leaf"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.MultiSelectionPrompt`1"/> class.
            </summary>
            <param name="comparer">
            The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use when comparing items,
            or <c>null</c> to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for the type of the item.
            </param>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.AddChoice(`0)">
            <summary>
            Adds a choice.
            </summary>
            <param name="item">The item to add.</param>
            <returns>A <see cref="T:Spectre.Console.IMultiSelectionItem`1"/> so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.Show(Spectre.Console.IAnsiConsole)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.ShowAsync(Spectre.Console.IAnsiConsole,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.GetParents(`0)">
            <summary>
            Returns all parent items of the given <paramref name="item"/>.
            </summary>
            <param name="item">The item for which to find the parents.</param>
            <returns>The parent items, or an empty list, if the given item has no parents.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.GetParent(`0)">
            <summary>
            Returns the parent item of the given <paramref name="item"/>.
            </summary>
            <param name="item">The item for which to find the parent.</param>
            <returns>The parent item, or <c>null</c> if the given item has no parent.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.Spectre#Console#IListPromptStrategy{T}#HandleInput(System.ConsoleKeyInfo,Spectre.Console.ListPromptState{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.Spectre#Console#IListPromptStrategy{T}#CalculatePageSize(Spectre.Console.IAnsiConsole,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPrompt`1.Spectre#Console#IListPromptStrategy{T}#Render(Spectre.Console.IAnsiConsole,System.Boolean,System.Int32,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,Spectre.Console.ListPromptItem{`0}}})">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.MultiSelectionPromptExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.MultiSelectionPrompt`1"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.Mode``1(Spectre.Console.MultiSelectionPrompt{``0},Spectre.Console.SelectionMode)">
            <summary>
            Sets the selection mode.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="mode">The selection mode.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.AddChoices``1(Spectre.Console.MultiSelectionPrompt{``0},``0,System.Action{Spectre.Console.IMultiSelectionItem{``0}})">
            <summary>
            Adds a choice.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="choice">The choice to add.</param>
            <param name="configurator">The configurator for the choice.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.AddChoices``1(Spectre.Console.MultiSelectionPrompt{``0},``0[])">
            <summary>
            Adds multiple choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.AddChoices``1(Spectre.Console.MultiSelectionPrompt{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds multiple choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.AddChoiceGroup``1(Spectre.Console.MultiSelectionPrompt{``0},``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds multiple grouped choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="group">The group.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.AddChoiceGroup``1(Spectre.Console.MultiSelectionPrompt{``0},``0,``0[])">
            <summary>
            Adds multiple grouped choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="group">The group.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.Select``1(Spectre.Console.MultiSelectionPrompt{``0},``0)">
            <summary>
            Marks an item as selected.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="item">The item to select.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.Title``1(Spectre.Console.MultiSelectionPrompt{``0},System.String)">
            <summary>
            Sets the title.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="title">The title markup text.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.PageSize``1(Spectre.Console.MultiSelectionPrompt{``0},System.Int32)">
            <summary>
            Sets how many choices that are displayed to the user.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="pageSize">The number of choices that are displayed to the user.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.WrapAround``1(Spectre.Console.MultiSelectionPrompt{``0},System.Boolean)">
            <summary>
            Sets whether the selection should wrap around when reaching its edges.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="shouldWrap">Whether the selection should wrap around.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.HighlightStyle``1(Spectre.Console.MultiSelectionPrompt{``0},Spectre.Console.Style)">
            <summary>
            Sets the highlight style of the selected choice.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="highlightStyle">The highlight style of the selected choice.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.MoreChoicesText``1(Spectre.Console.MultiSelectionPrompt{``0},System.String)">
            <summary>
            Sets the text that will be displayed if there are more choices to show.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="text">The text to display.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.InstructionsText``1(Spectre.Console.MultiSelectionPrompt{``0},System.String)">
            <summary>
            Sets the text that instructs the user of how to select items.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="text">The text to display.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.NotRequired``1(Spectre.Console.MultiSelectionPrompt{``0})">
            <summary>
            Requires no choice to be selected.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.Required``1(Spectre.Console.MultiSelectionPrompt{``0})">
            <summary>
            Requires a choice to be selected.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.Required``1(Spectre.Console.MultiSelectionPrompt{``0},System.Boolean)">
            <summary>
            Sets a value indicating whether or not at least one choice must be selected.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="required">Whether or not at least one choice must be selected.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.MultiSelectionPromptExtensions.UseConverter``1(Spectre.Console.MultiSelectionPrompt{``0},System.Func{``0,System.String})">
            <summary>
            Sets the function to create a display string for a given choice.
            </summary>
            <typeparam name="T">The prompt type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="displaySelector">The function to get a display string for a given choice.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.SelectionPrompt`1">
            <summary>
            Represents a single list prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.PageSize">
            <summary>
            Gets or sets the page size.
            Defaults to <c>10</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.WrapAround">
            <summary>
            Gets or sets a value indicating whether the selection should wrap around when reaching the edge.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.HighlightStyle">
            <summary>
            Gets or sets the highlight style of the selected choice.
            </summary>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.DisabledStyle">
            <summary>
            Gets or sets the style of a disabled choice.
            </summary>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.Converter">
            <summary>
            Gets or sets the converter to get the display string for a choice. By default
            the corresponding <see cref="T:System.ComponentModel.TypeConverter"/> is used.
            </summary>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.MoreChoicesText">
            <summary>
            Gets or sets the text that will be displayed if there are more choices to show.
            </summary>
        </member>
        <member name="P:Spectre.Console.SelectionPrompt`1.Mode">
            <summary>
            Gets or sets the selection mode.
            Defaults to <see cref="F:Spectre.Console.SelectionMode.Leaf"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.SelectionPrompt`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.SelectionPrompt`1"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.SelectionPrompt`1.AddChoice(`0)">
            <summary>
            Adds a choice.
            </summary>
            <param name="item">The item to add.</param>
            <returns>A <see cref="T:Spectre.Console.ISelectionItem`1"/> so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPrompt`1.Show(Spectre.Console.IAnsiConsole)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.SelectionPrompt`1.ShowAsync(Spectre.Console.IAnsiConsole,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.SelectionPrompt`1.Spectre#Console#IListPromptStrategy{T}#HandleInput(System.ConsoleKeyInfo,Spectre.Console.ListPromptState{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.SelectionPrompt`1.Spectre#Console#IListPromptStrategy{T}#CalculatePageSize(Spectre.Console.IAnsiConsole,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.SelectionPrompt`1.Spectre#Console#IListPromptStrategy{T}#Render(Spectre.Console.IAnsiConsole,System.Boolean,System.Int32,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,Spectre.Console.ListPromptItem{`0}}})">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.SelectionPromptExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.SelectionPrompt`1"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.Mode``1(Spectre.Console.SelectionPrompt{``0},Spectre.Console.SelectionMode)">
            <summary>
            Sets the selection mode.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="mode">The selection mode.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.AddChoices``1(Spectre.Console.SelectionPrompt{``0},``0[])">
            <summary>
            Adds multiple choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.AddChoices``1(Spectre.Console.SelectionPrompt{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds multiple choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.AddChoiceGroup``1(Spectre.Console.SelectionPrompt{``0},``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds multiple grouped choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="group">The group.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.AddChoiceGroup``1(Spectre.Console.SelectionPrompt{``0},``0,``0[])">
            <summary>
            Adds multiple grouped choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="group">The group.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.Title``1(Spectre.Console.SelectionPrompt{``0},System.String)">
            <summary>
            Sets the title.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="title">The title markup text.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.PageSize``1(Spectre.Console.SelectionPrompt{``0},System.Int32)">
            <summary>
            Sets how many choices that are displayed to the user.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="pageSize">The number of choices that are displayed to the user.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.WrapAround``1(Spectre.Console.SelectionPrompt{``0},System.Boolean)">
            <summary>
            Sets whether the selection should wrap around when reaching its edges.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="shouldWrap">Whether the selection should wrap around.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.HighlightStyle``1(Spectre.Console.SelectionPrompt{``0},Spectre.Console.Style)">
            <summary>
            Sets the highlight style of the selected choice.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="highlightStyle">The highlight style of the selected choice.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.MoreChoicesText``1(Spectre.Console.SelectionPrompt{``0},System.String)">
            <summary>
            Sets the text that will be displayed if there are more choices to show.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="text">The text to display.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.SelectionPromptExtensions.UseConverter``1(Spectre.Console.SelectionPrompt{``0},System.Func{``0,System.String})">
            <summary>
            Sets the function to create a display string for a given choice.
            </summary>
            <typeparam name="T">The prompt type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="displaySelector">The function to get a display string for a given choice.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.SelectionMode">
            <summary>
            Represents how selections are made in a hierarchical prompt.
            </summary>
        </member>
        <member name="F:Spectre.Console.SelectionMode.Leaf">
            <summary>
            Will only return lead nodes in results.
            </summary>
        </member>
        <member name="F:Spectre.Console.SelectionMode.Independent">
            <summary>
            Allows selection of parent nodes, but each node
            is independent of its parent and children.
            </summary>
        </member>
        <member name="T:Spectre.Console.TextPrompt`1">
            <summary>
            Represents a prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.PromptStyle">
            <summary>
            Gets or sets the prompt style.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.Choices">
            <summary>
            Gets the list of choices.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.Culture">
            <summary>
            Gets or sets the culture to use when converting input to object.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.InvalidChoiceMessage">
            <summary>
            Gets or sets the message for invalid choices.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.IsSecret">
            <summary>
            Gets or sets a value indicating whether input should
            be hidden in the console.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.Mask">
            <summary>
            Gets or sets the character to use while masking
            a secret prompt.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.ValidationErrorMessage">
            <summary>
            Gets or sets the validation error message.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.ShowChoices">
            <summary>
            Gets or sets a value indicating whether or not
            choices should be shown.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.ShowDefaultValue">
            <summary>
            Gets or sets a value indicating whether or not
            default values should be shown.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.AllowEmpty">
            <summary>
            Gets or sets a value indicating whether or not an empty result is valid.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.Converter">
            <summary>
            Gets or sets the converter to get the display string for a choice. By default
            the corresponding <see cref="T:System.ComponentModel.TypeConverter"/> is used.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.Validator">
            <summary>
            Gets or sets the validator.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.DefaultValueStyle">
            <summary>
            Gets or sets the style in which the default value is displayed.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.ChoicesStyle">
            <summary>
            Gets or sets the style in which the list of choices is displayed.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPrompt`1.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
        </member>
        <member name="M:Spectre.Console.TextPrompt`1.#ctor(System.String,System.StringComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.TextPrompt`1"/> class.
            </summary>
            <param name="prompt">The prompt markup text.</param>
            <param name="comparer">The comparer used for choices.</param>
        </member>
        <member name="M:Spectre.Console.TextPrompt`1.Show(Spectre.Console.IAnsiConsole)">
            <summary>
            Shows the prompt and requests input from the user.
            </summary>
            <param name="console">The console to show the prompt in.</param>
            <returns>The user input converted to the expected type.</returns>
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.TextPrompt`1.ShowAsync(Spectre.Console.IAnsiConsole,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.TextPrompt`1.WritePrompt(Spectre.Console.IAnsiConsole)">
            <summary>
            Writes the prompt to the console.
            </summary>
            <param name="console">The console to write the prompt to.</param>
        </member>
        <member name="T:Spectre.Console.TextPromptExtensions">
            <summary>
            Contains extension methods for <see cref="T:Spectre.Console.TextPrompt`1"/>.
            </summary>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.AllowEmpty``1(Spectre.Console.TextPrompt{``0})">
            <summary>
            Allow empty input.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.PromptStyle``1(Spectre.Console.TextPrompt{``0},Spectre.Console.Style)">
            <summary>
            Sets the prompt style.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="style">The prompt style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.ShowChoices``1(Spectre.Console.TextPrompt{``0},System.Boolean)">
            <summary>
            Show or hide choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="show">Whether or not choices should be visible.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.ShowChoices``1(Spectre.Console.TextPrompt{``0})">
            <summary>
            Shows choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.HideChoices``1(Spectre.Console.TextPrompt{``0})">
            <summary>
            Hides choices.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.ShowDefaultValue``1(Spectre.Console.TextPrompt{``0},System.Boolean)">
            <summary>
            Show or hide the default value.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="show">Whether or not the default value should be visible.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.ShowDefaultValue``1(Spectre.Console.TextPrompt{``0})">
            <summary>
            Shows the default value.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.HideDefaultValue``1(Spectre.Console.TextPrompt{``0})">
            <summary>
            Hides the default value.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.ValidationErrorMessage``1(Spectre.Console.TextPrompt{``0},System.String)">
            <summary>
            Sets the validation error message for the prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="message">The validation error message.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.InvalidChoiceMessage``1(Spectre.Console.TextPrompt{``0},System.String)">
            <summary>
            Sets the "invalid choice" message for the prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="message">The "invalid choice" message.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.DefaultValue``1(Spectre.Console.TextPrompt{``0},``0)">
            <summary>
            Sets the default value of the prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="value">The default value.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.Validate``1(Spectre.Console.TextPrompt{``0},System.Func{``0,System.Boolean},System.String)">
            <summary>
            Sets the validation criteria for the prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="validator">The validation criteria.</param>
            <param name="message">The validation error message.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.Validate``1(Spectre.Console.TextPrompt{``0},System.Func{``0,Spectre.Console.ValidationResult})">
            <summary>
            Sets the validation criteria for the prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="validator">The validation criteria.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.AddChoice``1(Spectre.Console.TextPrompt{``0},``0)">
            <summary>
            Adds a choice to the prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="choice">The choice to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.AddChoices``1(Spectre.Console.TextPrompt{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds multiple choices to the prompt.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="choices">The choices to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.Secret``1(Spectre.Console.TextPrompt{``0})">
            <summary>
            Replaces prompt user input with asterisks in the console.
            </summary>
            <typeparam name="T">The prompt type.</typeparam>
            <param name="obj">The prompt.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.Secret``1(Spectre.Console.TextPrompt{``0},System.Nullable{System.Char})">
            <summary>
            Replaces prompt user input with mask in the console.
            </summary>
            <typeparam name="T">The prompt type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="mask">The masking character to use for the secret.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.WithConverter``1(Spectre.Console.TextPrompt{``0},System.Func{``0,System.String})">
            <summary>
            Sets the function to create a display string for a given choice.
            </summary>
            <typeparam name="T">The prompt type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="displaySelector">The function to get a display string for a given choice.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.DefaultValueStyle``1(Spectre.Console.TextPrompt{``0},Spectre.Console.Style)">
            <summary>
            Sets the style in which the default value is displayed.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="style">The default value style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TextPromptExtensions.ChoicesStyle``1(Spectre.Console.TextPrompt{``0},Spectre.Console.Style)">
            <summary>
            Sets the style in which the list of choices is displayed.
            </summary>
            <typeparam name="T">The prompt result type.</typeparam>
            <param name="obj">The prompt.</param>
            <param name="style">The style to use for displaying the choices.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.ValidationResult">
            <summary>
            Represents a prompt validation result.
            </summary>
        </member>
        <member name="P:Spectre.Console.ValidationResult.Successful">
            <summary>
            Gets a value indicating whether or not validation was successful.
            </summary>
        </member>
        <member name="P:Spectre.Console.ValidationResult.Message">
            <summary>
            Gets the validation error message.
            </summary>
        </member>
        <member name="M:Spectre.Console.ValidationResult.Success">
            <summary>
            Returns a <see cref="T:Spectre.Console.ValidationResult"/> representing successful validation.
            </summary>
            <returns>The validation result.</returns>
        </member>
        <member name="M:Spectre.Console.ValidationResult.Error(System.String)">
            <summary>
            Returns a <see cref="T:Spectre.Console.ValidationResult"/> representing a validation error.
            </summary>
            <param name="message">The validation error message, or <c>null</c> to show the default validation error message.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="T:Spectre.Console.Recorder">
            <summary>
            A console recorder used to record output from a console.
            </summary>
        </member>
        <member name="P:Spectre.Console.Recorder.Profile">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Recorder.Cursor">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Recorder.Input">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Recorder.ExclusivityMode">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Recorder.Pipeline">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Recorder.#ctor(Spectre.Console.IAnsiConsole)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Recorder"/> class.
            </summary>
            <param name="console">The console to record output for.</param>
        </member>
        <member name="M:Spectre.Console.Recorder.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Recorder.Clear(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Recorder.Write(Spectre.Console.Rendering.IRenderable)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Recorder.Export(Spectre.Console.Rendering.IAnsiConsoleEncoder)">
            <summary>
            Exports the recorded data.
            </summary>
            <param name="encoder">The encoder.</param>
            <returns>The recorded data represented as a string.</returns>
        </member>
        <member name="T:Spectre.Console.Region">
            <summary>
            Represents a region.
            </summary>
        </member>
        <member name="P:Spectre.Console.Region.X">
            <summary>
            Gets the x-coordinate.
            </summary>
        </member>
        <member name="P:Spectre.Console.Region.Y">
            <summary>
            Gets the y-coordinate.
            </summary>
        </member>
        <member name="P:Spectre.Console.Region.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Spectre.Console.Region.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="M:Spectre.Console.Region.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Region"/> struct.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="T:Spectre.Console.Size">
            <summary>
            Represents a size.
            </summary>
        </member>
        <member name="P:Spectre.Console.Size.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Spectre.Console.Size.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="M:Spectre.Console.Size.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Size"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="T:Spectre.Console.Style">
            <summary>
            Represents color and text decoration.
            </summary>
        </member>
        <member name="P:Spectre.Console.Style.Foreground">
            <summary>
            Gets the foreground color.
            </summary>
        </member>
        <member name="P:Spectre.Console.Style.Background">
            <summary>
            Gets the background color.
            </summary>
        </member>
        <member name="P:Spectre.Console.Style.Decoration">
            <summary>
            Gets the text decoration.
            </summary>
        </member>
        <member name="P:Spectre.Console.Style.Link">
            <summary>
            Gets the link associated with the style.
            </summary>
        </member>
        <member name="P:Spectre.Console.Style.Plain">
            <summary>
            Gets a <see cref="T:Spectre.Console.Style"/> with the
            default colors and without text decoration.
            </summary>
        </member>
        <member name="M:Spectre.Console.Style.#ctor(System.Nullable{Spectre.Console.Color},System.Nullable{Spectre.Console.Color},System.Nullable{Spectre.Console.Decoration},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Style"/> class.
            </summary>
            <param name="foreground">The foreground color.</param>
            <param name="background">The background color.</param>
            <param name="decoration">The text decoration.</param>
            <param name="link">The link.</param>
        </member>
        <member name="M:Spectre.Console.Style.WithForeground(Spectre.Console.Color)">
            <summary>
            Creates a new style from the specified foreground color.
            </summary>
            <param name="color">The foreground color.</param>
            <returns>A new <see cref="T:Spectre.Console.Style"/> with the specified foreground color.</returns>
        </member>
        <member name="M:Spectre.Console.Style.WithBackground(Spectre.Console.Color)">
            <summary>
            Creates a new style from the specified background color.
            </summary>
            <param name="color">The background color.</param>
            <returns>A new <see cref="T:Spectre.Console.Style"/> with the specified background color.</returns>
        </member>
        <member name="M:Spectre.Console.Style.WithDecoration(Spectre.Console.Decoration)">
            <summary>
            Creates a new style from the specified text decoration.
            </summary>
            <param name="decoration">The text decoration.</param>
            <returns>A new <see cref="T:Spectre.Console.Style"/> with the specified text decoration.</returns>
        </member>
        <member name="M:Spectre.Console.Style.WithLink(System.String)">
            <summary>
            Creates a new style from the specified link.
            </summary>
            <param name="link">The link.</param>
            <returns>A new <see cref="T:Spectre.Console.Style"/> with the specified link.</returns>
        </member>
        <member name="M:Spectre.Console.Style.Combine(Spectre.Console.Style)">
            <summary>
            Combines this style with another one.
            </summary>
            <param name="other">The item to combine with this.</param>
            <returns>A new style representing a combination of this and the other one.</returns>
        </member>
        <member name="M:Spectre.Console.Style.op_Implicit(System.String)~Spectre.Console.Style">
            <summary>
            Implicitly converts <see cref="T:System.String"/> into a <see cref="T:Spectre.Console.Style"/>.
            </summary>
            <param name="style">The style string.</param>
        </member>
        <member name="M:Spectre.Console.Style.Parse(System.String)">
            <summary>
            Converts the string representation of a style to its <see cref="T:Spectre.Console.Style"/> equivalent.
            </summary>
            <param name="text">A string containing a style to parse.</param>
            <returns>A <see cref="T:Spectre.Console.Style"/> equivalent of the text contained in <paramref name="text"/>.</returns>
        </member>
        <member name="M:Spectre.Console.Style.TryParse(System.String,Spectre.Console.Style@)">
            <summary>
            Converts the string representation of a style to its <see cref="T:Spectre.Console.Style"/> equivalent.
            A return value indicates whether the operation succeeded.
            </summary>
            <param name="text">A string containing a style to parse.</param>
            <param name="result">
            When this method returns, contains the <see cref="T:Spectre.Console.Style"/> equivalent of the text contained in <paramref name="text"/>,
            if the conversion succeeded, or <c>null</c> if the conversion failed.
            </param>
            <returns><c>true</c> if s was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Spectre.Console.Style.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Style.ToMarkup">
            <summary>
            Returns the markup representation of this style.
            </summary>
            <returns>The markup representation of this style.</returns>
        </member>
        <member name="M:Spectre.Console.Style.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Style.Equals(Spectre.Console.Style)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.TableBorder">
            <summary>
            Represents a border.
            </summary>
            <summary>
            Represents a border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Visible">
            <summary>
            Gets a value indicating whether or not the border is visible.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.SafeBorder">
            <summary>
            Gets the safe border for this border or <c>null</c> if none exist.
            </summary>
        </member>
        <member name="M:Spectre.Console.TableBorder.GetPart(Spectre.Console.Rendering.TableBorderPart)">
            <summary>
            Gets the string representation of a specified table border part.
            </summary>
            <param name="part">The part to get the character representation for.</param>
            <returns>A character representation of the specified border part.</returns>
        </member>
        <member name="M:Spectre.Console.TableBorder.GetColumnRow(Spectre.Console.Rendering.TablePart,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{Spectre.Console.IColumn})">
            <summary>
            Gets a whole column row for the specific column row part.
            </summary>
            <param name="part">The column row part.</param>
            <param name="widths">The column widths.</param>
            <param name="columns">The columns.</param>
            <returns>A string representing the column row.</returns>
        </member>
        <member name="M:Spectre.Console.TableBorder.GetTableParts(Spectre.Console.Rendering.TablePart)">
            <summary>
            Gets the table parts used to render a specific table row.
            </summary>
            <param name="part">The table part.</param>
            <returns>The table parts used to render the specific table row.</returns>
        </member>
        <member name="P:Spectre.Console.TableBorder.None">
            <summary>
            Gets an invisible border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Ascii">
            <summary>
            Gets an ASCII border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Ascii2">
            <summary>
            Gets an ASCII border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.AsciiDoubleHead">
            <summary>
            Gets an ASCII border with a double header border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Square">
            <summary>
            Gets a square border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Rounded">
            <summary>
            Gets a rounded border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Minimal">
            <summary>
            Gets a minimal border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.MinimalHeavyHead">
            <summary>
            Gets a minimal border with a heavy head.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.MinimalDoubleHead">
            <summary>
            Gets a minimal border with a double header border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Simple">
            <summary>
            Gets a simple border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.SimpleHeavy">
            <summary>
            Gets a simple border with heavy lines.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Horizontal">
            <summary>
            Gets a horizontal border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Heavy">
            <summary>
            Gets a heavy border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.HeavyEdge">
            <summary>
            Gets a border with a heavy edge.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.HeavyHead">
            <summary>
            Gets a border with a heavy header.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Double">
            <summary>
            Gets a double border.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.DoubleEdge">
            <summary>
            Gets a border with a double edge.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableBorder.Markdown">
            <summary>
            Gets a markdown border.
            </summary>
        </member>
        <member name="T:Spectre.Console.TreeGuide">
            <summary>
            Represents tree guide lines.
            </summary>
            <summary>
            Represents tree guide lines.
            </summary>
        </member>
        <member name="P:Spectre.Console.TreeGuide.SafeTreeGuide">
            <summary>
            Gets the safe guide lines or <c>null</c> if none exist.
            </summary>
        </member>
        <member name="M:Spectre.Console.TreeGuide.GetPart(Spectre.Console.Rendering.TreeGuidePart)">
            <summary>
            Get the set of characters used to render the corresponding <see cref="T:Spectre.Console.Rendering.TreeGuidePart"/>.
            </summary>
            <param name="part">The part of the tree to get rendering string for.</param>
            <returns>Rendering string for the tree part.</returns>
        </member>
        <member name="P:Spectre.Console.TreeGuide.Ascii">
            <summary>
            Gets an <see cref="T:Spectre.Console.Rendering.AsciiTreeGuide"/> instance.
            </summary>
        </member>
        <member name="P:Spectre.Console.TreeGuide.Line">
            <summary>
            Gets a <see cref="T:Spectre.Console.Rendering.LineTreeGuide"/> instance.
            </summary>
        </member>
        <member name="P:Spectre.Console.TreeGuide.DoubleLine">
            <summary>
            Gets a <see cref="T:Spectre.Console.Rendering.DoubleLineTreeGuide"/> instance.
            </summary>
        </member>
        <member name="P:Spectre.Console.TreeGuide.BoldLine">
            <summary>
            Gets a <see cref="T:Spectre.Console.Rendering.BoldLineTreeGuide"/> instance.
            </summary>
        </member>
        <member name="T:Spectre.Console.VerticalAlignment">
            <summary>
            Represents vertical alignment.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalAlignment.Top">
            <summary>
            Top aligned.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalAlignment.Middle">
            <summary>
            Middle aligned.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalAlignment.Bottom">
            <summary>
            Bottom aligned.
            </summary>
        </member>
        <member name="T:Spectre.Console.VerticalOverflow">
            <summary>
            Represents vertical overflow.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalOverflow.Crop">
            <summary>
            Crop overflow.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalOverflow.Ellipsis">
            <summary>
            Add an ellipsis at the end.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalOverflow.Visible">
            <summary>
            Do not do anything about overflow.
            </summary>
        </member>
        <member name="T:Spectre.Console.VerticalOverflowCropping">
            <summary>
            Represent vertical overflow cropping.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalOverflowCropping.Top">
            <summary>
            Crops the top.
            </summary>
        </member>
        <member name="F:Spectre.Console.VerticalOverflowCropping.Bottom">
            <summary>
            Crops the bottom.
            </summary>
        </member>
        <member name="T:Spectre.Console.Align">
            <summary>
            Represents a renderable used to align content.
            </summary>
        </member>
        <member name="P:Spectre.Console.Align.Horizontal">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:Spectre.Console.Align.Vertical">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="P:Spectre.Console.Align.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Spectre.Console.Align.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="M:Spectre.Console.Align.#ctor(Spectre.Console.Rendering.IRenderable,Spectre.Console.HorizontalAlignment,System.Nullable{Spectre.Console.VerticalAlignment})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Align"/> class.
            </summary>
            <param name="renderable">The renderable to align.</param>
            <param name="horizontal">The horizontal alignment.</param>
            <param name="vertical">The vertical alignment, or <c>null</c> if none.</param>
        </member>
        <member name="M:Spectre.Console.Align.Left(Spectre.Console.Rendering.IRenderable,System.Nullable{Spectre.Console.VerticalAlignment})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Align"/> class that is left aligned.
            </summary>
            <param name="renderable">The <see cref="T:Spectre.Console.Rendering.IRenderable"/> to align.</param>
            <param name="vertical">The vertical alignment, or <c>null</c> if none.</param>
            <returns>A new <see cref="T:Spectre.Console.Align"/> object.</returns>
        </member>
        <member name="M:Spectre.Console.Align.Center(Spectre.Console.Rendering.IRenderable,System.Nullable{Spectre.Console.VerticalAlignment})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Align"/> class that is center aligned.
            </summary>
            <param name="renderable">The <see cref="T:Spectre.Console.Rendering.IRenderable"/> to align.</param>
            <param name="vertical">The vertical alignment, or <c>null</c> if none.</param>
            <returns>A new <see cref="T:Spectre.Console.Align"/> object.</returns>
        </member>
        <member name="M:Spectre.Console.Align.Right(Spectre.Console.Rendering.IRenderable,System.Nullable{Spectre.Console.VerticalAlignment})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Align"/> class that is right aligned.
            </summary>
            <param name="renderable">The <see cref="T:Spectre.Console.Rendering.IRenderable"/> to align.</param>
            <param name="vertical">The vertical alignment, or <c>null</c> if none.</param>
            <returns>A new <see cref="T:Spectre.Console.Align"/> object.</returns>
        </member>
        <member name="M:Spectre.Console.Align.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Calendar">
            <summary>
            A renderable calendar.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.Year">
            <summary>
            Gets or sets the calendar year.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.Month">
            <summary>
            Gets or sets the calendar month.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.Day">
            <summary>
            Gets or sets the calendar day.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.Border">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Calendar.UseSafeBorder">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Calendar.BorderStyle">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Calendar.Culture">
            <summary>
            Gets or sets the calendar's <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.HightlightStyle">
            <summary>
            Gets or sets the calendar's highlight <see cref="T:Spectre.Console.Style"/>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.ShowHeader">
            <summary>
            Gets or sets a value indicating whether or not the calendar header should be shown.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.HeaderStyle">
            <summary>
            Gets or sets the header style.
            </summary>
        </member>
        <member name="P:Spectre.Console.Calendar.Alignment">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Calendar.CalendarEvents">
            <summary>
            Gets a list containing all calendar events.
            </summary>
        </member>
        <member name="M:Spectre.Console.Calendar.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Calendar"/> class.
            </summary>
            <param name="date">The calendar date.</param>
        </member>
        <member name="M:Spectre.Console.Calendar.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Calendar"/> class.
            </summary>
            <param name="year">The calendar year.</param>
            <param name="month">The calendar month.</param>
        </member>
        <member name="M:Spectre.Console.Calendar.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Calendar"/> class.
            </summary>
            <param name="year">The calendar year.</param>
            <param name="month">The calendar month.</param>
            <param name="day">The calendar day.</param>
        </member>
        <member name="M:Spectre.Console.Calendar.Build">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.CalendarEvent">
            <summary>
            Represents a calendar event.
            </summary>
        </member>
        <member name="P:Spectre.Console.CalendarEvent.Description">
            <summary>
            Gets the description of the calendar event.
            </summary>
        </member>
        <member name="P:Spectre.Console.CalendarEvent.Year">
            <summary>
            Gets the year of the calendar event.
            </summary>
        </member>
        <member name="P:Spectre.Console.CalendarEvent.Month">
            <summary>
            Gets the month of the calendar event.
            </summary>
        </member>
        <member name="P:Spectre.Console.CalendarEvent.Day">
            <summary>
            Gets the day of the calendar event.
            </summary>
        </member>
        <member name="M:Spectre.Console.CalendarEvent.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.CalendarEvent"/> class.
            </summary>
            <param name="year">The year of the calendar event.</param>
            <param name="month">The month of the calendar event.</param>
            <param name="day">The day of the calendar event.</param>
        </member>
        <member name="M:Spectre.Console.CalendarEvent.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.CalendarEvent"/> class.
            </summary>
            <param name="description">The calendar event description.</param>
            <param name="year">The year of the calendar event.</param>
            <param name="month">The month of the calendar event.</param>
            <param name="day">The day of the calendar event.</param>
        </member>
        <member name="T:Spectre.Console.Canvas">
            <summary>
            Represents a renderable canvas.
            </summary>
        </member>
        <member name="P:Spectre.Console.Canvas.Width">
            <summary>
            Gets the width of the canvas.
            </summary>
        </member>
        <member name="P:Spectre.Console.Canvas.Height">
            <summary>
            Gets the height of the canvas.
            </summary>
        </member>
        <member name="P:Spectre.Console.Canvas.MaxWidth">
            <summary>
            Gets or sets the render width of the canvas.
            </summary>
        </member>
        <member name="P:Spectre.Console.Canvas.Scale">
            <summary>
            Gets or sets a value indicating whether or not
            to scale the canvas when rendering.
            </summary>
        </member>
        <member name="P:Spectre.Console.Canvas.PixelWidth">
            <summary>
            Gets or sets the pixel width.
            </summary>
        </member>
        <member name="M:Spectre.Console.Canvas.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Canvas"/> class.
            </summary>
            <param name="width">The canvas width.</param>
            <param name="height">The canvas height.</param>
        </member>
        <member name="M:Spectre.Console.Canvas.SetPixel(System.Int32,System.Int32,Spectre.Console.Color)">
            <summary>
            Sets a pixel with the specified color in the canvas at the specified location.
            </summary>
            <param name="x">The X coordinate for the pixel.</param>
            <param name="y">The Y coordinate for the pixel.</param>
            <param name="color">The pixel color.</param>
            <returns>The same <see cref="T:Spectre.Console.Canvas"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Canvas.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Canvas.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.BarChart">
            <summary>
            A renderable (horizontal) bar chart.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChart.Data">
            <summary>
            Gets the bar chart data.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChart.Width">
            <summary>
            Gets or sets the width of the bar chart.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChart.Label">
            <summary>
            Gets or sets the bar chart label.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChart.LabelAlignment">
            <summary>
            Gets or sets the bar chart label alignment.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChart.ShowValues">
            <summary>
            Gets or sets a value indicating whether or not
            values should be shown next to each bar.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChart.Culture">
            <summary>
            Gets or sets the culture that's used to format values.
            </summary>
            <remarks>Defaults to invariant culture.</remarks>
        </member>
        <member name="P:Spectre.Console.BarChart.MaxValue">
            <summary>
            Gets or sets the fixed max value for a bar chart.
            </summary>
            <remarks>Defaults to null, which corresponds to largest value in chart.</remarks>
        </member>
        <member name="M:Spectre.Console.BarChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.BarChart"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.BarChart.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.BarChart.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.BarChartItem">
            <summary>
            An item that's shown in a bar chart.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChartItem.Label">
            <summary>
            Gets the item label.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChartItem.Value">
            <summary>
            Gets the item value.
            </summary>
        </member>
        <member name="P:Spectre.Console.BarChartItem.Color">
            <summary>
            Gets the item color.
            </summary>
        </member>
        <member name="M:Spectre.Console.BarChartItem.#ctor(System.String,System.Double,System.Nullable{Spectre.Console.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.BarChartItem"/> class.
            </summary>
            <param name="label">The item label.</param>
            <param name="value">The item value.</param>
            <param name="color">The item color.</param>
        </member>
        <member name="T:Spectre.Console.BreakdownChart">
            <summary>
            A renderable breakdown chart.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.Data">
            <summary>
            Gets the breakdown chart data.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.Width">
            <summary>
            Gets or sets the width of the breakdown chart.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.ShowTags">
            <summary>
            Gets or sets a value indicating whether or not to show tags.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.ShowTagValues">
            <summary>
            Gets or sets a value indicating whether or not to show tag values.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.ValueFormatter">
            <summary>
            Gets or sets the tag value formatter.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.Compact">
            <summary>
            Gets or sets a value indicating whether or not the
            chart and tags should be rendered in compact mode.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.Culture">
            <summary>
            Gets or sets the <see cref="T:System.Globalization.CultureInfo"/> to use
            when rendering values.
            </summary>
            <remarks>Defaults to invariant culture.</remarks>
        </member>
        <member name="P:Spectre.Console.BreakdownChart.Expand">
            <summary>
            Gets or sets a value indicating whether or not the object should
            expand to the available space. If <c>false</c>, the object's
            width will be auto calculated.
            </summary>
        </member>
        <member name="M:Spectre.Console.BreakdownChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.BreakdownChart"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.BreakdownChart.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.BreakdownChart.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.BreakdownChartItem">
            <summary>
            An item that's shown in a breakdown chart.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChartItem.Label">
            <summary>
            Gets the item label.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChartItem.Value">
            <summary>
            Gets the item value.
            </summary>
        </member>
        <member name="P:Spectre.Console.BreakdownChartItem.Color">
            <summary>
            Gets the item color.
            </summary>
        </member>
        <member name="M:Spectre.Console.BreakdownChartItem.#ctor(System.String,System.Double,Spectre.Console.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.BreakdownChartItem"/> class.
            </summary>
            <param name="label">The item label.</param>
            <param name="value">The item value.</param>
            <param name="color">The item color.</param>
        </member>
        <member name="T:Spectre.Console.IBarChartItem">
            <summary>
            Represents a bar chart item.
            </summary>
        </member>
        <member name="P:Spectre.Console.IBarChartItem.Label">
            <summary>
            Gets the item label.
            </summary>
        </member>
        <member name="P:Spectre.Console.IBarChartItem.Value">
            <summary>
            Gets the item value.
            </summary>
        </member>
        <member name="P:Spectre.Console.IBarChartItem.Color">
            <summary>
            Gets the item color.
            </summary>
        </member>
        <member name="T:Spectre.Console.IBreakdownChartItem">
            <summary>
            Represents a breakdown chart item.
            </summary>
        </member>
        <member name="P:Spectre.Console.IBreakdownChartItem.Label">
            <summary>
            Gets the item label.
            </summary>
        </member>
        <member name="P:Spectre.Console.IBreakdownChartItem.Value">
            <summary>
            Gets the item value.
            </summary>
        </member>
        <member name="P:Spectre.Console.IBreakdownChartItem.Color">
            <summary>
            Gets the item color.
            </summary>
        </member>
        <member name="T:Spectre.Console.CircularTreeException">
            <summary>
            Indicates that the tree being rendered includes a cycle, and cannot be rendered.
            </summary>
        </member>
        <member name="T:Spectre.Console.Columns">
            <summary>
            Renders things in columns.
            </summary>
        </member>
        <member name="P:Spectre.Console.Columns.Padding">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Columns.Expand">
            <summary>
            Gets or sets a value indicating whether or not the columns should
            expand to the available space. If <c>false</c>, the column
            width will be auto calculated. Defaults to <c>true</c>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Columns.#ctor(Spectre.Console.Rendering.IRenderable[])">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Columns"/> class.
            </summary>
            <param name="items">The items to render as columns.</param>
        </member>
        <member name="M:Spectre.Console.Columns.#ctor(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Columns"/> class.
            </summary>
            <param name="items">The items to render as columns.</param>
        </member>
        <member name="M:Spectre.Console.Columns.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Columns"/> class.
            </summary>
            <param name="items">The items to render.</param>
        </member>
        <member name="M:Spectre.Console.Columns.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Columns.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.ExceptionFormats">
            <summary>
            Represents how an exception is formatted.
            </summary>
        </member>
        <member name="F:Spectre.Console.ExceptionFormats.Default">
            <summary>
            The default formatting.
            </summary>
        </member>
        <member name="F:Spectre.Console.ExceptionFormats.ShortenPaths">
            <summary>
            Whether or not paths should be shortened.
            </summary>
        </member>
        <member name="F:Spectre.Console.ExceptionFormats.ShortenTypes">
            <summary>
            Whether or not types should be shortened.
            </summary>
        </member>
        <member name="F:Spectre.Console.ExceptionFormats.ShortenMethods">
            <summary>
            Whether or not methods should be shortened.
            </summary>
        </member>
        <member name="F:Spectre.Console.ExceptionFormats.ShowLinks">
            <summary>
            Whether or not to show paths as links in the terminal.
            </summary>
        </member>
        <member name="F:Spectre.Console.ExceptionFormats.ShortenEverything">
            <summary>
            Shortens everything that can be shortened.
            </summary>
        </member>
        <member name="T:Spectre.Console.ExceptionSettings">
            <summary>
            Exception settings.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionSettings.Format">
            <summary>
            Gets or sets the exception format.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionSettings.Style">
            <summary>
            Gets or sets the exception style.
            </summary>
        </member>
        <member name="M:Spectre.Console.ExceptionSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.ExceptionSettings"/> class.
            </summary>
        </member>
        <member name="T:Spectre.Console.ExceptionStyle">
            <summary>
            Represent an exception style.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.Message">
            <summary>
            Gets or sets the message color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.Exception">
            <summary>
            Gets or sets the exception color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.Method">
            <summary>
            Gets or sets the method color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.ParameterType">
            <summary>
            Gets or sets the parameter type color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.ParameterName">
            <summary>
            Gets or sets the parameter name color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.Parenthesis">
            <summary>
            Gets or sets the parenthesis color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.Path">
            <summary>
            Gets or sets the path color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.LineNumber">
            <summary>
            Gets or sets the line number color.
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.Dimmed">
            <summary>
            Gets or sets the color for dimmed text such as "at" or "in".
            </summary>
        </member>
        <member name="P:Spectre.Console.ExceptionStyle.NonEmphasized">
            <summary>
            Gets or sets the color for non emphasized items.
            </summary>
        </member>
        <member name="M:Spectre.Console.TypeNameHelper.GetTypeDisplayName(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Pretty print a type name.
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <param name="fullName"><c>true</c> to print a fully qualified name.</param>
            <param name="includeGenericParameterNames"><c>true</c> to include generic parameter names.</param>
            <returns>The pretty printed type name.</returns>
        </member>
        <member name="T:Spectre.Console.FigletFont">
            <summary>
            Represents a FIGlet font.
            </summary>
        </member>
        <member name="P:Spectre.Console.FigletFont.Count">
            <summary>
            Gets the number of characters in the font.
            </summary>
        </member>
        <member name="P:Spectre.Console.FigletFont.Height">
            <summary>
            Gets the height of the font.
            </summary>
        </member>
        <member name="P:Spectre.Console.FigletFont.Baseline">
            <summary>
            Gets the font's baseline.
            </summary>
        </member>
        <member name="P:Spectre.Console.FigletFont.MaxWidth">
            <summary>
            Gets the font's maximum width.
            </summary>
        </member>
        <member name="P:Spectre.Console.FigletFont.Default">
            <summary>
            Gets the default FIGlet font.
            </summary>
        </member>
        <member name="M:Spectre.Console.FigletFont.Load(System.IO.Stream)">
            <summary>
            Loads a FIGlet font from the specified stream.
            </summary>
            <param name="stream">The stream to load the FIGlet font from.</param>
            <returns>The loaded FIGlet font.</returns>
        </member>
        <member name="M:Spectre.Console.FigletFont.Load(System.String)">
            <summary>
            Loads a FIGlet font from disk.
            </summary>
            <param name="path">The path of the FIGlet font to load.</param>
            <returns>The loaded FIGlet font.</returns>
        </member>
        <member name="M:Spectre.Console.FigletFont.Parse(System.String)">
            <summary>
            Parses a FIGlet font from the specified <see cref="T:System.String"/>.
            </summary>
            <param name="source">The FIGlet font source.</param>
            <returns>The parsed FIGlet font.</returns>
        </member>
        <member name="T:Spectre.Console.FigletText">
            <summary>
            Represents text rendered with a FIGlet font.
            </summary>
        </member>
        <member name="P:Spectre.Console.FigletText.Color">
            <summary>
            Gets or sets the color of the text.
            </summary>
        </member>
        <member name="P:Spectre.Console.FigletText.Justification">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.FigletText.Pad">
            <summary>
            Gets or sets a value indicating whether or not
            the right side should be padded.
            </summary>
            <remarks>Defaults to <c>false</c>.</remarks>
        </member>
        <member name="M:Spectre.Console.FigletText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.FigletText"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spectre.Console.FigletText.#ctor(Spectre.Console.FigletFont,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.FigletText"/> class.
            </summary>
            <param name="font">The FIGlet font to use.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spectre.Console.FigletText.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Grid">
            <summary>
            A renderable grid.
            </summary>
        </member>
        <member name="P:Spectre.Console.Grid.Columns">
            <summary>
            Gets the grid columns.
            </summary>
        </member>
        <member name="P:Spectre.Console.Grid.Rows">
            <summary>
            Gets the grid rows.
            </summary>
        </member>
        <member name="P:Spectre.Console.Grid.Expand">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Grid.Alignment">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Grid.Width">
            <summary>
            Gets or sets the width of the grid.
            </summary>
        </member>
        <member name="M:Spectre.Console.Grid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Grid"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.Grid.AddColumn">
            <summary>
            Adds a column to the grid.
            </summary>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Grid.AddColumn(Spectre.Console.GridColumn)">
            <summary>
            Adds a column to the grid.
            </summary>
            <param name="column">The column to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Grid.AddRow(Spectre.Console.Rendering.IRenderable[])">
            <summary>
            Adds a new row to the grid.
            </summary>
            <param name="columns">The columns to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Grid.HasDirtyChildren">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Grid.Build">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.GridColumn">
            <summary>
            Represents a grid column.
            </summary>
        </member>
        <member name="P:Spectre.Console.GridColumn.Spectre#Console#Rendering#IHasDirtyState#IsDirty">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.GridColumn.Width">
            <summary>
            Gets or sets the width of the column.
            If <c>null</c>, the column will adapt to its contents.
            </summary>
        </member>
        <member name="P:Spectre.Console.GridColumn.NoWrap">
            <summary>
            Gets or sets a value indicating whether wrapping of
            text within the column should be prevented.
            </summary>
        </member>
        <member name="P:Spectre.Console.GridColumn.Padding">
            <summary>
            Gets or sets the padding of the column.
            Vertical padding (top and bottom) is ignored.
            </summary>
        </member>
        <member name="P:Spectre.Console.GridColumn.Alignment">
            <summary>
            Gets or sets the alignment of the column.
            </summary>
        </member>
        <member name="P:Spectre.Console.GridColumn.HasExplicitPadding">
            <summary>
            Gets a value indicating whether the user
            has set an explicit padding for this column.
            </summary>
        </member>
        <member name="T:Spectre.Console.GridRow">
            <summary>
            Represents a grid row.
            </summary>
        </member>
        <member name="P:Spectre.Console.GridRow.Item(System.Int32)">
            <summary>
            Gets a row item at the specified grid column index.
            </summary>
            <param name="index">The grid column index.</param>
            <returns>The row item at the specified grid column index.</returns>
        </member>
        <member name="M:Spectre.Console.GridRow.#ctor(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.GridRow"/> class.
            </summary>
            <param name="items">The row items.</param>
        </member>
        <member name="M:Spectre.Console.GridRow.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.GridRow.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Layout">
            <summary>
            Represents a renderable to divide a fixed height into rows or columns.
            </summary>
        </member>
        <member name="P:Spectre.Console.Layout.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Spectre.Console.Layout.Ratio">
            <summary>
            Gets or sets the ratio.
            </summary>
            <remarks>
            Defaults to <c>1</c>.
            Must be greater than <c>0</c>.
            </remarks>
        </member>
        <member name="P:Spectre.Console.Layout.MinimumSize">
            <summary>
            Gets or sets the minimum width.
            </summary>
            <remarks>
            Defaults to <c>1</c>.
            Must be greater than <c>0</c>.
            </remarks>
        </member>
        <member name="P:Spectre.Console.Layout.Size">
            <summary>
            Gets or sets the width.
            </summary>
            <remarks>
            Defaults to <c>null</c>.
            Must be greater than <c>0</c>.
            </remarks>
        </member>
        <member name="P:Spectre.Console.Layout.IsVisible">
            <summary>
            Gets or sets a value indicating whether or not the layout should
            be visible or not.
            </summary>
            <remarks>Defaults to <c>true</c>.</remarks>
        </member>
        <member name="P:Spectre.Console.Layout.Splitter">
            <summary>
            Gets the splitter used for this layout.
            </summary>
        </member>
        <member name="P:Spectre.Console.Layout.Renderable">
            <summary>
            Gets the <see cref="T:Spectre.Console.Rendering.IRenderable"/> associated with this layout.
            </summary>
        </member>
        <member name="P:Spectre.Console.Layout.Item(System.String)">
            <summary>
            Gets a child layout by it's name.
            </summary>
            <param name="name">The layout name.</param>
            <returns>The specified child <see cref="T:Spectre.Console.Layout"/>.</returns>
        </member>
        <member name="M:Spectre.Console.Layout.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Layout"/> class.
            </summary>
            <param name="name">The layout name.</param>
        </member>
        <member name="M:Spectre.Console.Layout.#ctor(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Layout"/> class.
            </summary>
            <param name="renderable">The renderable.</param>
        </member>
        <member name="M:Spectre.Console.Layout.#ctor(System.String,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Layout"/> class.
            </summary>
            <param name="name">The layout name.</param>
            <param name="renderable">The renderable.</param>
        </member>
        <member name="M:Spectre.Console.Layout.GetLayout(System.String)">
            <summary>
            Gets a child layout by it's name.
            </summary>
            <param name="name">The layout name.</param>
            <returns>The specified child <see cref="T:Spectre.Console.Layout"/>.</returns>
        </member>
        <member name="M:Spectre.Console.Layout.SplitRows(Spectre.Console.Layout[])">
            <summary>
            Splits the layout into rows.
            </summary>
            <param name="children">The layout to split into rows.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Layout.SplitColumns(Spectre.Console.Layout[])">
            <summary>
            Splits the layout into columns.
            </summary>
            <param name="children">The layout to split into columns.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Layout.Update(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Updates the containing <see cref="T:Spectre.Console.Rendering.IRenderable"/>.
            </summary>
            <param name="renderable">The renderable to use for this layout.</param>
            /// <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Layout.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Markup">
            <summary>
            A renderable piece of markup text.
            </summary>
        </member>
        <member name="P:Spectre.Console.Markup.Justification">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Markup.Overflow">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Markup.Length">
            <summary>
            Gets the character count.
            </summary>
        </member>
        <member name="P:Spectre.Console.Markup.Lines">
            <summary>
            Gets the number of lines.
            </summary>
        </member>
        <member name="M:Spectre.Console.Markup.#ctor(System.String,Spectre.Console.Style)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Markup"/> class.
            </summary>
            <param name="text">The markup text.</param>
            <param name="style">The style of the text.</param>
        </member>
        <member name="M:Spectre.Console.Markup.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Markup.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Markup.FromInterpolated(System.FormattableString,Spectre.Console.Style)">
            <summary>
            Returns a new instance of a Markup widget from an interpolated string.
            </summary>
            <param name="value">The interpolated string value to write.</param>
            <param name="style">The style of the text.</param>
            <returns>A new markup instance.</returns>
        </member>
        <member name="M:Spectre.Console.Markup.FromInterpolated(System.IFormatProvider,System.FormattableString,Spectre.Console.Style)">
            <summary>
            Returns a new instance of a Markup widget from an interpolated string.
            </summary>
            <param name="provider">The format provider to use.</param>
            <param name="value">The interpolated string value to write.</param>
            <param name="style">The style of the text.</param>
            <returns>A new markup instance.</returns>
        </member>
        <member name="M:Spectre.Console.Markup.Escape(System.String)">
            <summary>
            Escapes text so that it won’t be interpreted as markup.
            </summary>
            <param name="text">The text to escape.</param>
            <returns>A string that is safe to use in markup.</returns>
        </member>
        <member name="M:Spectre.Console.Markup.Remove(System.String)">
            <summary>
            Removes markup from the specified string.
            </summary>
            <param name="text">The text to remove markup from.</param>
            <returns>A string that does not have any markup.</returns>
        </member>
        <member name="T:Spectre.Console.Padder">
            <summary>
            Represents padding around a <see cref="T:Spectre.Console.Rendering.IRenderable"/> object.
            </summary>
        </member>
        <member name="P:Spectre.Console.Padder.Padding">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Padder.Expand">
            <summary>
            Gets or sets a value indicating whether or not the padding should
            fit the available space. If <c>false</c>, the padding width will be
            auto calculated. Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="M:Spectre.Console.Padder.#ctor(Spectre.Console.Rendering.IRenderable,System.Nullable{Spectre.Console.Padding})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Padder"/> class.
            </summary>
            <param name="child">The thing to pad.</param>
            <param name="padding">The padding. Defaults to <c>1,1,1,1</c> if null.</param>
        </member>
        <member name="M:Spectre.Console.Padder.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Padder.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Panel">
            <summary>
            A renderable panel.
            </summary>
        </member>
        <member name="P:Spectre.Console.Panel.Border">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Panel.UseSafeBorder">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Panel.BorderStyle">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Panel.Expand">
            <summary>
            Gets or sets a value indicating whether or not the panel should
            fit the available space. If <c>false</c>, the panel width will be
            auto calculated. Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Panel.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
        </member>
        <member name="P:Spectre.Console.Panel.Header">
            <summary>
            Gets or sets the header.
            </summary>
        </member>
        <member name="P:Spectre.Console.Panel.Width">
            <summary>
            Gets or sets the width of the panel.
            </summary>
        </member>
        <member name="P:Spectre.Console.Panel.Height">
            <summary>
            Gets or sets the height of the panel.
            </summary>
        </member>
        <member name="P:Spectre.Console.Panel.Inline">
            <summary>
            Gets or sets a value indicating whether or not the panel is inlined.
            </summary>
        </member>
        <member name="M:Spectre.Console.Panel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Panel"/> class.
            </summary>
            <param name="text">The panel content.</param>
        </member>
        <member name="M:Spectre.Console.Panel.#ctor(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Panel"/> class.
            </summary>
            <param name="content">The panel content.</param>
        </member>
        <member name="M:Spectre.Console.Panel.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Panel.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.PanelHeader">
            <summary>
            Represents a panel header.
            </summary>
        </member>
        <member name="P:Spectre.Console.PanelHeader.Text">
            <summary>
            Gets the panel header text.
            </summary>
        </member>
        <member name="P:Spectre.Console.PanelHeader.Justification">
            <summary>
            Gets or sets the panel header alignment.
            </summary>
        </member>
        <member name="M:Spectre.Console.PanelHeader.#ctor(System.String,System.Nullable{Spectre.Console.Justify})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.PanelHeader"/> class.
            </summary>
            <param name="text">The panel header text.</param>
            <param name="alignment">The panel header alignment.</param>
        </member>
        <member name="M:Spectre.Console.PanelHeader.SetStyle(Spectre.Console.Style)">
            <summary>
            Sets the panel header style.
            </summary>
            <param name="style">The panel header style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PanelHeader.SetStyle(System.String)">
            <summary>
            Sets the panel header style.
            </summary>
            <param name="style">The panel header style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.PanelHeader.SetAlignment(Spectre.Console.Justify)">
            <summary>
            Sets the panel header alignment.
            </summary>
            <param name="alignment">The panel header alignment.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.Paragraph">
            <summary>
            A paragraph of text where different parts
            of the paragraph can have individual styling.
            </summary>
        </member>
        <member name="P:Spectre.Console.Paragraph.Justification">
            <summary>
            Gets or sets the alignment of the whole paragraph.
            </summary>
        </member>
        <member name="P:Spectre.Console.Paragraph.Overflow">
            <summary>
            Gets or sets the text overflow strategy.
            </summary>
        </member>
        <member name="P:Spectre.Console.Paragraph.Length">
            <summary>
            Gets the character count of the paragraph.
            </summary>
        </member>
        <member name="P:Spectre.Console.Paragraph.Lines">
            <summary>
            Gets the number of lines in the paragraph.
            </summary>
        </member>
        <member name="M:Spectre.Console.Paragraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Paragraph"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.Paragraph.#ctor(System.String,Spectre.Console.Style)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Paragraph"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="style">The style of the text or <see cref="P:Spectre.Console.Style.Plain"/> if <see langword="null"/>.</param>
        </member>
        <member name="M:Spectre.Console.Paragraph.Append(System.String,Spectre.Console.Style)">
            <summary>
            Appends some text to this paragraph.
            </summary>
            <param name="text">The text to append.</param>
            <param name="style">The style of the appended text or <see cref="P:Spectre.Console.Style.Plain"/> if <see langword="null"/>.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Paragraph.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Paragraph.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rows">
            <summary>
            Renders things in rows.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rows.Expand">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rows.#ctor(Spectre.Console.Rendering.IRenderable[])">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rows"/> class.
            </summary>
            <param name="items">The items to render as rows.</param>
        </member>
        <member name="M:Spectre.Console.Rows.#ctor(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rows"/> class.
            </summary>
            <param name="children">The items to render as rows.</param>
        </member>
        <member name="M:Spectre.Console.Rows.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rows.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Rule">
            <summary>
            A renderable horizontal rule.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rule.Title">
            <summary>
            Gets or sets the rule title markup text.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rule.Style">
            <summary>
            Gets or sets the rule style.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rule.Justification">
            <summary>
            Gets or sets the rule's title justification.
            </summary>
        </member>
        <member name="P:Spectre.Console.Rule.Border">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Rule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rule"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.Rule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Rule"/> class.
            </summary>
            <param name="title">The rule title markup text.</param>
        </member>
        <member name="M:Spectre.Console.Rule.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Table">
            <summary>
            A renderable table.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Columns">
            <summary>
            Gets the table columns.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Rows">
            <summary>
            Gets the table rows.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Border">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Table.BorderStyle">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Table.UseSafeBorder">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.Table.ShowHeaders">
            <summary>
            Gets or sets a value indicating whether or not table headers should be shown.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.ShowFooters">
            <summary>
            Gets or sets a value indicating whether or not table footers should be shown.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Expand">
            <summary>
            Gets or sets a value indicating whether or not the table should
            fit the available space. If <c>false</c>, the table width will be
            auto calculated. Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Width">
            <summary>
            Gets or sets the width of the table.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Title">
            <summary>
            Gets or sets the table title.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Caption">
            <summary>
            Gets or sets the table footnote.
            </summary>
        </member>
        <member name="P:Spectre.Console.Table.Alignment">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Table.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Table"/> class.
            </summary>
        </member>
        <member name="M:Spectre.Console.Table.AddColumn(Spectre.Console.TableColumn)">
            <summary>
            Adds a column to the table.
            </summary>
            <param name="column">The column to add.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.Table.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Table.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.TableColumn">
            <summary>
            Represents a table column.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableColumn.Header">
            <summary>
            Gets or sets the column header.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableColumn.Footer">
            <summary>
            Gets or sets the column footer.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableColumn.Width">
            <summary>
            Gets or sets the width of the column.
            If <c>null</c>, the column will adapt to its contents.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableColumn.Padding">
            <summary>
            Gets or sets the padding of the column.
            Vertical padding (top and bottom) is ignored.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableColumn.NoWrap">
            <summary>
            Gets or sets a value indicating whether wrapping of
            text within the column should be prevented.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableColumn.Alignment">
            <summary>
            Gets or sets the alignment of the column.
            </summary>
        </member>
        <member name="M:Spectre.Console.TableColumn.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.TableColumn"/> class.
            </summary>
            <param name="header">The table column header.</param>
        </member>
        <member name="M:Spectre.Console.TableColumn.#ctor(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.TableColumn"/> class.
            </summary>
            <param name="header">The <see cref="T:Spectre.Console.Rendering.IRenderable"/> instance to use as the table column header.</param>
        </member>
        <member name="M:Spectre.Console.TableMeasurer.GetNonColumnWidth">
            <summary>
            Gets the width of everything that's not a cell.
            That means separators, edges and padding.
            </summary>
            <returns>The width of everything that's not a cell.</returns>
        </member>
        <member name="M:Spectre.Console.TableMeasurer.CalculateColumnWidths(System.Int32)">
            <summary>
            Calculates the width of all columns minus any padding.
            </summary>
            <param name="maxWidth">The maximum width that the columns may occupy.</param>
            <returns>A list of column widths.</returns>
        </member>
        <member name="P:Spectre.Console.TableRendererContext.MaxWidth">
            <summary>
            Gets the max width of the destination area.
            The table might take up less than this.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableRendererContext.TableWidth">
            <summary>
            Gets the width of the table.
            </summary>
        </member>
        <member name="T:Spectre.Console.TableRow">
            <summary>
            Represents a table row.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableRow.Count">
            <summary>
            Gets the number of columns in the row.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableRow.Item(System.Int32)">
            <summary>
            Gets a row item at the specified table column index.
            </summary>
            <param name="index">The table column index.</param>
            <returns>The row item at the specified table column index.</returns>
        </member>
        <member name="M:Spectre.Console.TableRow.#ctor(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.TableRow"/> class.
            </summary>
            <param name="items">The row items.</param>
        </member>
        <member name="M:Spectre.Console.TableRow.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.TableRow.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.TableRowCollection">
            <summary>
            Represents a collection holding table rows.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableRowCollection.System#Collections#Generic#IReadOnlyList{Spectre#Console#TableRow}#Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Spectre.Console.TableRowCollection.Count">
            <summary>
            Gets the number of rows in the collection.
            </summary>
        </member>
        <member name="M:Spectre.Console.TableRowCollection.Add(System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Adds a new row.
            </summary>
            <param name="columns">The columns that are part of the row to add.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Spectre.Console.TableRowCollection.Insert(System.Int32,System.Collections.Generic.IEnumerable{Spectre.Console.Rendering.IRenderable})">
            <summary>
            Inserts a new row at the specified index.
            </summary>
            <param name="index">The index to insert the row at.</param>
            <param name="columns">The columns that are part of the row to insert.</param>
            <returns>The index of the inserted item.</returns>
        </member>
        <member name="M:Spectre.Console.TableRowCollection.Update(System.Int32,System.Int32,Spectre.Console.Rendering.IRenderable)">
            <summary>
            Update a table cell at the specified index.
            </summary>
            <param name="row">Index of cell row.</param>
            <param name="column">index of cell column.</param>
            <param name="cellData">The new cells details.</param>
        </member>
        <member name="M:Spectre.Console.TableRowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a row at the specified index.
            </summary>
            <param name="index">The index to remove a row at.</param>
        </member>
        <member name="M:Spectre.Console.TableRowCollection.Clear">
            <summary>
            Clears all rows.
            </summary>
        </member>
        <member name="M:Spectre.Console.TableRowCollection.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.TableRowCollection.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.TableTitle">
            <summary>
            Represents a table title such as a heading or footnote.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableTitle.Text">
            <summary>
            Gets the title text.
            </summary>
        </member>
        <member name="P:Spectre.Console.TableTitle.Style">
            <summary>
            Gets or sets the title style.
            </summary>
        </member>
        <member name="M:Spectre.Console.TableTitle.#ctor(System.String,Spectre.Console.Style)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.TableTitle"/> class.
            </summary>
            <param name="text">The title text.</param>
            <param name="style">The title style.</param>
        </member>
        <member name="M:Spectre.Console.TableTitle.SetStyle(Spectre.Console.Style)">
            <summary>
            Sets the title style.
            </summary>
            <param name="style">The title style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Spectre.Console.TableTitle.SetStyle(System.String)">
            <summary>
            Sets the title style.
            </summary>
            <param name="style">The title style.</param>
            <returns>The same instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Spectre.Console.Text">
            <summary>
            A renderable piece of text.
            </summary>
        </member>
        <member name="P:Spectre.Console.Text.Empty">
            <summary>
            Gets an empty <see cref="T:Spectre.Console.Text"/> instance.
            </summary>
        </member>
        <member name="P:Spectre.Console.Text.NewLine">
            <summary>
            Gets an instance of <see cref="T:Spectre.Console.Text"/> containing a new line.
            </summary>
        </member>
        <member name="M:Spectre.Console.Text.#ctor(System.String,Spectre.Console.Style)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Text"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="style">The style of the text or <see cref="P:Spectre.Console.Style.Plain"/> if <see langword="null"/>.</param>
        </member>
        <member name="P:Spectre.Console.Text.Justification">
            <summary>
            Gets or sets the text alignment.
            </summary>
        </member>
        <member name="P:Spectre.Console.Text.Overflow">
            <summary>
            Gets or sets the text overflow strategy.
            </summary>
        </member>
        <member name="P:Spectre.Console.Text.Length">
            <summary>
            Gets the character count.
            </summary>
        </member>
        <member name="P:Spectre.Console.Text.Lines">
            <summary>
            Gets the number of lines in the text.
            </summary>
        </member>
        <member name="M:Spectre.Console.Text.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.Text.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.TextPath">
            <summary>
            Representation of a file system path.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPath.RootStyle">
            <summary>
            Gets or sets the root style.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPath.SeparatorStyle">
            <summary>
            Gets or sets the separator style.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPath.StemStyle">
            <summary>
            Gets or sets the stem style.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPath.LeafStyle">
            <summary>
            Gets or sets the leaf style.
            </summary>
        </member>
        <member name="P:Spectre.Console.TextPath.Justification">
            <summary>
            Gets or sets the alignment.
            </summary>
        </member>
        <member name="M:Spectre.Console.TextPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.TextPath"/> class.
            </summary>
            <param name="path">The path to render.</param>
        </member>
        <member name="M:Spectre.Console.TextPath.Measure(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Spectre.Console.TextPath.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Spectre.Console.Tree">
            <summary>
            Representation of non-circular tree data.
            Each node added to the tree may only be present in it a single time, in order to facilitate cycle detection.
            </summary>
        </member>
        <member name="P:Spectre.Console.Tree.Style">
            <summary>
            Gets or sets the tree style.
            </summary>
        </member>
        <member name="P:Spectre.Console.Tree.Guide">
            <summary>
             Gets or sets the tree guide lines.
            </summary>
        </member>
        <member name="P:Spectre.Console.Tree.Nodes">
            <summary>
            Gets the tree's child nodes.
            </summary>
        </member>
        <member name="P:Spectre.Console.Tree.Expanded">
            <summary>
            Gets or sets a value indicating whether or not the tree is expanded or not.
            </summary>
        </member>
        <member name="M:Spectre.Console.Tree.#ctor(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Tree"/> class.
            </summary>
            <param name="renderable">The tree label.</param>
        </member>
        <member name="M:Spectre.Console.Tree.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.Tree"/> class.
            </summary>
            <param name="label">The tree label.</param>
        </member>
        <member name="M:Spectre.Console.Tree.Render(Spectre.Console.Rendering.RenderOptions,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Spectre.Console.TreeNode">
            <summary>
            Represents a tree node.
            </summary>
        </member>
        <member name="P:Spectre.Console.TreeNode.Nodes">
            <summary>
            Gets the tree node's child nodes.
            </summary>
        </member>
        <member name="P:Spectre.Console.TreeNode.Expanded">
            <summary>
            Gets or sets a value indicating whether or not the tree node is expanded or not.
            </summary>
        </member>
        <member name="M:Spectre.Console.TreeNode.#ctor(Spectre.Console.Rendering.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spectre.Console.TreeNode"/> class.
            </summary>
            <param name="renderable">The tree node label.</param>
        </member>
    </members>
</doc>
